<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lz&#39;s Notes</title>
  <subtitle>慢慢来，一步一个脚印！</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://melove.net/blog/"/>
  <updated>2016-11-23T11:17:46.000Z</updated>
  <id>http://melove.net/blog/</id>
  
  <author>
    <name>lzan13</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AndroidStudio 开发测试运行 Java 类的 Main 方法</title>
    <link href="http://melove.net/blog/2016/11/android-androidstudio-run-java-10073.html"/>
    <id>http://melove.net/blog/2016/11/android-androidstudio-run-java-10073.html</id>
    <published>2016-11-23T10:57:25.000Z</published>
    <updated>2016-11-23T11:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>自从<code>Google</code>发布了<code>AndroidStudio1.5</code>之后，现在经常使用<code>AndroidStudio</code>开发程序了，在习惯了他的强大之后已经深深的把<code>Eclipse</code>给抛弃了，现在就算有<code>Eclipse</code>的项目也直接导入到<code>AndroidStudio</code>里去查看；不过在有时候发现<code>Eclipse</code>比<code>AndroidStudio</code>还是有一点儿有时的，就是在有时候突然有个小想法，或者想测试小段计算的代码，这个时候也还必须连上手机去运行程序才行，这让我一直很苦恼；</p>
<p>不过后来发现，原来可以通过另外一种方式实现运行<code>java</code>类的<code>main</code>方法，不过在刚开始的测试过程中一直有问题，最近更新了下<code>SDK</code>突然想起来试下，发现成功了，这里记录下，给大家一个参考；</p>
<hr>
<h3 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h3><p>首先如果想实现在<code>AndroidStudio</code>上运行<code>java</code>类，必须有个正常的项目，他是不能直接使用的，有了正常的<code>AndroidStudio</code>项目之后我们就可以在项目上新建一个<code>Module</code>；<br>步骤：</p>
<ol>
<li>创建 Module<blockquote>
<p><code>右击项目</code>-&gt;<code>New</code>-&gt;<code>Module</code></p>
</blockquote>
</li>
<li>然后在弹出界面选择<blockquote>
<p><code>Java Library</code></p>
</blockquote>
</li>
<li>然后填写Libarary的信息就行了<blockquote>
<ul>
<li>Library Name<br>就填写当前 Library 的名字</li>
<li>Java package name<br>当前创建的 Library 包名</li>
<li>Java class<br>当前 Library 第一个类的名字</li>
</ul>
</blockquote>
</li>
</ol>
<h3 id="编码测试"><a href="#编码测试" class="headerlink" title="编码测试"></a>编码测试</h3><p>基础我们都已经做好了，下边就可以开始进行编码测试了，这个编码都要在刚才创建的<code>Library</code>下进行，这样就可以像在<code>Eclipse</code>里进行一样了</p>
<p>创建完成之后就可以看到项目目录下有一个刚才创建的<code>Module</code>，我们的<code>java</code>代码都是在这个<code>library</code>下编写测试;</p>
<p>首先我们要写一个<code>main</code>方法，并在里边输出一句话<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 我们java library 的额第一个类</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MLMain</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * java类的 main方法，可以直接 run</div><div class="line">     * <span class="doctag">@param</span> args</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        System.out.print(<span class="string">"hello java library!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>然后我们可以直接右击当前类，点击<code>Run&#39;MLMain.main()&#39;</code></p>
<p>可以看到控制台输出了我们打印的那句话</p>
<h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>OK了，以后我们就可以愉快的在 AndroidStudio 中测试 java 代码了！</p>
<p>希望这篇文章能对大家有所帮助！O(∩_∩)O~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从&lt;code&gt;Google&lt;/code&gt;发布了&lt;code&gt;AndroidStudio1.5&lt;/code&gt;之后，现在经常使用&lt;code&gt;AndroidStudio&lt;/code&gt;开发程序了，在习惯了他的强大之后已经深深的把&lt;code&gt;Eclipse&lt;/code&gt;给抛弃了，现在
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Module" scheme="http://melove.net/blog/tags/Module/"/>
    
      <category term="Java" scheme="http://melove.net/blog/tags/Java/"/>
    
      <category term="Library" scheme="http://melove.net/blog/tags/Library/"/>
    
  </entry>
  
  <entry>
    <title>SublimeText的使用</title>
    <link href="http://melove.net/blog/2016/05/tool-sublimetext-use-10072.html"/>
    <id>http://melove.net/blog/2016/05/tool-sublimetext-use-10072.html</id>
    <published>2016-05-11T05:37:42.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前一直在使用<code>EditPlus3</code>，后来得知了<code>SublimeText</code>，好牛X的样子，所以就开始使用了</p>
<hr>
<h3 id="首先SublimeText的安装"><a href="#首先SublimeText的安装" class="headerlink" title="首先SublimeText的安装"></a>首先SublimeText的安装</h3><p>先去官方下载安装包，这里下载的是<a href="http://www.sublimetext.com/2" target="_blank" rel="external">SublimeText2</a> 根据安装向导安装就好了</p>
<hr>
<h3 id="Package-Control"><a href="#Package-Control" class="headerlink" title="Package Control"></a>Package Control</h3><p>如果需要给<code>SublimeText</code>安装插件，首先需要安装<code>Package Control</code></p>
<ul>
<li>按<code>Ctrl+``或者</code>View&gt;Show Console<code>打开</code>Console`（SublimeText控制台）</li>
<li><p>粘贴下边的代码到<code>Console</code>并回车，<a href="https://packagecontrol.io/installation" target="_blank" rel="external">Package Control</a></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 2.x版本</span></div><div class="line"><span class="keyword">import</span> urllib2,os,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class="keyword">if</span> not os.path.exists(ipp) <span class="keyword">else</span> None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by) <span class="keyword">if</span> dh == h <span class="keyword">else</span> None; print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)</div><div class="line"></div><div class="line"><span class="comment">// 3.x版本</span></div><div class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manpciual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</div></pre></td></tr></table></figure>
</li>
<li><p>等待左下角的进度完成，然后重启<code>SublimeText2</code>就成功了</p>
</li>
</ul>
<hr>
<h3 id="MarkdownEditing"><a href="#MarkdownEditing" class="headerlink" title="MarkdownEditing"></a>MarkdownEditing</h3><h4 id="安装MarkdownEditing"><a href="#安装MarkdownEditing" class="headerlink" title="安装MarkdownEditing"></a>安装MarkdownEditing</h4><ul>
<li>按下<code>Ctrl+Shift+P</code>然后输入<code>Package Control: Install Package</code>或<code>pci</code>然后在弹出框输入<code>MarkdownEditing</code>回车，等待安装完成，然后重启<code>SublimeText</code>就可以看到<code>Markdown</code>的效果了</li>
<li>此插件可以设置一些主题，不过他的主题对<code>Markdown</code>的语言没作用，只是更改了编辑文本的主题样式</li>
<li>然后就是有一些快捷键比如：<blockquote>
<p>插入链接：<code>win+ctrl+v</code><br>插入图片：<code>win+ctrl+k</code><br>其他详细可以通过打开<code>Ctrl+Shift+P</code>然后输入<code>MarkdownEditing</code>查看</p>
</blockquote>
</li>
</ul>
<hr>
<h3 id="HTML-CSS-JS-Prettify"><a href="#HTML-CSS-JS-Prettify" class="headerlink" title="HTML/CSS/JS Prettify"></a>HTML/CSS/JS Prettify</h3><h4 id="安装HTML-CSS-JS-Prettify"><a href="#安装HTML-CSS-JS-Prettify" class="headerlink" title="安装HTML-CSS-JS Prettify"></a>安装HTML-CSS-JS Prettify</h4><p>按下<code>Ctrl+Shift+P</code>然后输入<code>Package Control: Install Package</code>或<code>pci</code>然后在弹出框输入<code>HTML-CSS-JS Prettify</code>然后回车，等待安装完成重启就行了</p>
<h4 id="配置HTML-CSS-JS-Prettify"><a href="#配置HTML-CSS-JS-Prettify" class="headerlink" title="配置HTML-CSS-JS Prettify"></a>配置HTML-CSS-JS Prettify</h4><p>配置的时候只需要右键<code>HTML/CSS/JS Prettify&gt;Set Plugin Options</code>打开插件的配置文件，修改下<code>nodejs</code>的路径就行了，其中有三个平台的路径，只需要修改自己相应的平台就行了<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  // Simply using `node` without specifying a path sometimes doesn't work :(</div><div class="line">  // https://github.com/victorporof/Sublime-HTMLPrettify#oh-noez-command-not-found</div><div class="line">  // http://nodejs.org/#download</div><div class="line">  "node_path": &#123;</div><div class="line">    "windows": "D:/develop/web/nodejs/node.exe",</div><div class="line">    "linux": "/usr/bin/nodejs",</div><div class="line">    "osx": "/usr/local/bin/node"</div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  // Automatically format when a file is saved.</div><div class="line">  "format_on_save": false,</div><div class="line"></div><div class="line">  // Only format the selection if there's one available.</div><div class="line">  "format_selection_only": true,</div><div class="line"></div><div class="line">  // Log the settings passed to the prettifier from `.jsbeautifyrc`.</div><div class="line">  "print_diagnostics": true</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="Pretty-JSON"><a href="#Pretty-JSON" class="headerlink" title="Pretty JSON"></a>Pretty JSON</h3><h4 id="安装Pretty-JSON"><a href="#安装Pretty-JSON" class="headerlink" title="安装Pretty JSON"></a>安装Pretty JSON</h4><ul>
<li>按下<code>Ctrl+Shift+P</code>然后输入<code>Package Control: Install Package</code>或<code>pci</code>然后在弹出框输入<code>Pretty JSON</code>然后回车等待安装完成</li>
<li>选择<code>Preferences &gt; Package Settings &gt; Pretty JSON &gt; Settings - Default​</code>进行相关设置，其实这个没有什么要设置的</li>
<li>快捷键就是<code>Ctrl+Alt+J</code></li>
</ul>
<hr>
<h3 id="一些常用设置"><a href="#一些常用设置" class="headerlink" title="一些常用设置"></a>一些常用设置</h3><ul>
<li>Tab为4空格：菜单栏<code>View&gt;Indentation&gt;Tab Width: 4</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;之前一直在使用&lt;code&gt;EditPlus3&lt;/code&gt;，后来得知了&lt;code&gt;SublimeText&lt;/code&gt;，好牛X的样
    
    </summary>
    
      <category term="APPShare" scheme="http://melove.net/blog/categories/APPShare/"/>
    
    
      <category term="Share" scheme="http://melove.net/blog/tags/Share/"/>
    
      <category term="Tool" scheme="http://melove.net/blog/tags/Tool/"/>
    
      <category term="Plugin" scheme="http://melove.net/blog/tags/Plugin/"/>
    
      <category term="SublimeText" scheme="http://melove.net/blog/tags/SublimeText/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio优化编译速度</title>
    <link href="http://melove.net/blog/2016/04/android-androidstudio-accelerate-build-10071.html"/>
    <id>http://melove.net/blog/2016/04/android-androidstudio-accelerate-build-10071.html</id>
    <published>2016-04-13T12:37:26.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天AndroidStudio发不了<code>2.0</code>正式版，又不少好的功能，所以就更新了下，不过碍于电脑配置不够，刚升级完编译项目竟然要5分钟之多，我了个去，这还搞毛啊，所以扒一扒有什么能优化的方法，稍微加速点编译速度，其实在<code>1.x</code>的版本时就有过配置优化，经过优化配置后，我的<code>AndroidStudio</code>编译一个全新的项目还是需要<code>1:30</code>没有网上别人说的那么快，应该是电脑配置不够的原因，内存8G，同事的<code>MacBook</code>16G配置，不优化都比我的快，说这么多就是配置够好就够快</p>
<p>废话太多了，开始优化</p>
<h3 id="第一步修改gradle-properties"><a href="#第一步修改gradle-properties" class="headerlink" title="第一步修改gradle.properties"></a>第一步修改gradle.properties</h3><p>首先在当前用户的目录下<code>C:\Users\lzan13\.gradle</code>创建 <code>gradle.properties</code> 文件，并加入如下配置<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">#---------------------------------------------------------------------------------------------------------</div><div class="line"># <span class="number">2016</span>-<span class="number">4</span>-<span class="number">12</span> by lzan13</div><div class="line">#</div><div class="line"># 此文件是对通过 Gradle 编译项目的全局配置，所有项目都有效，其实这些都是根据</div><div class="line"># AndroidStudio 创建的项目的 gradle.properties 文件配置的，原文内容如下注释</div><div class="line">#</div><div class="line">#---------------------------------------------------------------------------------------------------------</div><div class="line">#=========================================================================================================</div><div class="line"># <span class="keyword">Project</span>-wide Gradle settings.</div><div class="line"># IDE (e.g. Android Studio) users:</div><div class="line"># Gradle settings configured through the IDE *will override*</div><div class="line"># <span class="keyword">any</span> settings specified in <span class="keyword">this</span> <span class="keyword">file</span>.</div><div class="line"># <span class="keyword">For</span> more details on how to configure your build environment visit</div><div class="line"># http:<span class="comment">//www.gradle.org/docs/current/userguide/build_environment.html</span></div><div class="line"># Specifies the JVM arguments used <span class="keyword">for</span> the daemon process.</div><div class="line"># The setting is particularly useful <span class="keyword">for</span> tweaking memory settings.</div><div class="line"># <span class="keyword">Default</span> value: -Xmx10248m -XX:MaxPermSize=<span class="number">256</span>m</div><div class="line"># org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=<span class="number">512</span>m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-<span class="number">8</span></div><div class="line"># When configured, Gradle will run in incubating parallel mode.</div><div class="line"># <span class="keyword">This</span> option should only be used with decoupled projects. More details, visit</div><div class="line"># http:<span class="comment">//www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects</span></div><div class="line"># org.gradle.parallel=<span class="keyword">true</span></div><div class="line">#=========================================================================================================</div><div class="line"># 开启Gradle 守护进程</div><div class="line">org.gradle.daemon=<span class="keyword">true</span></div><div class="line"># 使用多线程编译</div><div class="line">org.gradle.parallel=<span class="keyword">true</span></div><div class="line"># 设置JVM 虚拟机内存大小， 后边是设置保存错误日志</div><div class="line">org.gradle.jvmargs=-Xmx1024m -XX:MaxPermSize=<span class="number">256</span>m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-<span class="number">8</span></div><div class="line"># 使用按需配置</div><div class="line">org.gradle.configureondemand=ture</div></pre></td></tr></table></figure></p>
<h3 id="第二步设置-offline"><a href="#第二步设置-offline" class="headerlink" title="第二步设置 offline"></a>第二步设置 offline</h3><p>打开设置面板，找到Build, Execution, Deployment&gt;Build Tools&gt;Gradle<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2016/04/accelerate-image-offline.png" alt="offline"></p>
<h3 id="然后选中Compiler，"><a href="#然后选中Compiler，" class="headerlink" title="然后选中Compiler，"></a>然后选中Compiler，</h3><p>其中四项复选框都可以选中</p>
<blockquote>
<p>1) Compile independent modules in parallel (may require larger heap size) this option is in “incubation” and should only be used with decoupled projects. 表示使用多线程编译，需要更多的堆栈内存<br>2) Make project automatically (only works while not running / debugging). 使项目自动(只工作而不是运行/调试<br>3) use in process build. Faster, and integrated with the “Gradle Console”. 使用过程中构建。更快,结合“Gradle控制台”。<br>4) configure on demand. This option may speed up builds. This option is in “incubation”. Please read Gradle’s documentation. 按需配置这个选项可能会加速构建。此选项在“孵化”。请读它的文档</p>
</blockquote>
<p>其中的命令行需要单独配置<br>可以看下文档 <a href="http://www.gradle.org/docs/current/userguide/gradle_command_line.html" target="_blank" rel="external">Gradle Command</a><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2016/04/accelerate-image-compiler.png" alt="command line"></p>
<p><code>--offline</code>是开启脱机工作<br><code>--profile</code>生成编译记录文件，用来分析哪里耗时<br>（文件目录：<code>CurrProject/build/reports/profile/</code>）<br><a href="http://liaohuqiu.net/posts/speed-up-your-build/" target="_blank" rel="external">这里讲解记录文件的分析</a></p>
<p>###以上配置做完了之后就可以新建项目使用了<br>以上都是全局配置，配置完之后，我们新建项目就会应用这些配置，如果是我们之前创建的项目时不会应用在studio新配置的项，需要打开项目重新配置下；<br>然后又是我们需要更新下项目的一些配置</p>
<h3 id="首先是项目根目录的build-gradle文件更新gradle插件到最新"><a href="#首先是项目根目录的build-gradle文件更新gradle插件到最新" class="headerlink" title="首先是项目根目录的build.gradle文件更新gradle插件到最新"></a>首先是项目根目录的build.gradle文件更新gradle插件到最新</h3><pre><code>classpath &apos;com.android.tools.build:gradle:2.0.0&apos;
</code></pre><p>开启Instant Run，这个默认一般都开启的<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2016/04/accelerate-image-instant-run.png" alt="instant run"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天AndroidStudio发不了&lt;code&gt;2.0&lt;/code&gt;正式版，又不少好的功能，所以就更新了下，不过碍于电脑配置不够，刚升级完编译项目竟然要5分钟之多，我了个去，这还搞毛啊，所以扒一扒有什么能优化的方法，稍微加速点编译速度，其实在&lt;code&gt;1.x&lt;/code
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Accelerate" scheme="http://melove.net/blog/tags/Accelerate/"/>
    
      <category term="Build" scheme="http://melove.net/blog/tags/Build/"/>
    
      <category term="Compile" scheme="http://melove.net/blog/tags/Compile/"/>
    
      <category term="InstantRun" scheme="http://melove.net/blog/tags/InstantRun/"/>
    
      <category term="Offline" scheme="http://melove.net/blog/tags/Offline/"/>
    
  </entry>
  
  <entry>
    <title>Android开发集成聊天环信SDK3.x简单开始</title>
    <link href="http://melove.net/blog/2016/04/android-easemob-3x-simple-start-10070.html"/>
    <id>http://melove.net/blog/2016/04/android-easemob-3x-simple-start-10070.html</id>
    <published>2016-04-07T03:04:07.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>环信已经发部了<code>SDK3.x</code>版本，<code>SDK3.x</code>相对于<code>SDK2.x</code>来说是整个进行了重写，<code>API</code>变化还是比较大的，已经熟悉<code>SDK2.x</code>的开发者在使用新的<code>SDK3.x</code>还是会遇到不少问题的，不过还好官方给出了<code>SDK2.x</code>升级<code>SDK3.x</code>指南，已经熟悉<code>SDK2.x</code>开发者可以根据文档了解<code>SDK3.x</code>的变化，新集成的开发者可以直接参考<code>SDK3.x</code>进行集成；<br>这里简单的实现了sdk的初始化以及注册登录和收发消息，不过ui上没有没有去做很好的处理</p>
<h3 id="先看效果图"><a href="#先看效果图" class="headerlink" title="先看效果图"></a>先看效果图</h3><p><img src="http://lzan13.qiniudn.com/blog/uploads/images/2016/4/ec-demo.gif" alt="ec-demo"></p>
<h3 id="提供一些地址"><a href="#提供一些地址" class="headerlink" title="提供一些地址"></a>提供一些地址</h3><ul>
<li><p>当前项目地址，可以直接 clone 运行<br><a href="https://github.com/lzan13/EaseChat" target="_blank" rel="external">EaseChat Github</a>  </p>
</li>
<li><p>AndroidStudio下载<br><a href="http://tools.android.com/download/studio/builds/2-0" target="_blank" rel="external">Android官方下载</a><br><a href="http://androiddevtools.cn/" target="_blank" rel="external">国内提供 AndroidDevTools</a>  </p>
</li>
<li><p>模拟器 Genymotion下载<br><a href="http://genymotion.com/" target="_blank" rel="external">Genymotion 官网</a>  </p>
</li>
<li><p>环信官方文档<br><a href="http://docs.easemob.com/im/start" target="_blank" rel="external">SDK3.x 文档</a><br><a href="http://www.easemob.com/apidoc/android/chat3.0/annotated.html" target="_blank" rel="external">SDK3.x API 文档</a><br><a href="http://docs.easemob.com/im/200androidcleintintegration/140upgradetov30" target="_blank" rel="external">SDK2.x 升级 SDK3.x 文档</a>  </p>
</li>
</ul>
<h3 id="说下我当前开发环境"><a href="#说下我当前开发环境" class="headerlink" title="说下我当前开发环境"></a>说下我当前开发环境</h3><p>这里并不是一定要按照我的配置来，只是说下当前项目开发运行的环境，如果你的开发环境不同可能需要自己修改下项目配置<code>build.gradle</code>文件</p>
<blockquote>
<p>AndroidStudio 2.0<br>Gradle 2.10（跟随AndroidStudio 一起更新）<br>Android SDK Tool 25.1.1<br>Android Build-tools 23.0.2<br>Android Support 最新<br>Genymotion 2.6  </p>
</blockquote>
<p>如果你还是用的<code>Eclipse</code>，可以下载<code>AndroidStudio</code>尝试下，如果你上不了<code>Android</code>官网，不懂怎么翻墙可以找下国内开发提供的一些地址</p>
<h3 id="开始集成"><a href="#开始集成" class="headerlink" title="开始集成"></a>开始集成</h3><p>这次要实现 <code>SDK的初始化</code>、<code>SDK端的注册登录</code>、<code>消息的发送和监听</code>这三步</p>
<h4 id="SDK的初始化"><a href="#SDK的初始化" class="headerlink" title="SDK的初始化"></a>SDK的初始化</h4><p>这个初始化时在Application里进行的，这里定义了一个方法去初始化环信的SDK，并在其中进行了一些设置<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.easechat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.ActivityManager;</div><div class="line"><span class="keyword">import</span> android.app.Application;</div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMClient;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMOptions;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Iterator;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by lz on 2016/4/16.</div><div class="line"> * 项目的 Application类，做一些项目的初始化操作，比如sdk的初始化等</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ECApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 上下文菜单</span></div><div class="line">    <span class="keyword">private</span> Context mContext;</div><div class="line"></div><div class="line">    <span class="comment">// 记录是否已经初始化</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isInit = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate();</div><div class="line">        mContext = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">        <span class="comment">// 初始化环信SDK</span></div><div class="line">        initEasemob();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     *</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initEasemob</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 获取当前进程 id 并取得进程名</span></div><div class="line">        <span class="keyword">int</span> pid = android.os.Process.myPid();</div><div class="line">        String processAppName = getAppName(pid);</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * 如果app启用了远程的service，此application:onCreate会被调用2次</div><div class="line">         * 为了防止环信SDK被初始化2次，加此判断会保证SDK被初始化1次</div><div class="line">         * 默认的app会在以包名为默认的process name下运行，如果查到的process name不是app的process name就立即返回</div><div class="line">         */</div><div class="line">        <span class="keyword">if</span> (processAppName == <span class="keyword">null</span> || !processAppName.equalsIgnoreCase(mContext.getPackageName())) &#123;</div><div class="line">            <span class="comment">// 则此application的onCreate 是被service 调用的，直接返回</span></div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (isInit) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * SDK初始化的一些配置</div><div class="line">         * 关于 EMOptions 可以参考官方的 API 文档</div><div class="line">         * http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1chat_1_1_e_m_options.html</div><div class="line">         */</div><div class="line">        EMOptions options = <span class="keyword">new</span> EMOptions();</div><div class="line">        <span class="comment">// 设置Appkey，如果配置文件已经配置，这里可以不用设置</span></div><div class="line">        <span class="comment">// options.setAppKey("lzan13#hxsdkdemo");</span></div><div class="line">        <span class="comment">// 设置自动登录</span></div><div class="line">        options.setAutoLogin(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置是否需要发送已读回执</span></div><div class="line">        options.setRequireAck(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置是否需要发送回执，TODO 这个暂时有bug，上层收不到发送回执</span></div><div class="line">        options.setRequireDeliveryAck(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置是否需要服务器收到消息确认</span></div><div class="line">        options.setRequireServerAck(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 收到好友申请是否自动同意，如果是自动同意就不会收到好友请求的回调，因为sdk会自动处理，默认为true</span></div><div class="line">        options.setAcceptInvitationAlways(<span class="keyword">false</span>);</div><div class="line">        <span class="comment">// 设置是否自动接收加群邀请，如果设置了当收到群邀请会自动同意加入</span></div><div class="line">        options.setAutoAcceptGroupInvitation(<span class="keyword">false</span>);</div><div class="line">        <span class="comment">// 设置（主动或被动）退出群组时，是否删除群聊聊天记录</span></div><div class="line">        options.setDeleteMessagesAsExitGroup(<span class="keyword">false</span>);</div><div class="line">        <span class="comment">// 设置是否允许聊天室的Owner 离开并删除聊天室的会话</span></div><div class="line">        options.allowChatroomOwnerLeave(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置google GCM推送id，国内可以不用设置</span></div><div class="line">        <span class="comment">// options.setGCMNumber(MLConstants.ML_GCM_NUMBER);</span></div><div class="line">        <span class="comment">// 设置集成小米推送的appid和appkey</span></div><div class="line">        <span class="comment">// options.setMipushConfig(MLConstants.ML_MI_APP_ID, MLConstants.ML_MI_APP_KEY);</span></div><div class="line"></div><div class="line">        <span class="comment">// 调用初始化方法初始化sdk</span></div><div class="line">        EMClient.getInstance().init(mContext, options);</div><div class="line"></div><div class="line">        <span class="comment">// 设置开启debug模式</span></div><div class="line">        EMClient.getInstance().setDebugMode(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">        <span class="comment">// 设置初始化已经完成</span></div><div class="line">        isInit = <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据Pid获取当前进程的名字，一般就是当前app的包名</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> pid 进程的id</div><div class="line">     * <span class="doctag">@return</span> 返回进程的名字</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getAppName</span><span class="params">(<span class="keyword">int</span> pid)</span> </span>&#123;</div><div class="line">        String processName = <span class="keyword">null</span>;</div><div class="line">        ActivityManager activityManager = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);</div><div class="line">        List list = activityManager.getRunningAppProcesses();</div><div class="line">        Iterator i = list.iterator();</div><div class="line">        <span class="keyword">while</span> (i.hasNext()) &#123;</div><div class="line">            ActivityManager.RunningAppProcessInfo info = (ActivityManager.RunningAppProcessInfo) (i.next());</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (info.pid == pid) &#123;</div><div class="line">                    <span class="comment">// 根据进程的信息获取当前进程的名字</span></div><div class="line">                    processName = info.processName;</div><div class="line">                    <span class="comment">// 返回当前进程名</span></div><div class="line">                    <span class="keyword">return</span> processName;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 没有匹配的项，返回为null</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h4><p>app启动后默认会进入到<code>ECMainActivity</code>，不过在主界面会先判断一下是否登录成功过，如果没有，就会跳转到登录几面，然后我们调用登录的时候，在登录方法的<code>onSuccess()</code>回调中我们进行了界面的跳转，跳转到主界面，在主界面我们可以发起回话；<br>看下主界面的详细代码实现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.easechat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.text.TextUtils;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.hyphenate.EMCallBack;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMClient;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ECMainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 发起聊天 username 输入框</span></div><div class="line">    <span class="keyword">private</span> EditText mChatIdEdit;</div><div class="line">    <span class="comment">// 发起聊天</span></div><div class="line">    <span class="keyword">private</span> Button mStartChatBtn;</div><div class="line">    <span class="comment">// 退出登录</span></div><div class="line">    <span class="keyword">private</span> Button mSignOutBtn;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line"></div><div class="line">        <span class="comment">// 判断sdk是否登录成功过，并没有退出和被踢，否则跳转到登陆界面</span></div><div class="line">        <span class="keyword">if</span> (!EMClient.getInstance().isLoggedInBefore()) &#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(ECMainActivity.<span class="keyword">this</span>, ECLoginActivity.class);</div><div class="line">            startActivity(intent);</div><div class="line">            finish();</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化界面</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        mChatIdEdit = (EditText) findViewById(R.id.ec_edit_chat_id);</div><div class="line"></div><div class="line">        mStartChatBtn = (Button) findViewById(R.id.ec_btn_start_chat);</div><div class="line">        mStartChatBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="comment">// 获取我们发起聊天的者的username</span></div><div class="line">                String chatId = mChatIdEdit.getText().toString().trim();</div><div class="line">                <span class="keyword">if</span> (!TextUtils.isEmpty(chatId)) &#123;</div><div class="line">                    <span class="comment">// 获取当前登录用户的 username</span></div><div class="line">                    String currUsername = EMClient.getInstance().getCurrentUser();</div><div class="line">                    <span class="keyword">if</span> (chatId.equals(currUsername)) &#123;</div><div class="line">                        Toast.makeText(ECMainActivity.<span class="keyword">this</span>, <span class="string">"不能和自己聊天"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                        <span class="keyword">return</span>;</div><div class="line">                    &#125;</div><div class="line">                    <span class="comment">// 跳转到聊天界面，开始聊天</span></div><div class="line">                    Intent intent = <span class="keyword">new</span> Intent(ECMainActivity.<span class="keyword">this</span>, ECChatActivity.class);</div><div class="line">                    intent.putExtra(<span class="string">"ec_chat_id"</span>, chatId);</div><div class="line">                    startActivity(intent);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Toast.makeText(ECMainActivity.<span class="keyword">this</span>, <span class="string">"Username 不能为空"</span>, Toast.LENGTH_LONG).show();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        mSignOutBtn = (Button) findViewById(R.id.ec_btn_sign_out);</div><div class="line">        mSignOutBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                signOut();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 退出登录</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signOut</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 调用sdk的退出登录方法，第一个参数表示是否解绑推送的token，没有使用推送或者被踢都要传false</span></div><div class="line">        EMClient.getInstance().logout(<span class="keyword">false</span>, <span class="keyword">new</span> EMCallBack() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">                Log.i(<span class="string">"lzan13"</span>, <span class="string">"logout success"</span>);</div><div class="line">                <span class="comment">// 调用退出成功，结束app</span></div><div class="line">                finish();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line">                Log.i(<span class="string">"lzan13"</span>, <span class="string">"logout error "</span> + i + <span class="string">" - "</span> + s);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="SDK端的注册登录"><a href="#SDK端的注册登录" class="headerlink" title="SDK端的注册登录"></a>SDK端的注册登录</h4><p>SDK初始化做完之后，就是需要进行环信的登录了，登录了才能使用环信的功能，才能收发消息，有不少人经常问，不注册账户能使用么，这是聊天sdk，不注册账户你拿什么聊天呢！<br>登录调用<code>EMClient.getInstance().login(username, password, callback);</code>此方法是一个异步方法，所以需要设置<code>EMCallback</code>回调来接收登录结果；<br>注册调用<code>EMClient.getInstance().createAccount(username, password);</code>此方法是同步方法，需要自己创建新线程去调用，不能放在UI线程直接调用；<br>因为只是个简单的demo，这边把登录和注册都卸载了LoginActivity类里，这个方法中对调用环信sdk的方法返回错误值做了一些判断，具体错误信息可以参考官方文档：<br><a href="http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1_e_m_error.html" target="_blank" rel="external">环信SDK3.x EMError</a></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.easechat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.ProgressDialog;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.hyphenate.EMCallBack;</div><div class="line"><span class="keyword">import</span> com.hyphenate.EMError;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMClient;</div><div class="line"><span class="keyword">import</span> com.hyphenate.exceptions.HyphenateException;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ECLoginActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 弹出框</span></div><div class="line">    <span class="keyword">private</span> ProgressDialog mDialog;</div><div class="line"></div><div class="line">    <span class="comment">// username 输入框</span></div><div class="line">    <span class="keyword">private</span> EditText mUsernameEdit;</div><div class="line">    <span class="comment">// 密码输入框</span></div><div class="line">    <span class="keyword">private</span> EditText mPasswordEdit;</div><div class="line"></div><div class="line">    <span class="comment">// 注册按钮</span></div><div class="line">    <span class="keyword">private</span> Button mSignUpBtn;</div><div class="line">    <span class="comment">// 登录按钮</span></div><div class="line">    <span class="keyword">private</span> Button mSignInBtn;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_login);</div><div class="line"></div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化界面控件</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        mUsernameEdit = (EditText) findViewById(R.id.ec_edit_username);</div><div class="line">        mPasswordEdit = (EditText) findViewById(R.id.ec_edit_password);</div><div class="line"></div><div class="line">        mSignUpBtn = (Button) findViewById(R.id.ec_btn_sign_up);</div><div class="line">        mSignUpBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                signUp();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        mSignInBtn = (Button) findViewById(R.id.ec_btn_sign_in);</div><div class="line">        mSignInBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                signIn();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 注册方法</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signUp</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 注册是耗时过程，所以要显示一个dialog来提示下用户</span></div><div class="line">        mDialog = <span class="keyword">new</span> ProgressDialog(<span class="keyword">this</span>);</div><div class="line">        mDialog.setMessage(<span class="string">"注册中，请稍后..."</span>);</div><div class="line">        mDialog.show();</div><div class="line"></div><div class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    String username = mUsernameEdit.getText().toString().trim();</div><div class="line">                    String password = mPasswordEdit.getText().toString().trim();</div><div class="line">                    EMClient.getInstance().createAccount(username, password);</div><div class="line">                    runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                            <span class="keyword">if</span> (!ECLoginActivity.<span class="keyword">this</span>.isFinishing()) &#123;</div><div class="line">                                mDialog.dismiss();</div><div class="line">                            &#125;</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"注册成功"</span>, Toast.LENGTH_LONG).show();</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> HyphenateException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                    runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                            <span class="keyword">if</span> (!ECLoginActivity.<span class="keyword">this</span>.isFinishing()) &#123;</div><div class="line">                                mDialog.dismiss();</div><div class="line">                            &#125;</div><div class="line">                            <span class="comment">/**</span></div><div class="line">                             * 关于错误码可以参考官方api详细说明</div><div class="line">                             * http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1_e_m_error.html</div><div class="line">                             */</div><div class="line">                            <span class="keyword">int</span> errorCode = e.getErrorCode();</div><div class="line">                            String message = e.getMessage();</div><div class="line">                            Log.d(<span class="string">"lzan13"</span>, String.format(<span class="string">"sign up - errorCode:%d, errorMsg:%s"</span>, errorCode, e.getMessage()));</div><div class="line">                            <span class="keyword">switch</span> (errorCode) &#123;</div><div class="line">                            <span class="comment">// 网络错误</span></div><div class="line">                            <span class="keyword">case</span> EMError.NETWORK_ERROR:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"网络错误 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="comment">// 用户已存在</span></div><div class="line">                            <span class="keyword">case</span> EMError.USER_ALREADY_EXIST:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"用户已存在 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="comment">// 参数不合法，一般情况是username 使用了uuid导致，不能使用uuid注册</span></div><div class="line">                            <span class="keyword">case</span> EMError.USER_ILLEGAL_ARGUMENT:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"参数不合法，一般情况是username 使用了uuid导致，不能使用uuid注册 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="comment">// 服务器未知错误</span></div><div class="line">                            <span class="keyword">case</span> EMError.SERVER_UNKNOWN_ERROR:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"服务器未知错误 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="keyword">case</span> EMError.USER_REG_FAILED:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"账户注册失败 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="keyword">default</span>:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"ml_sign_up_failed code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;).start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 登录方法</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signIn</span><span class="params">()</span> </span>&#123;</div><div class="line">        mDialog = <span class="keyword">new</span> ProgressDialog(<span class="keyword">this</span>);</div><div class="line">        mDialog.setMessage(<span class="string">"正在登陆，请稍后..."</span>);</div><div class="line">        mDialog.show();</div><div class="line">        String username = mUsernameEdit.getText().toString().trim();</div><div class="line">        String password = mPasswordEdit.getText().toString().trim();</div><div class="line">        EMClient.getInstance().login(username, password, <span class="keyword">new</span> EMCallBack() &#123;</div><div class="line">            <span class="comment">/**</span></div><div class="line">             * 登陆成功的回调</div><div class="line">             */</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">                runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        mDialog.dismiss();</div><div class="line"></div><div class="line">                        <span class="comment">// 加载所有会话到内存</span></div><div class="line">                        EMClient.getInstance().chatManager().loadAllConversations();</div><div class="line">                        <span class="comment">// 加载所有群组到内存，如果使用了群组的话</span></div><div class="line">                        <span class="comment">// EMClient.getInstance().groupManager().loadAllGroups();</span></div><div class="line"></div><div class="line">                        <span class="comment">// 登录成功跳转界面</span></div><div class="line">                        Intent intent = <span class="keyword">new</span> Intent(ECLoginActivity.<span class="keyword">this</span>, ECMainActivity.class);</div><div class="line">                        startActivity(intent);</div><div class="line">                        finish();</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">/**</span></div><div class="line">             * 登陆错误的回调</div><div class="line">             * <span class="doctag">@param</span> i</div><div class="line">             * <span class="doctag">@param</span> s</div><div class="line">             */</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> i, <span class="keyword">final</span> String s)</span> </span>&#123;</div><div class="line">                runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        mDialog.dismiss();</div><div class="line">                        Log.d(<span class="string">"lzan13"</span>, <span class="string">"登录失败 Error code:"</span> + i + <span class="string">", message:"</span> + s);</div><div class="line">                        <span class="comment">/**</span></div><div class="line">                         * 关于错误码可以参考官方api详细说明</div><div class="line">                         * http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1_e_m_error.html</div><div class="line">                         */</div><div class="line">                        <span class="keyword">switch</span> (i) &#123;</div><div class="line">                        <span class="comment">// 网络异常 2</span></div><div class="line">                        <span class="keyword">case</span> EMError.NETWORK_ERROR:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"网络错误 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 无效的用户名 101</span></div><div class="line">                        <span class="keyword">case</span> EMError.INVALID_USER_NAME:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"无效的用户名 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 无效的密码 102</span></div><div class="line">                        <span class="keyword">case</span> EMError.INVALID_PASSWORD:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"无效的密码 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 用户认证失败，用户名或密码错误 202</span></div><div class="line">                        <span class="keyword">case</span> EMError.USER_AUTHENTICATION_FAILED:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"用户认证失败，用户名或密码错误 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 用户不存在 204</span></div><div class="line">                        <span class="keyword">case</span> EMError.USER_NOT_FOUND:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"用户不存在 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 无法访问到服务器 300</span></div><div class="line">                        <span class="keyword">case</span> EMError.SERVER_NOT_REACHABLE:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"无法访问到服务器 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 等待服务器响应超时 301</span></div><div class="line">                        <span class="keyword">case</span> EMError.SERVER_TIMEOUT:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"等待服务器响应超时 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 服务器繁忙 302</span></div><div class="line">                        <span class="keyword">case</span> EMError.SERVER_BUSY:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"服务器繁忙 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 未知 Server 异常 303 一般断网会出现这个错误</span></div><div class="line">                        <span class="keyword">case</span> EMError.SERVER_UNKNOWN_ERROR:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"未知的服务器异常 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="keyword">default</span>:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"ml_sign_in_failed code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="消息的发送和监听"><a href="#消息的发送和监听" class="headerlink" title="消息的发送和监听"></a>消息的发送和监听</h4><p>实现消息的接收需要添加<code>EMMessageListener</code>消息监听接口，我们在需要监听的地方要实现这个接口，并实现接口里边的几个回调方法：  </p>
<blockquote>
<p>onMessageReceived(List<emmessage> list)新消息的回调<br>onCmdMessageReceived(List<emmessage> list)新的透传消息回调<br>onMessageReadAckReceived(List<emmessage> list)消息已读回调<br>onMessageDeliveryAckReceived(List<emmessage> list)消息已发送回调<br>onMessageChanged(EMMessage message, Object object)消息状态改变回调  </emmessage></emmessage></emmessage></emmessage></p>
</blockquote>
<p>下边是聊天界面消息监听与发送的完整实现，代码注释比较详细，不再一一解释<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.easechat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.os.Handler;</div><div class="line"><span class="keyword">import</span> android.os.Message;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.text.TextUtils;</div><div class="line"><span class="keyword">import</span> android.text.method.ScrollingMovementMethod;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.hyphenate.EMCallBack;</div><div class="line"><span class="keyword">import</span> com.hyphenate.EMMessageListener;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMClient;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMCmdMessageBody;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMConversation;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMMessage;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMTextMessageBody;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ECChatActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">EMMessageListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 聊天信息输入框</span></div><div class="line">    <span class="keyword">private</span> EditText mInputEdit;</div><div class="line">    <span class="comment">// 发送按钮</span></div><div class="line">    <span class="keyword">private</span> Button mSendBtn;</div><div class="line"></div><div class="line">    <span class="comment">// 显示内容的 TextView</span></div><div class="line">    <span class="keyword">private</span> TextView mContentText;</div><div class="line"></div><div class="line">    <span class="comment">// 消息监听器</span></div><div class="line">    <span class="keyword">private</span> EMMessageListener mMessageListener;</div><div class="line">    <span class="comment">// 当前聊天的 ID</span></div><div class="line">    <span class="keyword">private</span> String mChatId;</div><div class="line">    <span class="comment">// 当前会话对象</span></div><div class="line">    <span class="keyword">private</span> EMConversation mConversation;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_chat);</div><div class="line"></div><div class="line">        <span class="comment">// 获取当前会话的username(如果是群聊就是群id)</span></div><div class="line">        mChatId = getIntent().getStringExtra(<span class="string">"ec_chat_id"</span>);</div><div class="line">        mMessageListener = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">        initView();</div><div class="line">        initConversation();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化界面</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        mInputEdit = (EditText) findViewById(R.id.ec_edit_message_input);</div><div class="line">        mSendBtn = (Button) findViewById(R.id.ec_btn_send);</div><div class="line">        mContentText = (TextView) findViewById(R.id.ec_text_content);</div><div class="line">        <span class="comment">// 设置textview可滚动，需配合xml布局设置</span></div><div class="line">        mContentText.setMovementMethod(<span class="keyword">new</span> ScrollingMovementMethod());</div><div class="line"></div><div class="line">        <span class="comment">// 设置发送按钮的点击事件</span></div><div class="line">        mSendBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                String content = mInputEdit.getText().toString().trim();</div><div class="line">                <span class="keyword">if</span> (!TextUtils.isEmpty(content)) &#123;</div><div class="line">                    mInputEdit.setText(<span class="string">""</span>);</div><div class="line">                    <span class="comment">// 创建一条新消息，第一个参数为消息内容，第二个为接受者username</span></div><div class="line">                    EMMessage message = EMMessage.createTxtSendMessage(content, mChatId);</div><div class="line">                    <span class="comment">// 将新的消息内容和时间加入到下边</span></div><div class="line">                    mContentText.setText(mContentText.getText() + <span class="string">"\n"</span> + content + <span class="string">" -&gt; "</span> + message.getMsgTime());</div><div class="line">                    <span class="comment">// 调用发送消息的方法</span></div><div class="line">                    EMClient.getInstance().chatManager().sendMessage(message);</div><div class="line">                    <span class="comment">// 为消息设置回调</span></div><div class="line">                    message.setMessageStatusCallback(<span class="keyword">new</span> EMCallBack() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">                            <span class="comment">// 消息发送成功，打印下日志，正常操作应该去刷新ui</span></div><div class="line">                            Log.i(<span class="string">"lzan13"</span>, <span class="string">"send message on success"</span>);</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line">                            <span class="comment">// 消息发送失败，打印下失败的信息，正常操作应该去刷新ui</span></div><div class="line">                            Log.i(<span class="string">"lzan13"</span>, <span class="string">"send message on error "</span> + i + <span class="string">" - "</span> + s);</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line">                            <span class="comment">// 消息发送进度，一般只有在发送图片和文件等消息才会有回调，txt不回调</span></div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化会话对象，并且根据需要加载更多消息</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initConversation</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * 初始化会话对象，这里有三个参数么，</div><div class="line">         * 第一个表示会话的当前聊天的 useranme 或者 groupid</div><div class="line">         * 第二个是绘画类型可以为空</div><div class="line">         * 第三个表示如果会话不存在是否创建</div><div class="line">         */</div><div class="line">        mConversation = EMClient.getInstance().chatManager().getConversation(mChatId, <span class="keyword">null</span>, <span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置当前会话未读数为 0</span></div><div class="line">        mConversation.markAllMessagesAsRead();</div><div class="line">        <span class="keyword">int</span> count = mConversation.getAllMessages().size();</div><div class="line">        <span class="keyword">if</span> (count &lt; mConversation.getAllMsgCount() &amp;&amp; count &lt; <span class="number">20</span>) &#123;</div><div class="line">            <span class="comment">// 获取已经在列表中的最上边的一条消息id</span></div><div class="line">            String msgId = mConversation.getAllMessages().get(<span class="number">0</span>).getMsgId();</div><div class="line">            <span class="comment">// 分页加载更多消息，需要传递已经加载的消息的最上边一条消息的id，以及需要加载的消息的条数</span></div><div class="line">            mConversation.loadMoreMsgFromDB(msgId, <span class="number">20</span> - count);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 打开聊天界面获取最后一条消息内容并显示</span></div><div class="line">        <span class="keyword">if</span> (mConversation.getAllMessages().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            EMMessage messge = mConversation.getLastMessage();</div><div class="line">            EMTextMessageBody body = (EMTextMessageBody) messge.getBody();</div><div class="line">            <span class="comment">// 将消息内容和时间显示出来</span></div><div class="line">            mContentText.setText(body.getMessage() + <span class="string">" - "</span> + mConversation.getLastMessage().getMsgTime());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 自定义实现Handler，主要用于刷新UI操作</div><div class="line">     */</div><div class="line">    Handler mHandler = <span class="keyword">new</span> Handler() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">switch</span> (msg.what) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">                EMMessage message = (EMMessage) msg.obj;</div><div class="line">                <span class="comment">// 这里只是简单的demo，也只是测试文字消息的收发，所以直接将body转为EMTextMessageBody去获取内容</span></div><div class="line">                EMTextMessageBody body = (EMTextMessageBody) message.getBody();</div><div class="line">                <span class="comment">// 将新的消息内容和时间加入到下边</span></div><div class="line">                mContentText.setText(mContentText.getText() + <span class="string">"\n"</span> + body.getMessage() + <span class="string">" &lt;- "</span> + message.getMsgTime());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onResume();</div><div class="line">        <span class="comment">// 添加消息监听</span></div><div class="line">        EMClient.getInstance().chatManager().addMessageListener(mMessageListener);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onStop();</div><div class="line">        <span class="comment">// 移除消息监听</span></div><div class="line">        EMClient.getInstance().chatManager().removeMessageListener(mMessageListener);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * --------------------------------- Message Listener -------------------------------------</div><div class="line">     * 环信消息监听主要方法</div><div class="line">     */</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 收到新消息</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> list 收到的新消息集合</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageReceived</span><span class="params">(List&lt;EMMessage&gt; list)</span> </span>&#123;</div><div class="line">        <span class="comment">// 循环遍历当前收到的消息</span></div><div class="line">        <span class="keyword">for</span> (EMMessage message : list) &#123;</div><div class="line">            <span class="keyword">if</span> (message.getFrom().equals(mChatId)) &#123;</div><div class="line">                <span class="comment">// 设置消息为已读</span></div><div class="line">                mConversation.markMessageAsRead(message.getMsgId());</div><div class="line"></div><div class="line">                <span class="comment">// 因为消息监听回调这里是非ui线程，所以要用handler去更新ui</span></div><div class="line">                Message msg = mHandler.obtainMessage();</div><div class="line">                msg.what = <span class="number">0</span>;</div><div class="line">                msg.obj = message;</div><div class="line">                mHandler.sendMessage(msg);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// 如果消息不是当前会话的消息发送通知栏通知</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 收到新的 CMD 消息</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> list</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCmdMessageReceived</span><span class="params">(List&lt;EMMessage&gt; list)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</div><div class="line">            <span class="comment">// 透传消息</span></div><div class="line">            EMMessage cmdMessage = list.get(i);</div><div class="line">            EMCmdMessageBody body = (EMCmdMessageBody) cmdMessage.getBody();</div><div class="line">            Log.i(<span class="string">"lzan13"</span>, body.action());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 收到新的已读回执</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> list 收到消息已读回执</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageReadAckReceived</span><span class="params">(List&lt;EMMessage&gt; list)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 收到新的发送回执</div><div class="line">     * TODO 无效 暂时有bug</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> list 收到发送回执的消息集合</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageDeliveryAckReceived</span><span class="params">(List&lt;EMMessage&gt; list)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 消息的状态改变</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> message 发生改变的消息</div><div class="line">     * <span class="doctag">@param</span> object  包含改变的消息</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageChanged</span><span class="params">(EMMessage message, Object object)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="界面布局"><a href="#界面布局" class="headerlink" title="界面布局"></a>界面布局</h4><p>界面的实现也是非常简单，这里直接贴一下：<br>activity_main.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"net.melove.demo.easechat.ECMainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_edit_chat_id"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:hint</span>=<span class="string">"对方的username"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_start_chat"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"发起聊天"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_sign_out"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"退出登录"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>activity_login.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"net.melove.demo.easechat.ECLoginActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_edit_username"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:hint</span>=<span class="string">"username"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_edit_password"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:hint</span>=<span class="string">"password"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_sign_up"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"注册"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_sign_in"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"登录"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>activity_chat.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"net.melove.demo.easechat.ECChatActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!--输入框--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ec_layout_input"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_send"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"Send"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_edit_message_input"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:layout_toLeftOf</span>=<span class="string">"@id/ec_btn_send"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--展示消息内容--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ec_text_content"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_above</span>=<span class="string">"@id/ec_layout_input"</span></div><div class="line">        <span class="attr">android:maxLines</span>=<span class="string">"15"</span></div><div class="line">        <span class="attr">android:scrollbars</span>=<span class="string">"vertical"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="别忘了配置文件"><a href="#别忘了配置文件" class="headerlink" title="别忘了配置文件"></a>别忘了配置文件</h4><p>最后我们需要配置一些权限，我们的代码才能很好的工作<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">package</span>=<span class="string">"net.melove.demo.easechat"</span></span></div><div class="line">          <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</div><div class="line">    <span class="comment">&lt;!-- 项目权限 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 相机 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CAMERA"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 录音 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECORD_AUDIO"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 震动 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.VIBRATE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 网络 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 访问网络状态 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 访问WIFI状态 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 写入外部存储 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 访问精确定位 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 修改音频设置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.MODIFY_AUDIO_SETTINGS"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 读取手机状态 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 允许读写系统设置项 使用设置时需要 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_SETTINGS"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 读取启动设置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.android.launcher.permission.READ_SETTINGS"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--非必需权限--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 开机自启动 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.GET_TASKS"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 安装卸载文件系统 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 改变WIFI状态 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 读取描述文件 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.READ_PROFILE"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 读取联系人 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.READ_CONTACTS"/&gt;--&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 连续广播（允许一个程序收到广播后快速收到下一个广播） --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BROADCAST_STICKY"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">application</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">".ECApplication"</span></div><div class="line">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".ECMainActivity"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span>/&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".ECLoginActivity"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">".ECChatActivity"</span></div><div class="line">            <span class="attr">android:windowSoftInputMode</span>=<span class="string">"adjustResize|stateHidden"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 设置环信应用的 appkey 换成自己的--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"EASEMOB_APPKEY"</span></div><div class="line">            <span class="attr">android:value</span>=<span class="string">"lzan13#hxsdkdemo"</span>/&gt;</div><div class="line">        <span class="comment">&lt;!-- 声明sdk所需的service SDK核心功能--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">service</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"com.hyphenate.chat.EMChatService"</span></div><div class="line">            <span class="attr">android:exported</span>=<span class="string">"true"</span>/&gt;</div><div class="line">        <span class="comment">&lt;!-- 声明sdk所需的receiver --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"com.hyphenate.chat.EMMonitorReceiver"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.PACKAGE_REMOVED"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"package"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 可选filter --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.BOOT_COMPLETED"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.USER_PRESENT"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>代码结束，Coding不止！Coding - Coding - Coding —<br>OK了，一个简单的注册登录以及收发消息的小demo就算完成了，可以用自己的环境编译运行下试试</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;环信已经发部了&lt;code&gt;SDK3.x&lt;/code&gt;版本，&lt;code&gt;SDK3.x&lt;/code&gt;相对于&lt;code&gt;SDK2.x&lt;/code&gt;
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Easemob" scheme="http://melove.net/blog/tags/Easemob/"/>
    
      <category term="SDK" scheme="http://melove.net/blog/tags/SDK/"/>
    
      <category term="Chat" scheme="http://melove.net/blog/tags/Chat/"/>
    
  </entry>
  
  <entry>
    <title>Git命令行将原作者的代码pull到本地并合并</title>
    <link href="http://melove.net/blog/2016/02/git-pull-author-pull-request-10054.html"/>
    <id>http://melove.net/blog/2016/02/git-pull-author-pull-request-10054.html</id>
    <published>2016-02-22T03:40:11.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在提交自己修改的代码到原作者的项目时遇到了一些问题，原作者最近更新比较频繁，导致我提交的代码有了冲突，所以要自己先把原作者的进行<code>pull</code>下来，然后解决冲突之后才能提交，既然要解决冲突，首先肯定是要把原作者的代码给<code>pull</code>下来，这里记录下更新提交的过程<br>首先要给当前的版本库添加原作者的<code>remote</code>，因为我是<code>fork</code>并<code>clone</code>自己的仓库进行修改，当时是没有添加的原作者的<code>remote</code>的<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add easemob https://github.com/easemob/easeui.git</div></pre></td></tr></table></figure></p>
<p>然后运行命令去<code>pull</code>下来原作者的代码<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull easemob dev</div></pre></td></tr></table></figure></p>
<p>此命令<code>pull</code>下来的原作者代码会自动合并到当前分支，合并的过程会打印一些详细的信息，比如是否有冲突，然后要做的就是去代码里找到这些冲突的地方，把冲突给解决掉；当我们<code>pull</code>完了之后，如果有冲突，在命令行的分支那里会提示<code>MERGING</code>，修改了之后我们要<code>commit</code>下才行，操作之后就正常了，然后我们就可以愉快的<code>push</code>自己的代码，并向原作者提交<code>pull request</code>了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在提交自己修改的代码到原作者的项目时遇到了一些问题，原作者最近更新比较频繁，导致我提交的代码有了冲突，所以要自己先把原作者的进行&lt;code&gt;pull&lt;/code&gt;下来，然后解决冲突之后才能提交，既然要解决冲突，首先肯定是要把原作者的代码给&lt;code&gt;pull&lt;/code
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>从Wordpress转战到github.io</title>
    <link href="http://melove.net/blog/2016/02/blog-migrate-to-hexo-10028.html"/>
    <id>http://melove.net/blog/2016/02/blog-migrate-to-hexo-10028.html</id>
    <published>2016-02-16T12:08:38.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近上班老加班，好久没有更新自己的博客了，不过笔记还是经常在记录的，毕竟有了问题和新的知识大脑不能完全记住啊，最新欢的还是<code>Evernote</code>，扯远了<br>最近没写博客也有一些其他原因，因为最近自己服务器上用来给wordpress存储数据的mysql数据库老是崩掉，让我经常重启服务器，感觉不想用他了，而且看到<code>Github</code>上的大牛们都是用<code>Github.io</code>来写博客，有一种想装一把的冲动 ^_^<br><code>Google</code>了N久（不要问我为什么被墙了还用它，任性），开始下手，把目标定在了<code>Hexo</code>上，博客从<code>Wordpress</code>迁移还是挺坎坷的，毕竟要做的事情不少啊</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近上班老加班，好久没有更新自己的博客了，不过笔记还是经常在记录的，毕竟有了问题和新的知识大脑不能完全记住啊，最新欢的还是&lt;code&gt;Evernote&lt;/code&gt;，扯远了&lt;br&gt;最近没写博客也有一些其他原因，因为最近自己服务器上用来给wordpress存储数据的mysql
    
    </summary>
    
      <category term="碎碎念" scheme="http://melove.net/blog/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="Github" scheme="http://melove.net/blog/tags/Github/"/>
    
      <category term="Blog" scheme="http://melove.net/blog/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://melove.net/blog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之新版AndroidStudio以及新版sdk开发环境创建新项目可能会出现的一些错误问题</title>
    <link href="http://melove.net/blog/2015/11/android-androidstudio-sdk-project-error-10008.html"/>
    <id>http://melove.net/blog/2015/11/android-androidstudio-sdk-project-error-10008.html</id>
    <published>2015-11-22T01:34:09.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="首先说下我这边开发的环境："><a href="#首先说下我这边开发的环境：" class="headerlink" title="首先说下我这边开发的环境："></a>首先说下我这边开发的环境：</h3><pre><code>AndroidStudio version：1.4.1
jdk version：1.7.0
SDKTools version：24.4.x
Build-tools version：23.0.1
Compile SDK version：API 22 （5.1）
Minimum SDK version：API 15（4.0.3）
Gradle version：2.4
</code></pre><h3 id="AndroidStudio等工具地址"><a href="#AndroidStudio等工具地址" class="headerlink" title="AndroidStudio等工具地址"></a>AndroidStudio等工具地址</h3><p><a href="http://developer.android.com" target="_blank" rel="external">Android官网</a><br><a href="http://www.androiddevtools.cn" target="_blank" rel="external">国内收集工具 AndroidDevTools</a><br><a href="https://downloads.gradle.org/distributions/gradle-2.4-all.zip" target="_blank" rel="external">gradle v2.4下载（as有时自动下载不成功，所以要自己下载</a><br>关于gradle首次创建项目卡住的问题可以看下这篇文章<a href="http://melove.net/lzan13/develops/android-develop/androidstudio-gradle-down-error-915.html">AndroidStudio 新建及clone项目关于gradle出现的问题</a></p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>这里使用AndroidStudio创建一个空的项目就OK了，<br>打开AndroidStudio 点击Start a new Android Studio project创建新项目</p>
<h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Error:A problem occurred configuring project <span class="string">':app'</span>.</div><div class="line">&gt; Could not download junit.jar (junit:junit:<span class="number">4.12</span>)</div><div class="line">   &gt; Could not get resource <span class="string">'https://jcenter.bintray.com/junit/junit/4.12/junit-4.12.jar'</span>.</div><div class="line">      &gt; Could not GET <span class="string">'https://jcenter.bintray.com/junit/junit/4.12/junit-4.12.jar'</span>.</div><div class="line">         &gt; peer not authenticated </div><div class="line">Error:A problem occurred configuring project <span class="string">':app'</span>.</div><div class="line">&gt; Could not download hamcrest-core.jar (org.hamcrest:hamcrest-core:<span class="number">1.3</span>): No cached version available <span class="keyword">for</span> offline mode</div></pre></td></tr></table></figure>
<p>这个是因为最新的创建项目会使用junit库来进行代码测试，在下载这个库的内容的时候发现他引用了hamcrest这个框架，不过国内下载这个框架的这个接啊日报hamcrest-core.jar不成功，所以会报这个错误，可以把build.gradle里引用的junit给删除或注释</p>
<h4 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">D:\develop\android\workspace\studio\EaseUICustomer\app\build\intermediates\exploded-aar\com.android.support\appcompat-v7\<span class="number">23.1</span>.0\res\values-v23\values-v23.xml</div><div class="line">Error:(<span class="number">2</span>) Error retrieving parent <span class="keyword">for</span> item: No resource found that matches the given name <span class="string">'android:TextAppearance.Material.Widget.Button.Inverse'</span>.</div><div class="line">Error:(<span class="number">2</span>) Error retrieving parent <span class="keyword">for</span> item: No resource found that matches the given name <span class="string">'android:Widget.Material.Button.Colored'</span>.</div><div class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':app:processDebugResources'</span>.</div><div class="line">&gt; com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process <span class="string">'command '</span>D:\develop\android\android_sdk\build-tools\build-tools-<span class="number">23.0</span>.1\aapt.exe<span class="string">''</span> finished with non-zero exit value <span class="number">1</span></div></pre></td></tr></table></figure>
<p>这个是因为创建项目默认使用<code>appcompat-v7</code> <code>23.0.1</code>版本，这个版本好像有问题，手动把这个版本号改下就ok了，改成22.+然后同步 就ok</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;首先说下我这边开发的环境：&quot;&gt;&lt;a href=&quot;#首先说下我这边开发的环境：&quot; class=&quot;headerlink&quot; title=&quot;首先说下我这边开发的环境：&quot;&gt;&lt;/a&gt;首先说下我这边开发的环境：&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;AndroidStudio vers
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Error" scheme="http://melove.net/blog/tags/Error/"/>
    
      <category term="SDK" scheme="http://melove.net/blog/tags/SDK/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之AndroidStudio一个工程内查看多个项目的实现</title>
    <link href="http://melove.net/blog/2015/11/android-androidstudio-project-module-10007.html"/>
    <id>http://melove.net/blog/2015/11/android-androidstudio-project-module-10007.html</id>
    <published>2015-11-21T09:44:37.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在已经有很多人开始使用<code>AndroidStudio</code>开始开发<code>Android</code>了，但是这货有一点儿不好，一个界面只能打开一个项目，当我们在开发自己的项目时，如果想像<code>clipse</code>查看别的<code>demo</code>的代码或者功能，只能再另外打开一个<code>Window</code>新开项目，其实呢<code>AndroidStudio</code>可以在一个项目中导入多个<code>Module</code>，这里以导入环信最新版的几个<code>demo</code>来实现在<code>AndroidStudio</code>中查看多个项目；<br>首先导入3.0的项目，<code>3.0 demo</code>引入了<code>EaseUI</code>库，在导入<code>AndroidStudio</code>的时候会以<code>Module</code>的形式自动导入<code>EaseUI</code>，<code>EaseUI</code>库中放着<code>simpledemo</code>这个小<code>demo</code>，我们先把它剪切出来，和其他的<code>demo</code>放在一起，等下我们就在一个<code>AndroidStudio</code>项目中导入环信的这些全部<code>demo</code><br>首先导入<code>3.0 Demo</code>：<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo000.png" alt="photo000"></p>
<p>因为要导入所有的<code>demo</code>所以给导入的项目重新命名下<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo001.png" alt="photo001"></p>
<p><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo002.png" alt="photo002"></p>
<p>导入完成后就可以开始导入其他项目了，不过想在当前项目中导入其他项目要选择<code>Import Module</code>的方式，下边以导入环信老版本的<code>demo</code>为例<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo003.png" alt="photo003"></p>
<p><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo004"></p>
<p>OK 导入成功，可以看到项目中有三个<code>Module</code>了 <code>easeUI</code>、<code>easeUIDemo</code>、<code>oldDemo</code>，其中<code>oldDemo</code>就是刚才导入的老版本的<code>demo</code>，只是改了个名字<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo005"></p>
<p>然后看下<code>Run/Debug configuration</code>可以发现这里有两个配置项，就说明当前工程内有两个可运行的<code>Android</code>项目<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo006"></p>
<p>下边再导入那个简单的<code>simpledemo</code>看下<br>导入之后看下<code>Project Structure</code>可以看到当前项目有四个<code>Module</code>，一个<code>EaseUI library</code>库，其他三个是<code>Android app</code>项目<code>easeUIDemo</code>和<code>easeUISimpleDemo</code>引用了<code>EaseUI</code>库，<code>oldDemo</code>是老版本直接集成的<code>demo</code><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo007"></p>
<p>可以根据这里的选择来运行不同的<code>module</code>，并且可以在一个工程内查看所有的代码<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo008"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在已经有很多人开始使用&lt;code&gt;AndroidStudio&lt;/code&gt;开始开发&lt;code&gt;Android&lt;/code&gt;了，但是这货有一点儿不好，一个界面只能打开一个项目，当我们在开发自己的项目时，如果想像&lt;code&gt;clipse&lt;/code&gt;查看别的&lt;code&gt;dem
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Module" scheme="http://melove.net/blog/tags/Module/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio导入环信新版EaseUI库问题</title>
    <link href="http://melove.net/blog/2015/11/android-androidstudio-import-easeui-10006.html"/>
    <id>http://melove.net/blog/2015/11/android-androidstudio-import-easeui-10006.html</id>
    <published>2015-11-18T13:55:13.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>环信大牛最新封装了一个供开发者直接使用的<code>UI</code>库<code>EaseUI</code>，这个可以让大家快速的进行集成环信的<code>SDK</code>进行实现聊天，官方也说了老版本的<code>demo</code>不会进行维护，重点维护这个<code>EaseUI</code>，但是在自己导入的时候有时会有些问题，这里用<code>1.4</code>版本的<code>AndroidStudio</code>导入<code>3.0 demo</code>来说明下；<br>首先就是打开AndroidStudio导入项目<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian010.png" alt="tupian010"><br>我喜欢给他改个名字EaseUIDemo<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian011.png" alt="tupian011"><br>导入完成<br>我这边导入时没有问题的，有时导入<code>demo</code>或者我们自己创建的项目 然后导入<code>EaseUI</code>库，并加入到自己的项目中去的时候可能会出现下边这样的错误 ，出现问题的原因的大致因为EaseUI默认引入的<code>v4</code>包的版本<code>20.0.0</code>，但是大家的开发环境不同，<code>SDK</code>版本以及编译器和<code>support</code>库版本不同，会出现错误；<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian012.png" alt="tupian012"><br>解决办法：这个时候就去点击项目设置，选中EaseUI把sdk版本设置成和<code>build.gradle</code>里一样的版本就行了，如果过低，建议更新<code>Android SDK Tool</code>，还不行，就把自己的项目的<code>SDK</code>版本和<code>EaseUI</code>都设置成一样，<code>v4</code>库也设置成一样<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian013.png" alt="tupian013"><br>设置了之后，要记得同步<code>gradle 1 or 2</code>方式都可以<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian014.png" alt="tupian014"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环信大牛最新封装了一个供开发者直接使用的&lt;code&gt;UI&lt;/code&gt;库&lt;code&gt;EaseUI&lt;/code&gt;，这个可以让大家快速的进行集成环信的&lt;code&gt;SDK&lt;/code&gt;进行实现聊天，官方也说了老版本的&lt;code&gt;demo&lt;/code&gt;不会进行维护，重点维护这个&lt;c
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="EaseUI" scheme="http://melove.net/blog/tags/EaseUI/"/>
    
      <category term="Easemob" scheme="http://melove.net/blog/tags/Easemob/"/>
    
  </entry>
  
  <entry>
    <title>关于新版AndroidStudio导入环信Demo的一些注意事项</title>
    <link href="http://melove.net/blog/2015/11/android-easemob-demo-import-10013.html"/>
    <id>http://melove.net/blog/2015/11/android-easemob-demo-import-10013.html</id>
    <published>2015-11-18T13:45:08.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里是以AndroidStudio v1.4版本为例</p>
<p>新版<code>AndroidStudio</code>已经可以直接导入<code>eclipse</code>的项目了，具体步骤看下边（会的飘过）<br>有一点要注意：<code>AndroidStudio</code>导入<code>eclipse</code>的项目，如果项目有引入<code>library</code>项目，并且<code>library</code>项目路径正确，<code>AndroidStudio</code>在导入<code>eclipse</code>的项目的同时会自动导入<code>library</code>为<code>module</code></p>
<p>启动<code>AndroidStudio</code>进入起始页，有些设置的是启动直接打开项目了，可以在设置里先设置下：<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian000.png" alt="tupian000"></p>
<p>设置了之后，在启动就是进入到启动界面了：<br>选择<code>Import project（Eclipse ADT， Gradle， etc）</code>选项开始选择导入<code>eclipse</code>创建的<code>Android</code>项目<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian001.png" alt="tupian001"></p>
<p>然后选择项目路径，这里以最新版环信demo2.2.4为例<br>注意：环信的<code>ChatDemoUI</code>这个<code>demo</code>里边因为研发的同事为了照顾老版本的<code>AndroidStudio</code>使用者，已经用<code>eclipse</code>生成了<code>build.gradle</code>文件，所以如果要导入新版<code>AndroidStudio</code>请把<code>build.gradle</code>删除<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian002.png" alt="tupian002"><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian003.png" alt="tupian003"></p>
<p>然后选择项目目的路径（相当于工作空间，带上项目目录名）<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian004.png" alt="tupian004"><br>提示不存在，不存在就对了 ok<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian005.png" alt="tupian005"><br>继续默认 Finish<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian006.png" alt="tupian006"><br>然后就是等待，这个一般有时会卡住，因为有时需要下载gradle的包，会很慢很慢，解决办法就是自己去gradle官网去下载gradle包，至于怎么解决可以看下我的另一篇文章:<a href="http://melove.net/lzan13/develops/android-develop/androidstudio-gradle-down-error-915.html">AndroidStudio 新建及clone项目关于gradle出现的问题</a><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian007.png" alt="tupian007"></p>
<p>导入成功，打开项目就是这样了<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian008.png" alt="tupian008"><br>下边多说一句，就是如果自己创建的项目想要引用<code>EaseUI</code>这个库（不只是这个库，其他任何的<code>library</code>库），可以直接在项目界面，点击菜单栏<code>File-&gt;New-&gt;Import Module</code>然后选择<code>easeui</code>路径就ok<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian009.png" alt="tupian009"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里是以AndroidStudio v1.4版本为例&lt;/p&gt;
&lt;p&gt;新版&lt;code&gt;AndroidStudio&lt;/code&gt;已经可以直接导入&lt;code&gt;eclipse&lt;/code&gt;的项目了，具体步骤看下边（会的飘过）&lt;br&gt;有一点要注意：&lt;code&gt;AndroidStudi
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="EaseUI" scheme="http://melove.net/blog/tags/EaseUI/"/>
    
      <category term="Easemob" scheme="http://melove.net/blog/tags/Easemob/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio新建及clone项目关于gradle出现的问题</title>
    <link href="http://melove.net/blog/2015/11/android-androidstudio-gradle-down-error-10004.html"/>
    <id>http://melove.net/blog/2015/11/android-androidstudio-gradle-down-error-10004.html</id>
    <published>2015-11-18T13:35:40.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>在我们使用<code>AndroidStudio</code>创建或者<code>clone</code>一个新的项目的时候，一般会遇到一些问题，如下图那样，一般是因为在<code>AndroidStudio</code>每次更新版本都会更新<code>Gradle</code>这个插件，但由于墙的问题每次更新都是失败，又是停止在<code>Refreshing Gradle Project</code>,有时新建项目的时候报<code>Gradle Project Compile Error</code>等等相关的问题<br>解决这些问题办法是<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian015.png" alt="tupian015"></p>
<p>打开<code>AndroidStudio</code>项目，找到项目目录<code>gradle\wrapper\gradle-wrapper.properties</code>这个文件内容如下<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#Wed Jul 08 23:06:25 CST 2015</div><div class="line">distributionBase=GRADLE_USER_HOME</div><div class="line">distributionPath=wrapper/dists</div><div class="line">zipStoreBase=GRADLE_USER_HOME</div><div class="line">zipStorePath=wrapper/dists</div><div class="line">distributionUrl=https\://services.gradle.org/distributions/gradle-2.5-all.zip</div></pre></td></tr></table></figure></p>
<p>最重要的就是最下面一句，android studio会联网下载符合当前版本的gradle插件，而这个网址虽然可以访问但速度实在太慢，所以每次下载需要花很长时间或直接超时</p>
<p>解决办法就是自己去手动下载当前项目定义的版本，可以直接复制这个路径去下载，也可以去gradle官网自己选择版本下载<br>然后把下载下来的压缩包拷贝到<code>C:\Users\lzan13\.gradle\wrapper\dists\gradle-2.5-all\d3xh0kipe7wr2bvnx5sk0hao8</code>目录下<code>后边这个长串的目录不一定相同，以自己的为准</code></p>
<p>重启<code>AndroidStudio</code>或选择工具栏<code>Tools-&gt;Android-&gt;Sync Project Gradle Files</code><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian016.png" alt="tupian016"><br>等待更新完成，就ok了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们使用&lt;code&gt;AndroidStudio&lt;/code&gt;创建或者&lt;code&gt;clone&lt;/code&gt;一个新的项目的时候，一般会遇到一些问题，如下图那样，一般是因为在&lt;code&gt;AndroidStudio&lt;/code&gt;每次更新版本都会更新&lt;code&gt;Gradle&lt;/co
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Gradle" scheme="http://melove.net/blog/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio导入第三方jar包重复加载错误解决办法</title>
    <link href="http://melove.net/blog/2015/05/android-androidstudio-duplicate-jar-10002.html"/>
    <id>http://melove.net/blog/2015/05/android-androidstudio-duplicate-jar-10002.html</id>
    <published>2015-05-08T01:13:41.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在使用<code>Http</code>时需要实现文件上传，虽然可以使用<code>HttpURLConnection</code>实现原生<code>post</code>上传，不过这个好像效率很低，然后就选择网上比较多的<code>HttpClient</code>通过<code>HttpPost</code>的方式上传文件，使用这种方式的时候需要用到<code>apache</code>的一个<code>jar</code>包<code>httpmime-xxx.jar</code>这个包还依赖于<code>httpcore-xxx.jar</code>在正常的导入两个<code>jar</code>包后，满心欢喜的准备编译，可是一个蛋疼的错误蹦出来了：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Error:duplicate files during packaging of APK D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\build\outputs\apk\app-debug-unaligned.apk</div><div class="line">     Path in archive: META-INF/NOTICE</div><div class="line">     Origin <span class="number">1</span>: D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\libs\httpcore-<span class="number">4.3</span>.jar</div><div class="line">     Origin <span class="number">2</span>: D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\libs\httpmime-<span class="number">4.3</span>.1.jar</div><div class="line">You can ignore those files in your build.gradle:</div><div class="line">     android &#123;</div><div class="line">       packagingOptions &#123;</div><div class="line">         exclude <span class="string">'META-INF/DEPENDENCIES'</span></div><div class="line">         exclude <span class="string">'META-INF/NOTICE'</span></div><div class="line">         exclude <span class="string">'META-INF/LICENSE'</span></div><div class="line">       &#125;</div><div class="line">     &#125;</div><div class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':app:packageDebug'</span>.</div><div class="line">&gt; Duplicate files copied in APK META-INF/NOTICE</div><div class="line">     File <span class="number">1</span>: D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\libs\httpcore-<span class="number">4.3</span>.jar</div><div class="line">     File <span class="number">2</span>: D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\libs\httpcore-<span class="number">4.3</span>.jar</div></pre></td></tr></table></figure></p>
<p>看字面意思就是说<code>jar</code>加载重复了，然后就是需要在项目的便衣文件中加入一些东西，既然能理解，就按照它提示的来嘛，<br>打开项目的<code>build.gradle</code>文件，在<code>android</code>标签下加入提示的部分，然后同步<code>gradle</code>在修改了<code>gradle</code>编译文件后<code>Androidstudio</code>右上角会有提示同步<code>gradle</code>的按钮，可以直接点击同步<code>gradle</code>配置，如果没有可以选择菜单栏里的<code>Tools - Android - Sync Project with Gradle Files</code>进行同步<br>同步完成，继续编译，duang…<br>还是那个错误，不过这次提示加入的内容不同，继续在<code>packagingOptions</code>下边添加，继续同步编译，duang…<br>继续,duang.duang.duang…<br>ok duang了三次之后算是没问题了，在编译配置文件中加入的就是这几行代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 解决重复加载第三方那个jar包问题</span></div><div class="line">packagingOptions &#123;</div><div class="line">     exclude <span class="string">'META-INF/DEPENDENCIES'</span></div><div class="line">     exclude <span class="string">'META-INF/NOTICE'</span></div><div class="line">     exclude <span class="string">'META-INF/LICENSE'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>感觉这个也是根据添加的<code>jar</code>包不同而有所不同的；不过只要跟着提示应该都可以解决的！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在使用&lt;code&gt;Http&lt;/code&gt;时需要实现文件上传，虽然可以使用&lt;code&gt;HttpURLConnection&lt;/code&gt;实现原生&lt;code&gt;post&lt;/code&gt;上传，不过这个好像效率很低，然后就选择网上比较多的&lt;code&gt;HttpClient&lt;/code&gt;
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Duplicate" scheme="http://melove.net/blog/tags/Duplicate/"/>
    
      <category term="HttpClient" scheme="http://melove.net/blog/tags/HttpClient/"/>
    
      <category term="Jar" scheme="http://melove.net/blog/tags/Jar/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio使用Gradle编译项目Failed to complete Gradle execution错误解决</title>
    <link href="http://melove.net/blog/2015/04/android-androidstudio-gradle-error-10005.html"/>
    <id>http://melove.net/blog/2015/04/android-androidstudio-gradle-error-10005.html</id>
    <published>2015-04-28T06:09:48.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>在使用<code>AndroidStudio</code>构建项目时有时会提示错误<code>Failed to complete Gradle execution</code>比较蛋疼的是这个问题还不是经常的，是偶尔，不确定因素，因为不知道什么时候就出现了，运行着好好的就突然这样，重启也不行，让人抓狂！<br>结局办法就是修改醒目的配置文件：<br>下边就是项目工程配置文件<code>gradle.properties</code>，默认是全部注释掉的，<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># Project-wide Gradle settings.</div><div class="line"># IDE (e.g. Android Studio) users:</div><div class="line"># Gradle settings configured through the IDE *will override*</div><div class="line"># any settings specified in this file.</div><div class="line"></div><div class="line"># For more details on how to configure your build environment visit</div><div class="line"># http://www.gradle.org/docs/current/userguide/build_environment.html</div><div class="line"></div><div class="line"># Specifies the JVM arguments used for the daemon process.</div><div class="line"># The setting is particularly useful for tweaking memory settings.</div><div class="line"># Default value: -Xmx10248m -XX:MaxPermSize=256m</div><div class="line"># org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8</div><div class="line">org.gradle.jvmargs=-Xmx512m -XX:MaxPermSize=512m</div><div class="line"></div><div class="line"># When configured, Gradle will run in incubating parallel mode.</div><div class="line"># This option should only be used with decoupled projects. More details, visit</div><div class="line"># http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects</div><div class="line"># org.gradle.parallel=true</div></pre></td></tr></table></figure></p>
<p>加上这句话就会好了<code>org.gradle.jvmargs=-Xmx512m -XX:MaxPermSize=512m</code><br>这句话不是在<code>studio</code>的配置文件中设置的，而是在项目的配置文件<code>gradle.properties</code>中</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用&lt;code&gt;AndroidStudio&lt;/code&gt;构建项目时有时会提示错误&lt;code&gt;Failed to complete Gradle execution&lt;/code&gt;比较蛋疼的是这个问题还不是经常的，是偶尔，不确定因素，因为不知道什么时候就出现了，运行着好好的就
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Gradle" scheme="http://melove.net/blog/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Android开发自定义ImageView控件实现圆角边框等功能</title>
    <link href="http://melove.net/blog/2015/04/android-custom-imageview-10010.html"/>
    <id>http://melove.net/blog/2015/04/android-custom-imageview-10010.html</id>
    <published>2015-04-04T02:58:47.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>在开发中有时我们需要一个功能，或者一个控件，但是官方的又满足不了我们的需求，此时就需要我们自己实现这些功能；<br>下边边就是我们经常会需要的一个实现了图片的圆角，以及添加边框等功能的自定义控件；文章最后有项目源码地址</p>
<p>这个自定义<code>ImageView</code>控件实现了图片的圆角、圆形、边框等功能，同时具有按下改变颜色的效果，通过属性设置可以自定义按下的颜色，<br>以及颜色的透明度；还尅定义边框的颜色<br>Demo截图：<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/05/device-2015-05-04-101609.png" alt="device-2015-05-04-101609"></p>
<h3 id="控件属性定义"><a href="#控件属性定义" class="headerlink" title="控件属性定义"></a>控件属性定义</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--自定义MLImageView的属性 加上了自己的前缀，防止和其他自定义控件冲突--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">"MLImageView"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_border_color"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_border_width"</span> <span class="attr">format</span>=<span class="string">"dimension"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_press_alpha"</span> <span class="attr">format</span>=<span class="string">"integer"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_press_color"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_radius"</span> <span class="attr">format</span>=<span class="string">"dimension"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_shape_type"</span> <span class="attr">format</span>=<span class="string">"enum"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">enum</span> <span class="attr">name</span>=<span class="string">"none"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">enum</span> <span class="attr">name</span>=<span class="string">"round"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">enum</span> <span class="attr">name</span>=<span class="string">"rectangle"</span> <span class="attr">value</span>=<span class="string">"2"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">attr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="控件代码的实现"><a href="#控件代码的实现" class="headerlink" title="控件代码的实现"></a>控件代码的实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.chat.widget;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.content.res.TypedArray;</div><div class="line"><span class="keyword">import</span> android.graphics.Bitmap;</div><div class="line"><span class="keyword">import</span> android.graphics.Canvas;</div><div class="line"><span class="keyword">import</span> android.graphics.Matrix;</div><div class="line"><span class="keyword">import</span> android.graphics.Paint;</div><div class="line"><span class="keyword">import</span> android.graphics.PorterDuff;</div><div class="line"><span class="keyword">import</span> android.graphics.PorterDuffXfermode;</div><div class="line"><span class="keyword">import</span> android.graphics.RectF;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.BitmapDrawable;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.ColorDrawable;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</div><div class="line"><span class="keyword">import</span> android.util.AttributeSet;</div><div class="line"><span class="keyword">import</span> android.view.MotionEvent;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"></div><div class="line"><span class="keyword">import</span> net.melove.demo.chat.R;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by lzan13 on 2015/4/30.</div><div class="line"> * 自定义 ImageView 控件，实现了圆角和边框，以及按下变色</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MLImageView</span> <span class="keyword">extends</span> <span class="title">ImageView</span> </span>&#123;</div><div class="line">    <span class="comment">// 图片按下的画笔</span></div><div class="line">    <span class="keyword">private</span> Paint pressPaint;</div><div class="line">    <span class="comment">// 图片的宽高</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> width;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> height;</div><div class="line"></div><div class="line">    <span class="comment">// 定义 Bitmap 的默认配置</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Bitmap.Config BITMAP_CONFIG = Bitmap.Config.ARGB_8888;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> COLORDRAWABLE_DIMENSION = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment">// 边框颜色</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> borderColor;</div><div class="line">    <span class="comment">// 边框宽度</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> borderWidth;</div><div class="line">    <span class="comment">// 按下的透明度</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pressAlpha;</div><div class="line">    <span class="comment">// 按下的颜色</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pressColor;</div><div class="line">    <span class="comment">// 圆角半径</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> radius;</div><div class="line">    <span class="comment">// 图片类型（矩形，圆形）</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> shapeType;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MLImageView</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">        init(context, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MLImageView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">        init(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MLImageView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</div><div class="line">        init(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="comment">//初始化默认值</span></div><div class="line">        borderWidth = <span class="number">6</span>;</div><div class="line">        borderColor = <span class="number">0xddffffff</span>;</div><div class="line">        pressAlpha = <span class="number">0x42</span>;</div><div class="line">        pressColor = <span class="number">0x42000000</span>;</div><div class="line">        radius = <span class="number">16</span>;</div><div class="line">        shapeType = <span class="number">2</span>;</div><div class="line"></div><div class="line">        <span class="comment">// 获取控件的属性值</span></div><div class="line">        <span class="keyword">if</span> (attrs != <span class="keyword">null</span>) &#123;</div><div class="line">            TypedArray array = context.obtainStyledAttributes(attrs, R.styleable.MLImageView);</div><div class="line">            borderColor = array.getColor(R.styleable.MLImageView_ml_border_color, borderColor);</div><div class="line">            borderWidth = array.getDimensionPixelOffset(R.styleable.MLImageView_ml_border_width, borderWidth);</div><div class="line">            pressAlpha = array.getInteger(R.styleable.MLImageView_ml_press_alpha, pressAlpha);</div><div class="line">            pressColor = array.getColor(R.styleable.MLImageView_ml_press_color, pressColor);</div><div class="line">            radius = array.getDimensionPixelOffset(R.styleable.MLImageView_ml_radius, radius);</div><div class="line">            shapeType = array.getInteger(R.styleable.MLImageView_ml_shape_type, shapeType);</div><div class="line">            array.recycle();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 按下的画笔设置</span></div><div class="line">        pressPaint = <span class="keyword">new</span> Paint();</div><div class="line">        pressPaint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">        pressPaint.setStyle(Paint.Style.FILL);</div><div class="line">        pressPaint.setColor(pressColor);</div><div class="line">        pressPaint.setAlpha(<span class="number">0</span>);</div><div class="line">        pressPaint.setFlags(Paint.ANTI_ALIAS_FLAG);</div><div class="line"></div><div class="line">        setClickable(<span class="keyword">true</span>);</div><div class="line">        setDrawingCacheEnabled(<span class="keyword">true</span>);</div><div class="line">        setWillNotDraw(<span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (shapeType == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 获取当前控件的 drawable</span></div><div class="line">        Drawable drawable = getDrawable();</div><div class="line">        <span class="keyword">if</span> (drawable == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 这里 get 回来的宽度和高度是当前控件相对应的宽度和高度（在 xml 设置）</span></div><div class="line">        <span class="keyword">if</span> (getWidth() == <span class="number">0</span> || getHeight() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 获取 bitmap，即传入 imageview 的 bitmap</span></div><div class="line">        <span class="comment">// Bitmap bitmap = ((BitmapDrawable) ((SquaringDrawable)</span></div><div class="line">        <span class="comment">// drawable).getCurrent()).getBitmap();</span></div><div class="line">        <span class="comment">// 这里参考赵鹏的获取 bitmap 方式，因为上边的获取会导致 Glide 加载的drawable 强转为 BitmapDrawable 出错</span></div><div class="line">        Bitmap bitmap = getBitmapFromDrawable(drawable);</div><div class="line">        drawDrawable(canvas, bitmap);</div><div class="line"></div><div class="line">        drawPress(canvas);</div><div class="line">        drawBorder(canvas);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 实现圆角的绘制</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> canvas</div><div class="line">     * <span class="doctag">@param</span> bitmap</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawDrawable</span><span class="params">(Canvas canvas, Bitmap bitmap)</span> </span>&#123;</div><div class="line">        <span class="comment">// 画笔</span></div><div class="line">        Paint paint = <span class="keyword">new</span> Paint();</div><div class="line">        <span class="comment">// 颜色设置</span></div><div class="line">        paint.setColor(<span class="number">0xffffffff</span>);</div><div class="line">        <span class="comment">// 抗锯齿</span></div><div class="line">        paint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">//Paint 的 Xfermode，PorterDuff.Mode.SRC_IN 取两层图像的交集部门, 只显示上层图像。</span></div><div class="line">        PorterDuffXfermode xfermode = <span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.SRC_IN);</div><div class="line">        <span class="comment">// 标志</span></div><div class="line">        <span class="keyword">int</span> saveFlags = Canvas.MATRIX_SAVE_FLAG</div><div class="line">                | Canvas.CLIP_SAVE_FLAG</div><div class="line">                | Canvas.HAS_ALPHA_LAYER_SAVE_FLAG</div><div class="line">                | Canvas.FULL_COLOR_LAYER_SAVE_FLAG</div><div class="line">                | Canvas.CLIP_TO_LAYER_SAVE_FLAG;</div><div class="line">        canvas.saveLayer(<span class="number">0</span>, <span class="number">0</span>, width, height, <span class="keyword">null</span>, saveFlags);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (shapeType == <span class="number">1</span>) &#123;</div><div class="line">            <span class="comment">// 画遮罩，画出来就是一个和空间大小相匹配的圆（这里在半径上 -1 是为了不让图片超出边框）</span></div><div class="line">            canvas.drawCircle(width / <span class="number">2</span>, height / <span class="number">2</span>, width / <span class="number">2</span> - <span class="number">1</span>, paint);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shapeType == <span class="number">2</span>) &#123;</div><div class="line">            <span class="comment">// 当ShapeType == 2 时 图片为圆角矩形 （这里在宽高上 -1 是为了不让图片超出边框）</span></div><div class="line">            RectF rectf = <span class="keyword">new</span> RectF(<span class="number">1</span>, <span class="number">1</span>, getWidth() - <span class="number">1</span>, getHeight() - <span class="number">1</span>);</div><div class="line">            canvas.drawRoundRect(rectf, radius + <span class="number">1</span>, radius + <span class="number">1</span>, paint);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        paint.setXfermode(xfermode);</div><div class="line"></div><div class="line">        <span class="comment">// 空间的大小 / bitmap 的大小 = bitmap 缩放的倍数</span></div><div class="line">        <span class="keyword">float</span> scaleWidth = ((<span class="keyword">float</span>) getWidth()) / bitmap.getWidth();</div><div class="line">        <span class="keyword">float</span> scaleHeight = ((<span class="keyword">float</span>) getHeight()) / bitmap.getHeight();</div><div class="line"></div><div class="line">        Matrix matrix = <span class="keyword">new</span> Matrix();</div><div class="line">        matrix.postScale(scaleWidth, scaleHeight);</div><div class="line"></div><div class="line">        <span class="comment">//bitmap 缩放</span></div><div class="line">        bitmap = Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.getWidth(), bitmap.getHeight(), matrix, <span class="keyword">true</span>);</div><div class="line"></div><div class="line">        <span class="comment">//draw 上去</span></div><div class="line">        canvas.drawBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, paint);</div><div class="line">        canvas.restore();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 绘制控件的按下效果</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> canvas</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawPress</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="comment">// 这里根据类型判断绘制的效果是圆形还是矩形</span></div><div class="line">        <span class="keyword">if</span> (shapeType == <span class="number">1</span>) &#123;</div><div class="line">            <span class="comment">// 当ShapeType == 1 时 图片为圆形 （这里在半径上 -1 是为了不让图片超出边框）</span></div><div class="line">            canvas.drawCircle(width / <span class="number">2</span>, height / <span class="number">2</span>, width / <span class="number">2</span> - <span class="number">1</span>, pressPaint);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shapeType == <span class="number">2</span>) &#123;</div><div class="line">            <span class="comment">// 当ShapeType == 2 时 图片为圆角矩形 （这里在宽高上 -1 是为了不让图片超出边框）</span></div><div class="line">            RectF rectF = <span class="keyword">new</span> RectF(<span class="number">1</span>, <span class="number">1</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</div><div class="line">            canvas.drawRoundRect(rectF, radius + <span class="number">1</span>, radius + <span class="number">1</span>, pressPaint);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 绘制自定义控件边框</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> canvas</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawBorder</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (borderWidth &gt; <span class="number">0</span>) &#123;</div><div class="line">            Paint paint = <span class="keyword">new</span> Paint();</div><div class="line">            paint.setStrokeWidth(borderWidth);</div><div class="line">            paint.setStyle(Paint.Style.STROKE);</div><div class="line">            paint.setColor(borderColor);</div><div class="line">            paint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">            <span class="comment">// 根据控件类型的属性去绘制圆形或者矩形</span></div><div class="line">            <span class="keyword">if</span> (shapeType == <span class="number">1</span>) &#123;</div><div class="line">                canvas.drawCircle(width / <span class="number">2</span>, height / <span class="number">2</span>, (width - borderWidth) / <span class="number">2</span>, paint);</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shapeType == <span class="number">2</span>) &#123;</div><div class="line">                <span class="comment">// 当ShapeType = 1 时 图片为圆角矩形</span></div><div class="line">                RectF rectf = <span class="keyword">new</span> RectF(borderWidth / <span class="number">2</span>, borderWidth / <span class="number">2</span>, getWidth() - borderWidth / <span class="number">2</span>,</div><div class="line">                        getHeight() - borderWidth / <span class="number">2</span>);</div><div class="line">                canvas.drawRoundRect(rectf, radius, radius, paint);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 重写父类的 onSizeChanged 方法，检测控件宽高的变化</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> w</div><div class="line">     * <span class="doctag">@param</span> h</div><div class="line">     * <span class="doctag">@param</span> oldw</div><div class="line">     * <span class="doctag">@param</span> oldh</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</div><div class="line">        width = w;</div><div class="line">        height = h;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 重写 onTouchEvent 监听方法，用来监听自定义控件是否被触摸</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> event</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</div><div class="line">                pressPaint.setAlpha(pressAlpha);</div><div class="line">                invalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">                pressPaint.setAlpha(<span class="number">0</span>);</div><div class="line">                invalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line"></div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                pressPaint.setAlpha(<span class="number">0</span>);</div><div class="line">                invalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onTouchEvent(event);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 这里是参考其他开发者获取Bitmap内容的方法， 之前是因为没有考虑到 Glide 加载的图片</div><div class="line">     * 导致drawable 类型是属于 SquaringDrawable 类型，导致强转失败</div><div class="line">     * 这里是通过drawable不同的类型来进行获取Bitmap</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> drawable</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> Bitmap <span class="title">getBitmapFromDrawable</span><span class="params">(Drawable drawable)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Bitmap bitmap;</div><div class="line">            <span class="keyword">if</span> (drawable <span class="keyword">instanceof</span> BitmapDrawable) &#123;</div><div class="line">                <span class="keyword">return</span> ((BitmapDrawable) drawable).getBitmap();</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (drawable <span class="keyword">instanceof</span> ColorDrawable) &#123;</div><div class="line">                bitmap = Bitmap.createBitmap(COLORDRAWABLE_DIMENSION, COLORDRAWABLE_DIMENSION, BITMAP_CONFIG);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(),</div><div class="line">                        BITMAP_CONFIG);</div><div class="line">            &#125;</div><div class="line">            Canvas canvas = <span class="keyword">new</span> Canvas(bitmap);</div><div class="line">            drawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, canvas.getWidth(), canvas.getHeight());</div><div class="line">            drawable.draw(canvas);</div><div class="line">            <span class="keyword">return</span> bitmap;</div><div class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置边框颜色</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> borderColor</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBorderColor</span><span class="params">(<span class="keyword">int</span> borderColor)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.borderColor = borderColor;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置边框宽度</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> borderWidth</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBorderWidth</span><span class="params">(<span class="keyword">int</span> borderWidth)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.borderWidth = borderWidth;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置图片按下颜色透明度</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> pressAlpha</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPressAlpha</span><span class="params">(<span class="keyword">int</span> pressAlpha)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.pressAlpha = pressAlpha;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置图片按下的颜色</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> pressColor</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPressColor</span><span class="params">(<span class="keyword">int</span> pressColor)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.pressColor = pressColor;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置倒角半径</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> radius</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRadius</span><span class="params">(<span class="keyword">int</span> radius)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.radius = radius;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置形状类型</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> shapeType</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShapeType</span><span class="params">(<span class="keyword">int</span> shapeType)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.shapeType = shapeType;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="控件使用方法"><a href="#控件使用方法" class="headerlink" title="控件使用方法"></a>控件使用方法</h3><p>使用方法很简单，就像在<code>xml</code>布局文件使用其他控件你那样引用就好；如果你不想引用过多的库， 可以直接复制<code>MLImageView</code>类到自己的项目中，<br>进行修改加工，让控件和自己的项目进行整合<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">net.melove.dome.mlimageview.MLImageView</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"96dp"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"96dp"</span></div><div class="line">        <span class="attr">android:layout_margin</span>=<span class="string">"8dp"</span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@mipmap/lz_bp_blue"</span></div><div class="line">        <span class="attr">melove:border_color</span>=<span class="string">"@color/ml_white"</span></div><div class="line">        <span class="attr">melove:border_width</span>=<span class="string">"4dp"</span></div><div class="line">        <span class="attr">melove:press_alpha</span>=<span class="string">"50"</span></div><div class="line">        <span class="attr">melove:press_color</span>=<span class="string">"#00ff00"</span></div><div class="line">        <span class="attr">melove:radius</span>=<span class="string">"8dp"</span></div><div class="line">        <span class="attr">melove:shape_type</span>=<span class="string">"rectangle"</span> /&gt;</div></pre></td></tr></table></figure></p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>要记着有一点，在使用自定义控件之前一定要添加自定义命名空间（命名空间的名字可以自己定义）<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xmlns:melove="http://schemas.android.com/apk/res-auto"</div></pre></td></tr></table></figure></p>
<h3 id="项目源码"><a href="#项目源码" class="headerlink" title="项目源码"></a>项目源码</h3><p><a href="https://github.com/lzan13/MLImageViewDemo" title="自定义ImageView控件 MLImageViewDemo" target="_blank" rel="external">自定义ImageView控件 MLImageViewDemo</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在开发中有时我们需要一个功能，或者一个控件，但是官方的又满足不了我们的需求，此时就需要我们自己实现这些功能；&lt;br&gt;下边边就是我们经常会需要的一个实现了图片的圆角，以及添加边框等功能的自定义控件；文章最后有项目源码地址&lt;/p&gt;
&lt;p&gt;这个自定义&lt;code&gt;ImageView
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="CustomView" scheme="http://melove.net/blog/tags/CustomView/"/>
    
      <category term="ImageView" scheme="http://melove.net/blog/tags/ImageView/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio结合Git同步代码到Github库提高开发效率</title>
    <link href="http://melove.net/blog/2015/03/android-androidstudio-git-10003.html"/>
    <id>http://melove.net/blog/2015/03/android-androidstudio-git-10003.html</id>
    <published>2015-03-30T06:33:18.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前都是用优盘拷贝代码，这里修改一次，拷贝一下，现在用<code>AndroidStudio</code>带有版本控制功能，可以直接使用<code>git</code>同步到<code>github</code>，所以学着弄下，这里记录下来</p>
<p>首先是在<code>github</code>上新建一个仓库，这是我的测试项目<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git5.png" alt="androidstudio-git5"></p>
<p>创建成功会跳转到下图页面，此页面中的：git remote add origin <a href="https://github.com/xxx/xxx.git" target="_blank" rel="external">https://github.com/xxx/xxx.git</a> 这句话在后边通过<code>AndroidStuido</code>提交代码到库需要用到，复制备用<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git14.png" alt="androidstudio-git5"></p>
<p>OK 网络上的仓库创建好了，那就要创建本地的项目了，打开<code>AndroidStudio</code>创建新项目：<br>新项目创建好之后默认显示的是<code>Android</code>的当前<code>Module</code><br>注意：<code>AndroidStudio V1.0.1</code>版本的<code>Module</code>名字显示为<code>APP</code>不能改，不然会找不到<code>Module</code>!!!<br>这里把显示选择到整个项目，这是为了第一次提交到github做准备，把所有的项目文件都提交到github去<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git2.png" alt="androidstudio-git2"></p>
<p>接着设置下<code>git</code>以及<code>github</code>账户<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git13.png" alt="androidstudio-git13"><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git15.jpg" alt="androidstudio-git15"></p>
<p>OK 然后就是<code>init</code>当前项目<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git11.png" alt="androidstudio-git11"><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git6.png" alt="androidstudio-git6"></p>
<p><code>init</code>项目之后有一个步骤是必须的，但是却无法在<code>AndroidStudio</code>中完成，因为要<code>remote</code>项目但是<code>AndroidStudio</code>没有提供这个菜单选项，所以要在<code>git Bash</code>命令行进行；<br>打开<code>git Bash</code>窗口，切换到当前项目根目录，然后输入<code>remote</code>命令回车<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git3.png" alt="androidstudio-git3"></p>
<p>然后就是添加选中的项目文件，第一次提交项目选中整个<code>project</code>，<br>当项目文件变绿色时，说明add成功<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git7.png" alt="androidstudio-git7"></p>
<p>接着就是需要<code>commit</code>项目文件了，<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git8.png" alt="androidstudio-git8"></p>
<p><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git9.png" alt="androidstudio-git9"></p>
<p><code>commit</code>之后就是<code>pull</code>项目<br>OK 提交也提交过了，下面就是真正的把项目<code>Push</code>到<code>github</code>了<br>选择:<code>VCS-&gt;Git-&gt;Push</code>其实也可以在<code>commit</code>的同时选择<code>commit and push</code><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git10.png" alt="androidstudio-git11"></p>
<p>弹出<code>push</code>确认对话框，选择提交到分支，后边第一次默认是<code>master</code>分支，可以自定义，<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git14.png" alt="androidstudio-git12"></p>
<p>点击<code>push</code>后会弹出输入<code>github</code>账户和密码，输入之后会提示创建本地密码仓库密码，可以取消，如果设置了密码，在以后提交时会出现下图的密码输入框<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git12.png" alt="androidstudio-git10"></p>
<p>OK 刷新下<code>github</code>的项目，可以看到整个项目已经被<code>push</code>到库中了<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/04/androidstudio-git1.png" alt="androidstudio-git1"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前都是用优盘拷贝代码，这里修改一次，拷贝一下，现在用&lt;code&gt;AndroidStudio&lt;/code&gt;带有版本控制功能，可以直接使用&lt;code&gt;git&lt;/code&gt;同步到&lt;code&gt;github&lt;/code&gt;，所以学着弄下，这里记录下来&lt;/p&gt;
&lt;p&gt;首先是在&lt;code
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/blog/tags/AndroidStudio/"/>
    
      <category term="Git" scheme="http://melove.net/blog/tags/Git/"/>
    
      <category term="Github" scheme="http://melove.net/blog/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Android开发ClipboardManager的使用复制字符串到剪切板</title>
    <link href="http://melove.net/blog/2015/03/android-copy-clipboardmanager-10009.html"/>
    <id>http://melove.net/blog/2015/03/android-copy-clipboardmanager-10009.html</id>
    <published>2015-03-29T08:08:11.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近做的一个项目中需要复制一个字符串到系统的剪切板，以便用户发送给其他人，因为我所需要复制的内容是确定的，因此不想通过让用户长按需要复制的内容，然后选择复制，感觉那样多此一举，so选择直接通过代码来复制到剪切板，查了一下资料，发现Android是有提供这个功能的：<br>通过使用<code>ClipboardManager</code>来实现；<a href="http://developer.android.com/reference/android/content/ClipboardManager.html" title="ClipboardManager api" target="_blank" rel="external">这里是ClipboardManager官方文档</a></p>
<p><code>ClipboardManager</code>继承自<code>Object</code>类，我们主要使用的方法就是setText(String)不过这个方法在API 11后是废除的，使用setPrimaryClip(ClipData)方法替换</p>
<p>OK了解了这些之后，就很容易实现了：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获取CLipboardManager对象，并将需要的内容添加进剪切板</span></div><div class="line">ClipboardManager cManager = (ClipboardManager) mActivity.getSystemService(CLIPBOARD_SERVICE);</div><div class="line">ClipData clipData = ClipData.newPlainText(<span class="string">"user_id"</span>, userInfo.getUserId());</div><div class="line">cManager.setPrimaryClip(clipData);</div></pre></td></tr></table></figure></p>
<p>在新版的api中，因为setText()方法被替换，因此添加进剪切板的内容也进行了封装<code>ClipData</code>；通过查看源码可以发现，可以添加到剪切板多种格式：比如<code>Uri</code> <code>html</code> <code>intent</code>等多种格式</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近做的一个项目中需要复制一个字符串到系统的剪切板，以便用户发送给其他人，因为我所需要复制的内容是确定的，因此不想通过让用户长按需要复制的内容，然后选择复制，感觉那样多此一举，so选择直接通过代码来复制到剪切板，查了一下资料，发现Android是有提供这个功能的：&lt;br&gt;通
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="ClipboardManager" scheme="http://melove.net/blog/tags/ClipboardManager/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之google官方下拉刷新SwipeRefreshLayout的使用</title>
    <link href="http://melove.net/blog/2015/02/android-view-swiperefreshlayout-10022.html"/>
    <id>http://melove.net/blog/2015/02/android-view-swiperefreshlayout-10022.html</id>
    <published>2015-02-24T05:40:04.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在写的一个软件要用到下拉刷新，说到下拉刷新，网上有很多的自定义样式，其实<code>google</code>已经出了官方的下拉刷新组建，而且更新过的更好看，是一个不停旋转的彩色缺口圆环，我很喜欢，所以打算用官方的下拉刷新，<br>首先要使用<code>SwipeRefreshLayout</code>，要在布局文件中使用它，而且它只能包含一个子控件，同时必须是可滚动的，比如<code>ScallView</code>、<code>ListView</code>、<code>GridView</code>等；<br>部分布局代码如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.SwipeRefreshLayout</span> </span></div><div class="line">     <span class="attr">android:id</span>=<span class="string">"@+id/ml_swipe_refresh_layout"</span></div><div class="line">     <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span> </div><div class="line">     <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ListView</span> </span></div><div class="line">          <span class="attr">android:id</span>=<span class="string">"@+id/ml_timeline_listview"</span> </div><div class="line">          <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">          <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>接着就是在java代码中去获得控件，并监听控件达到出发刷新的目的：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 初始化下拉刷新组件</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initSwipeRefreshLayout</span><span class="params">()</span> </span>&#123;</div><div class="line">	mSwipeRefreshLayout.setProgressViewOffset(<span class="keyword">false</span>, <span class="number">0</span>, <span class="number">220</span>);</div><div class="line">	mSwipeRefreshLayout.setColorSchemeResources(R.color.ml_blue, R.color.ml_orange, R.color.ml_green, R.color.ml_red, R.color.ml_purple);</div><div class="line">	mSwipeRefreshLayout.setOnRefreshListener(<span class="keyword">new</span> SwipeRefreshLayout.OnRefreshListener() &#123;</div><div class="line">		<span class="meta">@Override</span> </div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</div><div class="line">			mSwipeRefreshLayout.postDelayed(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">				<span class="meta">@Override</span> </div><div class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">					mSwipeRefreshLayout.setRefreshing(<span class="keyword">false</span>);</div><div class="line">				&#125;</div><div class="line">			&#125;,</div><div class="line">			<span class="number">5000</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在上边的代码中主要调用了<code>SwipeRefreshLayout</code>的几个方法：</p>
<ul>
<li><code>setProgressViewOffset(false, 0, 220);</code>设置刷新进度圈出现的方式、开始位置、结束位置，默认就是从顶部开始放大出现，但是距离太近，所以看了下<code>SwipeRefreshLayout</code>的源码，找到了一个属性<code>mCurrentTargetOffsetTop</code>,发现是可以自定义刷新进度的位置的；</li>
<li><code>setColorSchemeResources();</code>为进度圈设置颜色样式；可以设置多个</li>
<li><code>setOnRefreshListener();</code>给<code>SwipeRefreshLayout</code>控件添加监听器</li>
<li><code>setRefreshing();</code>停止刷新<br>其中在<code>OnRefreshListener的onRefresh()</code>方法中就是我们要实现的刷新需要做的一些事情，这里我用个计时器模拟刷新<code>5s</code>，然后关闭进度圈；<br>OK 设置完这些之后，就可以在应用中使用官方的下拉刷新了！</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在写的一个软件要用到下拉刷新，说到下拉刷新，网上有很多的自定义样式，其实&lt;code&gt;google&lt;/code&gt;已经出了官方的下拉刷新组建，而且更新过的更好看，是一个不停旋转的彩色缺口圆环，我很喜欢，所以打算用官方的下拉刷新，&lt;br&gt;首先要使用&lt;code&gt;SwipeRef
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/blog/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="SwipeRefreshLayout" scheme="http://melove.net/blog/tags/SwipeRefreshLayout/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d-x 3.x使用Sqlite3操作数据库</title>
    <link href="http://melove.net/blog/2014/11/cocos2d-x-sqlite3-database-10043.html"/>
    <id>http://melove.net/blog/2014/11/cocos2d-x-sqlite3-database-10043.html</id>
    <published>2014-11-03T03:46:33.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>好像新版的<code>Cocos2d-x</code>引擎包含了<code>sqlite3.h</code>,但是，在我引用时会提示<code>sqlite3_open()</code>无法解析，不知道怎么回事，所以我就不用他内置的了;<br>首先去<a href="http://www.sqlite.org" target="_blank" rel="external">sqlite官网</a>下载<code>sqlite</code>的源码文件，解压得到四个文件<code>shell.c</code>、<code>sqlite3.c</code>、<code>sqlite3.h</code>、<code>sqlite3ext.h</code>把这四个文件拷贝到项目<code>Classes</code>目录下，或者在此目录下再建立一个<code>sqlite</code>目录（便于代码的区分管理），然后右击项目<code>Classes</code>-&gt;<code>添加</code>-&gt;<code>现有项</code>，把这四个文件添加进来，就可以使用了，<br>新建<code>MLSqlite.cpp</code>和<code>MLSqlite.h</code>文件，这个就是我的操作<code>sqlite3</code>数据库的文件 </p>
<h3 id="MLSqlite-h"><a href="#MLSqlite-h" class="headerlink" title="MLSqlite.h"></a>MLSqlite.h</h3><p>定义了几个简单的方法，简单的实现了数据库的增删改查<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">#ifndef _ml_sqlite_h_</div><div class="line">#define _ml_sqlite_h_</div><div class="line"></div><div class="line">#include "cocos2d.h"</div><div class="line">#include "sqlitesqlite3.h"</div><div class="line"></div><div class="line">USING_NS_CC;</div><div class="line">using namespace std;</div><div class="line"></div><div class="line">class MLSqlite &#123;</div><div class="line">public:</div><div class="line">	static MLSqlite* getInstance();</div><div class="line">	// 创建数据库</div><div class="line">	void openDatabase(const char* dbname);</div><div class="line">	// 创建数据表， 以sql语句的形式</div><div class="line">	void createTable(const char* tablename, const char* sqlstr);</div><div class="line">	// 插入数据， 以sql语句的形式</div><div class="line">	void insertData(const char* tablename, const char* sqlstr);</div><div class="line">	// 删除一条数据， 以sql语句的形式</div><div class="line">	void deleteData(const char* tablename, const char* sqlstr);</div><div class="line">	// 更新一条数据， 以sql语句的形式</div><div class="line">	void updateData(const char* tablename, const char* sqlstr);</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * 查询所有数据 传入处理查询结果的回调函数，</div><div class="line">	 * 这个回调函数有三个参数，可以通过这三个参数来获得所有的数据</div><div class="line">	 */</div><div class="line">	void queryAllData(const char* tablename, const function&lt;void (char**, int, int)&gt;&amp; callback);	</div><div class="line">	/**</div><div class="line">	 * 查询所有数据，并传入处理数据的回调函数</div><div class="line">	 */</div><div class="line">	void queryAllData(const char* tablename, int (*callback)(void*,int,char**,char**));	</div><div class="line">	// 查询特定的数据</div><div class="line">	string queryOneData(const char* tablename, const char* sqlstr, int i);	</div><div class="line">	// 查询有多少条数据</div><div class="line">	int queryData(const char* tablename, const char* sqlstr);	</div><div class="line">	// 删除表</div><div class="line">	void deleteTable(const char* tablename);</div><div class="line">	// 关闭数据库</div><div class="line">	void closeDatabase();</div><div class="line">private:</div><div class="line">	MLSqlite();</div><div class="line">	~MLSqlite();</div><div class="line"></div><div class="line">	sqlite3* mldb;</div><div class="line">	char* error;</div><div class="line">	int result;</div><div class="line">&#125;;</div><div class="line">#endif // _ml_sqlite_h_</div></pre></td></tr></table></figure></p>
<h3 id="MLSqlite-cpp"><a href="#MLSqlite-cpp" class="headerlink" title="MLSqlite.cpp"></a>MLSqlite.cpp</h3><p>实现以上那些个方法<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MLSqlite.h"</span></span></div><div class="line"></div><div class="line">MLSqlite* m_MLSqlite = <span class="literal">nullptr</span>;</div><div class="line"></div><div class="line">MLSqlite::MLSqlite()&#123;</div><div class="line">	mldb = <span class="literal">NULL</span>;</div><div class="line">	error = <span class="string">""</span>;</div><div class="line">	result = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">MLSqlite::~MLSqlite()&#123;</div><div class="line">	mldb = <span class="literal">NULL</span>;</div><div class="line">	error = <span class="string">""</span>;</div><div class="line">	result = <span class="number">0</span>;</div><div class="line">	m_MLSqlite = <span class="literal">nullptr</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 单例模式</span></div><div class="line">MLSqlite* MLSqlite::getInstance()&#123;</div><div class="line">	<span class="keyword">if</span>(m_MLSqlite == <span class="literal">nullptr</span>)&#123;</div><div class="line">		 m_MLSqlite = <span class="keyword">new</span> MLSqlite();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> m_MLSqlite;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> MLSqlite::openDatabase(<span class="keyword">const</span> <span class="keyword">char</span>* dbname)&#123;</div><div class="line">	<span class="built_in">string</span> dbpath = FileUtils::getInstance()-&gt;getWritablePath() + dbname;</div><div class="line">	<span class="comment">// 打开数据库，如果数据库文件不存在则创建！</span></div><div class="line">	result = sqlite3_open(dbpath.c_str(), &amp;mldb);</div><div class="line">	<span class="keyword">if</span>(result != SQLITE_OK)&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"open database fail %d"</span>, result);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> MLSqlite::createTable(<span class="keyword">const</span> <span class="keyword">char</span>* tablename, <span class="keyword">const</span> <span class="keyword">char</span>* sqlstr)&#123;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"create table %s (%s)"</span>, tablename, sqlstr)-&gt;getCString();</div><div class="line">	result = sqlite3_exec(mldb, sql, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;error);</div><div class="line">	<span class="keyword">if</span>(result != SQLITE_OK)&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"create table fail %d, error:%s"</span>, result, error);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 添加插入数据</span></div><div class="line"><span class="keyword">void</span> MLSqlite::insertData(<span class="keyword">const</span> <span class="keyword">char</span>* tablename, <span class="keyword">const</span> <span class="keyword">char</span>* sqlstr)&#123;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"insert into %s %s"</span>, tablename, sqlstr)-&gt;getCString();</div><div class="line">	result = sqlite3_exec(mldb, sql, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;error);</div><div class="line">	<span class="keyword">if</span>(result != SQLITE_OK)&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"insert data fail %d, error:%s"</span>, result, error);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 删除数据</div><div class="line">* DELETE FROM table_name WHERE  &#123;CONDITION&#125;;</div><div class="line">*/</div><div class="line"><span class="keyword">void</span> MLSqlite::deleteData(<span class="keyword">const</span> <span class="keyword">char</span>* tablename, <span class="keyword">const</span> <span class="keyword">char</span>* sqlstr)&#123;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"delete from %s %s"</span>, tablename, sqlstr)-&gt;getCString();</div><div class="line">	result = sqlite3_exec(mldb, sql, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;error);</div><div class="line">	<span class="keyword">if</span>(result != SQLITE_OK)&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"delete data fail %d, error:%s"</span>, result, error);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 更新数据</span></div><div class="line"><span class="keyword">void</span> MLSqlite::updateData(<span class="keyword">const</span> <span class="keyword">char</span>* tablename, <span class="keyword">const</span> <span class="keyword">char</span>* sqlstr)&#123;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"update %s set %s"</span>, tablename, sqlstr)-&gt;getCString();</div><div class="line">	result = sqlite3_exec(mldb, sql, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;error);</div><div class="line">	<span class="keyword">if</span>(result != SQLITE_OK)&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"update data fail %d, error:%s"</span>, result, error);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 查询所有数据</span></div><div class="line"><span class="keyword">void</span> MLSqlite::queryAllData(<span class="keyword">const</span> <span class="keyword">char</span>* tablename, <span class="keyword">const</span> function&lt;<span class="keyword">void</span> (<span class="keyword">char</span>**, <span class="keyword">int</span>, <span class="keyword">int</span>)&gt;&amp; callback)&#123;</div><div class="line">	<span class="keyword">char</span>** cResult;</div><div class="line">	<span class="keyword">int</span> row, col;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"select * from %s"</span>, tablename)-&gt;getCString();</div><div class="line">	result = sqlite3_get_table(mldb, sql, &amp;cResult, &amp;row, &amp;col, &amp;error);</div><div class="line">	callback(cResult, row, col);</div><div class="line">&#125;</div><div class="line"><span class="keyword">void</span> MLSqlite::queryAllData(<span class="keyword">const</span> <span class="keyword">char</span>* tablename, <span class="keyword">int</span> (*callback)(<span class="keyword">void</span>*,<span class="keyword">int</span>,<span class="keyword">char</span>**,<span class="keyword">char</span>**))&#123;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"select * from %s"</span>, tablename)-&gt;getCString();</div><div class="line">	<span class="comment">// 如果想处理查询的数据，需要提供一个回调函数</span></div><div class="line">	result = sqlite3_exec(mldb, sql, callback, <span class="literal">NULL</span>, &amp;error);</div><div class="line">	<span class="keyword">if</span>(result != SQLITE_OK)&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"query bad %d, error:%s"</span>, result, error);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 查询特定的数据</span></div><div class="line"><span class="built_in">string</span> MLSqlite::queryOneData(<span class="keyword">const</span> <span class="keyword">char</span>* tablename, <span class="keyword">const</span> <span class="keyword">char</span>* sqlstr, <span class="keyword">int</span> i)&#123;</div><div class="line">	<span class="keyword">char</span>** cResult;</div><div class="line">	<span class="keyword">int</span> row, col;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"select * from %s %s"</span>, tablename, sqlstr)-&gt;getCString();</div><div class="line">	<span class="comment">// 如果想处理查询的数据，需要提供一个回调函数，这里只需要反悔特定的数据</span></div><div class="line">	result = sqlite3_get_table(mldb, sql, &amp;cResult, &amp;row, &amp;col, &amp;error);</div><div class="line">	<span class="keyword">if</span>(result != SQLITE_OK)&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"query bad %d, error:%s"</span>, result, error);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> cResult[col + i];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 查询有多少条数据</span></div><div class="line"><span class="keyword">int</span> MLSqlite::queryData(<span class="keyword">const</span> <span class="keyword">char</span>* tablename, <span class="keyword">const</span> <span class="keyword">char</span>* sqlstr)&#123;</div><div class="line">	<span class="keyword">char</span>** re;</div><div class="line">	<span class="keyword">int</span> row, col;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"select * from %s %s"</span>, tablename, sqlstr)-&gt;getCString();</div><div class="line">	result = sqlite3_get_table(mldb, sql, &amp;re, &amp;row, &amp;col, &amp;error);</div><div class="line">	<span class="keyword">return</span> row;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 删除表</span></div><div class="line"><span class="keyword">void</span> MLSqlite::deleteTable(<span class="keyword">const</span> <span class="keyword">char</span>* tablename)&#123;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* sql = String::createWithFormat(<span class="string">"drop table %s"</span>, tablename)-&gt;getCString();</div><div class="line">	result = sqlite3_exec(mldb, sql, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;error);</div><div class="line">	<span class="keyword">if</span>(result != SQLITE_OK)&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"drop table bad %d, error:%s"</span>, result, error);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> MLSqlite::closeDatabase()&#123;</div><div class="line">	sqlite3_close(mldb);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>OK 在需要操作数据库的地方引用这个文件，并调用其中的方法就</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好像新版的&lt;code&gt;Cocos2d-x&lt;/code&gt;引擎包含了&lt;code&gt;sqlite3.h&lt;/code&gt;,但是，在我引用时会提示&lt;code&gt;sqlite3_open()&lt;/code&gt;无法解析，不知道怎么回事，所以我就不用他内置的了;&lt;br&gt;首先去&lt;a href=&quot;htt
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Cocos2d-x" scheme="http://melove.net/blog/categories/Develop/Cocos2d-x/"/>
    
    
      <category term="Database" scheme="http://melove.net/blog/tags/Database/"/>
    
      <category term="Sqlite" scheme="http://melove.net/blog/tags/Sqlite/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2d-x 3.x 使用rapidjson解析json文件</title>
    <link href="http://melove.net/blog/2014/11/cocos2d-x-rapidjson-parse-json-10041.html"/>
    <id>http://melove.net/blog/2014/11/cocos2d-x-rapidjson-parse-json-10041.html</id>
    <published>2014-11-02T03:26:53.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前在写一个小游戏的时候要把一些<code>关卡</code>、<code>属性</code>等数据保存在<code>json</code>里边，供代码读取，所以就看了下关于<code>Cocos2d-x</code>中解析<code>json</code>的一些方法，发现在<code>3.x</code>里只集成有<code>json</code>解析库的，就是<code>rapidjson</code>，还挺好用，然后稍微对解析<code>json</code>数据进行了下面的封装；</p>
<p>先留个坑吧 这里只是简单的记录下怎么解析的，代码中也有注释，就不一行行的解释了！有时间再详细的说说</p>
<h3 id="首先是解析字符串数据"><a href="#首先是解析字符串数据" class="headerlink" title="首先是解析字符串数据"></a>首先是解析字符串数据</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//根据传入的参数获取字符串（json最外围格式为Object格式）</span></div><div class="line"><span class="built_in">string</span> MyFunc::getJsonString(<span class="keyword">const</span> <span class="keyword">char</span>* alias, <span class="keyword">const</span> <span class="keyword">char</span>* filename)&#123;</div><div class="line"></div><div class="line">	rapidjson::Document doc;</div><div class="line"></div><div class="line">	<span class="comment">//判断文件是否存在</span></div><div class="line">	<span class="keyword">if</span>(!FileUtils::getInstance()-&gt;isFileExist(MyFunc::plusChar(g_file_text_path.c_str(), filename)))&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"json file not exist!!!"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//读取json文件并初始化 doc</span></div><div class="line">	<span class="built_in">string</span> data = FileUtils::getInstance()-&gt;getStringFromFile(MyFunc::plusChar(g_file_text_path.c_str(), filename));</div><div class="line">	doc.Parse&lt;rapidjson::kparsedefaultflags&gt;(data.c_str());</div><div class="line"></div><div class="line">	<span class="comment">//判断读取成功与否 和 是否为数组类型  </span></div><div class="line">	<span class="keyword">if</span> (doc.HasParseError() || !doc.IsArray()) &#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"get json data err!"</span>);  </div><div class="line">		<span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">	&#125;  </div><div class="line">	<span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">	rapidjson::Value&amp; texts = doc[count];</div><div class="line"></div><div class="line">	<span class="built_in">string</span> text = texts[alias].GetString();</div><div class="line">	<span class="built_in">log</span>(<span class="string">"text: %s"</span>, text.c_str());</div><div class="line"></div><div class="line">	<span class="keyword">return</span> text;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="当要解析的json数据包含有数组格式时，"><a href="#当要解析的json数据包含有数组格式时，" class="headerlink" title="当要解析的json数据包含有数组格式时，"></a>当要解析的json数据包含有数组格式时，</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 根据传入的参数获取字符串（json最外围格式为Object格式）内部包含array格式数据</span></div><div class="line"><span class="keyword">void</span> MyFunc::getJsonArray(<span class="keyword">const</span> <span class="keyword">char</span>* alias, <span class="keyword">const</span> <span class="keyword">char</span>* filename, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; &amp;words)&#123;</div><div class="line">	rapidjson::Document doc;</div><div class="line">	<span class="keyword">if</span>(!FileUtils::getInstance()-&gt;isFileExist(filename))&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"json file is not exist!!"</span>);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">std</span>::<span class="built_in">string</span> data = FileUtils::getInstance()-&gt;getStringFromFile(filename);</div><div class="line">	doc.Parse&lt;rapidjson::kparsedefaultflags&gt;(data.c_str());</div><div class="line">	<span class="keyword">if</span>(doc.HasParseError() || !doc.IsObject())&#123;</div><div class="line">		<span class="built_in">log</span>(<span class="string">"parse json error!!"</span>);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;  </div><div class="line">	rapidjson::Value&amp; texts = doc[alias];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;texts .Size(); i++)&#123;</div><div class="line">		words.push_back(texts[i].GetString());</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在写一个小游戏的时候要把一些&lt;code&gt;关卡&lt;/code&gt;、&lt;code&gt;属性&lt;/code&gt;等数据保存在&lt;code&gt;json&lt;/code&gt;里边，供代码读取，所以就看了下关于&lt;code&gt;Cocos2d-x&lt;/code&gt;中解析&lt;code&gt;json&lt;/code&gt;的一些方法，发现
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/blog/categories/Develop/"/>
    
      <category term="Cocos2d-x" scheme="http://melove.net/blog/categories/Develop/Cocos2d-x/"/>
    
    
      <category term="Json" scheme="http://melove.net/blog/tags/Json/"/>
    
      <category term="Cocos2d-x" scheme="http://melove.net/blog/tags/Cocos2d-x/"/>
    
      <category term="RapidJson" scheme="http://melove.net/blog/tags/RapidJson/"/>
    
  </entry>
  
  <entry>
    <title>个人游戏 2048动漫版介绍与下载</title>
    <link href="http://melove.net/blog/2014/10/app-share-game-2048-onepiece-10023.html"/>
    <id>http://melove.net/blog/2014/10/app-share-game-2048-onepiece-10023.html</id>
    <published>2014-10-28T01:55:10.000Z</published>
    <updated>2016-11-18T09:11:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>身为一个程序猿，没有点儿自己的东西岂不是很悲哀，岂不是很丢人！</p>
<p><code>So</code>不管怎样一定要搞出来一款自己的东西，就算很挫，那也是自己做出来的O(∩_∩)O~~<br>这次是自己动手写的，不过也参考了大牛的一些方法！少走不少弯路；自己做游戏自己玩，很爽 哈哈！</p>
<p>OK 废话不多说，开始正题：<br>这篇文章就是介绍我的第一款正式的游戏：2048动漫版，游戏模式仿照文字版2048，界面手动PS，自己玩儿的话肯定要加入自己喜欢的元素了，然后就摸索着实现了用图片的方式合并，就加入了我喜欢的海贼造型，就是有点儿太花了，还加了一个龙猫，不过没有找到很合适的图片，就随便<code>PS</code>了几张，效果还不错，等下给大家看看效果图；</p>
<p>下边这段话游戏的开发介绍</p>
<blockquote>
<p>  在浏览<code>Cocos2d-x</code>的时候无意间看到了大牛<code>touchsnow</code>以及他们的官方工具<code>CocosEditor</code> <a href="http://blog.makeapp.co" target="_blank" rel="external">CocosEditor官方博客</a>老牛了，最近有点儿迷上了它，虽然<code>bug</code>不少但是能省了不少开发工作，很喜欢，很强大；是针对cocos2d-js开发的，可以进行可视化编辑游戏界面，然后方便打包成apk，就跟着兴趣学了一下，当时也用<code>Cocos2d-Html5</code>实现了<code>2048</code>这个游戏，准确的说那时就是抄的！还有那个飞翔的小鸟，<code>cocos2d-js</code>开发起来还是挺快的，再加上之前学过一些<code>javascript</code>，很快就学会了，但是博主的那个插件<code>bug</code>还是比较多的（不过现在快更新了2.0版本，期待着发布）</p>
<p>  学了一段时间的<code>cocos2d-js</code>后发现有些特效实现起来还是有些僵硬的，感觉没有<code>cocos2d-x</code>强大，所以就想着学习一下<code>Cocos2d-x</code>，因为是用<code>C++</code>语言实现的，所以要从头开始，还是比较蛋疼的，还好之前稍微看了写<code>C++</code>的书，多少也有些了解，然后就边爬帖子，边<code>google</code>，边<code>coding</code>，慢慢的算是入门了吧，就想着用<code>Cocos2d-x</code>实现我之前的<code>2048</code>动漫版，而且要做完整</p>
<p>  这次实现这个游戏我添加上了我所能想到的，同时我现在的能力能实现的功能和效果！同时我也会写一系列文章，把开发这款游戏的过程记录下来，方便以后自己查看，也可以帮助新入门学习的朋友！</p>
</blockquote>
<h3 id="游戏下载"><a href="#游戏下载" class="headerlink" title="游戏下载"></a>游戏下载</h3><h4 id="本地下载："><a href="#本地下载：" class="headerlink" title="本地下载："></a>本地下载：</h4><p><a href="http://lzan13.qiniudn.com/blog/uploads/files/2014/02/DM2048.apk" target="_blank" rel="external">2048动漫版 - 本地下载</a></p>
<h4 id="各大市场下载："><a href="#各大市场下载：" class="headerlink" title="各大市场下载："></a>各大市场下载：</h4><p><a href="https://play.google.com/store/apps/details?id=net.melove.game.dm2048" target="_blank" rel="external">2048动漫版 - Google play （已被封）</a><br><a href="http://shouji.baidu.com/game/item?docid=7559974&amp;from=as" target="_blank" rel="external">2048动漫版 - 百度手机助手</a><br><a href="http://app.mi.com/detail/76048" target="_blank" rel="external">2048动漫版 - 小米商店</a><br><a href="http://www.anzhi.com/soft_1924688.html" target="_blank" rel="external">2048动漫版 - 安智市场</a><br><a href="http://www.wandoujia.com/apps/net.melove.game.dm2048" target="_blank" rel="external">2048动漫版 - 豌豆荚</a></p>
<h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><p>首先是进入游戏的主界面，有几个提示信息O(∩_∩)O~~，加上可选择游戏形式，还可以分享<br><a href="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_1.png" target="_blank" rel="external"><img src="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_1.png" alt="dm2048_1"></a></p>
<p>其中一种游戏形式<br><a href="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_2.png" target="_blank" rel="external"><img src="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_2.png" alt="dm2048_2"></a></p>
<p>另外一种形式<br><a href="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_3.png" target="_blank" rel="external"><img src="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_3.png" alt="dm2048_3"></a></p>
<p>可以进行截图分享，支持分享到微博，还可以调用Android系统分享功能，分享给你其他的好友，比如QQ、微信、等其他聊天与社交软件<br><a href="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_4.png" target="_blank" rel="external"><img src="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_4.png" alt="dm2048_4"></a></p>
<p>最后是一个动画的帮助页面，<br><a href="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_5.png" target="_blank" rel="external"><img src="http://lzan13.qiniudn.com/blog/uploads/images/2014/10/dm2048_5.png" alt="dm2048_5"></a></p>
<p>有什么bug可以告诉我哈，多谢各位的反馈 O(∩_∩)O~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;身为一个程序猿，没有点儿自己的东西岂不是很悲哀，岂不是很丢人！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;So&lt;/code&gt;不管怎样一定要搞出来一款自己的东西，就算很挫，那也是自己做出来的O(∩_∩)O~~&lt;br&gt;这次是自己动手写的，不过也参考了大牛的一些方法！少走不少弯路；自己做游戏自己
    
    </summary>
    
      <category term="APPShare" scheme="http://melove.net/blog/categories/APPShare/"/>
    
    
      <category term="Android" scheme="http://melove.net/blog/tags/Android/"/>
    
      <category term="APP" scheme="http://melove.net/blog/tags/APP/"/>
    
      <category term="Share" scheme="http://melove.net/blog/tags/Share/"/>
    
      <category term="2048" scheme="http://melove.net/blog/tags/2048/"/>
    
      <category term="Game" scheme="http://melove.net/blog/tags/Game/"/>
    
      <category term="OnePiece" scheme="http://melove.net/blog/tags/OnePiece/"/>
    
  </entry>
  
</feed>
