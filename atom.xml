<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lz&#39;s Notes</title>
  <subtitle>慢慢来，一步一个脚印！</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://melove.net/"/>
  <updated>2017-05-05T10:00:46.000Z</updated>
  <id>http://melove.net/</id>
  
  <author>
    <name>lzan13</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用环信3.xSDK集成小米推送实现消息以及通话时的离线通知</title>
    <link href="http://melove.net/2017/05/android-use-hyphenate-and-mi-push-complete-offline-notify-1493976924000.html"/>
    <id>http://melove.net/2017/05/android-use-hyphenate-and-mi-push-complete-offline-notify-1493976924000.html</id>
    <published>2017-05-05T09:35:24.000Z</published>
    <updated>2017-05-05T10:00:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>项目源码：<a href="https://github.com/lzan13" target="_blank" rel="external">lzan13</a> / <a href="https://github.com/lzan13/VMChatDemoCall" target="_blank" rel="external">VMChatDemoCall</a><br>简书博客：<a href="https://jianshu.com/" target="_blank" rel="external">lzan13</a> / <a href=""></a></p>
</blockquote>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>集成聊天，目的无非就是为了让两个人能够方便的沟通，但是有时我们会退到后台，kill 程序，这时候别人再发送消息就收不到了，以及有些用户还想在呼叫通话时也能通知对方，打开 app 接听通话，这些都因为 app 被杀死而实现不了；还好有推送服务可用，苹果有<code>apns</code>，虽然<code>Android</code>有<code>gcm</code>， 但是在国内也用不了，因此就催生了各种各样的第三方推送，环信这边根据市场设备情况，选择了两家推送集成，在国内可以集成小米和华为推送，这样可以保证在他们自家的设备上实现离线消息通知；</p>
<blockquote>
<p>PS：为什么不用极光，因为极光并不是国内那些 rom 厂商自家的推送服务，他们不允许第三方的服务器在自家设备的后台撒欢</p>
</blockquote>
<p>废话不多说，今天就通过集成最新的小米推送来实现下消息的离线推送通知，以及被呼叫方离线时方推送提醒对方启动 app 接听通话；其实都是通过集成推送完成！</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>首先你的项目需要集成环信 sdk，并且已经实现了发送消息以及音视频通话功能（这个可以直接用我上边 github 上的项目）；<br>然后你需要有小米的开发者账户，需要创建一个应用，包名要和你自己的项目一样，然后需要用到的就是应用的<code>appId</code>、<code>appKey</code>、<code>appSecret</code>，这些在环信开发者后台上传小米证书，以及在项目中初始化小米推送需要用到；</p>
<h3 id="开始集成"><a href="#开始集成" class="headerlink" title="开始集成"></a>开始集成</h3><p>首先这边先把证书弄好了，证书的名字和秘钥以及包名一定要对应：<br><img src="http://upload-images.jianshu.io/upload_images/672606-c5449b5706f8eaa7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ20170505-162024.png"></p>
<p>然后需要做的就是在代码中集成小米推送，需要做的有两个地方：</p>
<ol>
<li>在初始化 sdk 的时候调用 options 设置小米的 appId 和 appKey</li>
<li>在 AndroidManifest配置文件配置相应的权限和广播接收器以及服务</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 初始化环信sdk，并做一些注册监听的操作，这里把其他的处理都去掉了只写了小米推送</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initHyphenate</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// 初始化sdk的一些配置</span></div><div class="line">    EMOptions options = <span class="keyword">new</span> EMOptions();</div><div class="line">    <span class="comment">// 设置小米推送 appID 和 appKey</span></div><div class="line">    options.setMipushConfig(<span class="string">"2882303761517573806"</span>, <span class="string">"5981757315806"</span>);</div><div class="line">    <span class="comment">// 初始化环信SDK,一定要先调用init()</span></div><div class="line">    EMClient.getInstance().init(context, options);</div><div class="line">    <span class="comment">// 开启 debug 模式</span></div><div class="line">    EMClient.getInstance().setDebugMode(<span class="keyword">true</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后就是<code>AndroidManifest</code>配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">package</span>=<span class="string">"com.vmloft.develop.app.demo.call"</span>&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 项目权限配置 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--小米推送相关权限--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">permission</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">"com.vmloft.develop.app.demo.call.permission.MIPUSH_RECEIVE"</span></div><div class="line">        <span class="attr">android:protectionLevel</span>=<span class="string">"signature"</span>/&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.vmloft.develop.app.demo.call.permission.MIPUSH_RECEIVE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!--小米推送权限 end--&gt;</span></div><div class="line">    <span class="comment">&lt;!--程序入口--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">application</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">"com.vmloft.develop.app.demo.call.AppApplication"</span></div><div class="line">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">        <span class="attr">android:largeHeap</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</div><div class="line">        ...</div><div class="line">        <span class="comment">&lt;!--小米推送相关配置--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">service</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"com.xiaomi.push.service.XMJobService"</span></div><div class="line">            <span class="attr">android:enabled</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:exported</span>=<span class="string">"false"</span></div><div class="line">            <span class="attr">android:permission</span>=<span class="string">"android.permission.BIND_JOB_SERVICE"</span></div><div class="line">            <span class="attr">android:process</span>=<span class="string">":pushservice"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">service</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"com.xiaomi.push.service.XMPushService"</span></div><div class="line">            <span class="attr">android:enabled</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:process</span>=<span class="string">":pushservice"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">service</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"com.xiaomi.mipush.sdk.PushMessageHandler"</span></div><div class="line">            <span class="attr">android:enabled</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:exported</span>=<span class="string">"true"</span>/&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">service</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"com.xiaomi.mipush.sdk.MessageHandleService"</span></div><div class="line">            <span class="attr">android:enabled</span>=<span class="string">"true"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="comment">&lt;!--推送消息广播接收器--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">receiver</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">".push.MIPushReceiver"</span></div><div class="line">            <span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.xiaomi.mipush.RECEIVE_MESSAGE"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.xiaomi.mipush.MESSAGE_ARRIVED"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.xiaomi.mipush.ERROR"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">receiver</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"com.xiaomi.push.service.receivers.NetworkStatusReceiver"</span></div><div class="line">            <span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.net.conn.CONNECTIVITY_CHANGE"</span>/&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.DEFAULT"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">receiver</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"com.xiaomi.push.service.receivers.PingReceiver"</span></div><div class="line">            <span class="attr">android:exported</span>=<span class="string">"false"</span></div><div class="line">            <span class="attr">android:process</span>=<span class="string">":pushservice"</span>&gt;</div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.xiaomi.push.PING_TIMER"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--小米推送配置 end--&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>其中<code>MIPushReceiver</code>这个广播接收器可以不用自己实现，环信 sdk 已经集成小米广播接收器<code>EMMipushReceiver</code>实现，可以直接用（这里如果需要自己与自己的业务处理可以继承它去处理自己的逻辑；详细可以根据小米推送官方 sdk 文档进行了解下）；</p>
<p>当我们做完这些之后在收到离线消息后就可以收到推送通知了，只不过这个推送通知我们不能自定义，因为这些都是服务器推什么我们接受什么，这点比较坑！</p>
<h3 id="通话的离线通知"><a href="#通话的离线通知" class="headerlink" title="通话的离线通知"></a>通话的离线通知</h3><p>上边已经实现了消息的离线通知，我们下边就要做当呼叫对方时，对方却不在线，我们怎么通知对方打开 app 进行接听呢？<br>曾经集成过环信用户应该知道，在呼叫对方不在线后会马上结束通话，回调对方不在线，在新版3.2.2的 sdk 中新增设置音视频参数及呼叫时对方离线是否发推送的接口，在初始化的时候进行以下设置：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 设置通话过程中对方如果离线是否发送离线推送通知，默认 false</span></div><div class="line">EMClient.getInstance().callManager().getCallOptions().setIsSendPushIfOffline(<span class="keyword">true</span>);</div><div class="line"><span class="comment">// 设置了这个之后就不会在通话状态监听中回调对方不在线，需要实现另外一个回调</span></div><div class="line">...</div><div class="line"><span class="comment">// 设置音频通话推送提供者，在 onRemoteOffline()回调中给对方发送消息就行了</span></div><div class="line">EMClient.getInstance().callManager().setPushProvider(EMCallManager.EMCallPushProvider &#123;</div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRemoteOffline</span><span class="params">(String username)</span> </span>&#123;</div><div class="line">        EMMessage message = EMMessage.createTxtSendMessage(<span class="string">"有人呼叫你，开启 APP 接听吧"</span>, username);</div><div class="line">        <span class="comment">// 设置强制推送</span></div><div class="line">        message.setAttribute(<span class="string">"em_force_notification"</span>, <span class="string">"true"</span>);</div><div class="line">        <span class="comment">// 设置自定义推送提示</span></div><div class="line">        JSONObject extObj = <span class="keyword">new</span> JSONObject();</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            extObj.put(<span class="string">"em_push_title"</span>, <span class="string">"有人呼叫你，开启 APP 接听吧"</span>);</div><div class="line">            extObj.put(<span class="string">"extern"</span>, <span class="string">"定义推送扩展内容"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (JSONException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        message.setAttribute(<span class="string">"em_apns_ext"</span>, extObj);</div><div class="line">        message.setMessageStatusCallback(<span class="keyword">new</span> EMCallBack() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">              <span class="comment">// 在这里可以删除消息</span></div><div class="line">            &#125;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line">              <span class="comment">// 在这里可以删除消息</span></div><div class="line">            &#125;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;&#125;</div><div class="line">        &#125;);</div><div class="line">        EMClient.getInstance().chatManager().sendMessage(message);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>实现了上边的这个推送提供者之后，当对方不在线就会回调 onRemoteOffline()方法，就可以发送一条消息给对方，然后上边我们已经集成了小米推送，就可以通过离线推送的方式通知对方有新消息，对方看到后点击通知栏就可以打开 app了，这个时候我们的语音或视频呼叫还在一直呼叫，然后就可以连通了！</p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>OK 到这里基本就已经完成了，大家可以运行自己的项目，或者我上边的 demo 测试下，我这边通过小米5测试 OK；其实集成推送部分并不难，只是有几点需要注意：</p>
<ul>
<li>环信开发者后台的推送证书设置时一定要注意应用包名和小米推送后台的应用包名以及自己项目的包名，三个地方一定要一致</li>
<li>初始化设置一定要通过环信的 options 去设置小米推送的 appId 和 appKey，不需要用小米的注册方法自己注册；</li>
<li>Androidmanifest 一定要加上环信的广播接收器，或者继承自环信封装的广播接收器</li>
</ul>
<p>注意以上几点基本推送就没有问题了，如果不行可以先通过小米开发者后台的推送工具测试推送是否通了，然后检查以上几点；</p>
<blockquote>
<p>PS：华为推送相关其实一样，不过因为华为不允许个人开发者注册账户，所以这里暂时不赘述</p>
</blockquote>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>【<a href="http://dev.xiaomi.com/doc/?p=544" target="_blank" rel="external">小米推送Android SDK文档</a>】<br>【<a href="http://docs.easemob.com/im/200androidclientintegration/115thirdpartypush" target="_blank" rel="external">环信推送相关文档</a>】</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;项目源码：&lt;a href=&quot;https://github.com/lzan13&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lzan13&lt;/a&gt; / &lt;a href=&quot;https://github.com/lzan13/VMCh
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="Offline" scheme="http://melove.net/tags/Offline/"/>
    
      <category term="Easemob" scheme="http://melove.net/tags/Easemob/"/>
    
      <category term="Call" scheme="http://melove.net/tags/Call/"/>
    
      <category term="Hyphenate" scheme="http://melove.net/tags/Hyphenate/"/>
    
      <category term="MIPush" scheme="http://melove.net/tags/MIPush/"/>
    
      <category term="Message" scheme="http://melove.net/tags/Message/"/>
    
  </entry>
  
  <entry>
    <title>关于环信2.xSDK日志简单分析</title>
    <link href="http://melove.net/2017/03/android-library-im-sdk-easemob-v2-1489749784000.html"/>
    <id>http://melove.net/2017/03/android-library-im-sdk-easemob-v2-1489749784000.html</id>
    <published>2017-03-17T11:23:04.000Z</published>
    <updated>2017-03-17T11:30:45.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>我的简书：【<a href="http://www.jianshu.com/u/f53bcbbc7c3e" target="_blank" rel="external">lzan13</a> / <a href="http://www.jianshu.com/p/3b687c0937a7" target="_blank" rel="external">关于环信2.xSDK日志简单分析</a>】</p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先说下环信日志保存的机制，这边只要是在开启了<code>SDK</code>的<code>Debug</code>模式下调用环信的<code>EMLog.d()</code>方法输出的日志，日志内容都会在控制台输出的同时记录到设备的日志文件中；</p>
<p>这里就一些常见的日志跟大家略微解释下，一边能给大家在以后排查问题中起到一些帮助；</p>
<blockquote>
<p>PS：这里所列出来的日志内容只是特定情况测试下出现，在不同的设备，不同环境下稍微会有些出入，不过一些关键词的地方都应该是一样的，不要死心眼就好；</p>
</blockquote>
<p>还有就是这篇分析是在3.xSDK 日志的基础上分析的，虽然是现有的2.x，但是2.x 的日志不是很熟，所以先写的3.xSDK 的日志分析，不过大致都还是差不多的，2.x 这里稍微简单的说说</p>
<h3 id="SDK-的初始化"><a href="#SDK-的初始化" class="headerlink" title="SDK 的初始化"></a>SDK 的初始化</h3><p>2.xSDK在初始化时和3.x 稍微有些不同，2.x 初始化时不会检查DNS 配置，从日志和也可以看出来，当什么都不做只是初始化 SDK 时，日志中只是输出下当前是否已经有登录过的账户，以及自动登录设置状态，还有就是SDK版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">2017-03-02 15:26:54:721 [EaseMob][ERROR]passed userName : null</div><div class="line">2017-03-02 15:26:54:744 [EaseMob][ERROR]is autoLogin : true</div><div class="line">2017-03-02 15:26:54:768 [EaseMob][ERROR]lastLoginUser :</div><div class="line">2017-03-02 15:26:54:794 [EaseMob][ERROR]Easemob SDK is initialized with version : 2.3.4</div><div class="line">2017-03-02 15:26:54:855 [group]add group change listener:com.easemob.chatuidemo.DemoHelper$MyGroupChangeListener</div></pre></td></tr></table></figure></p>
<h3 id="手动登录"><a href="#手动登录" class="headerlink" title="手动登录"></a>手动登录</h3><p>当进行手动登录是，会首先获取 DNS 配置，然后获取完成 DNS 之后就开始登录了，登录要做的就是获取账户的 token，后续的操作都是根据这个 token 进行操作了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">2017-03-02 15:30:45:111 [EMChatManager][ERROR]emchat manager login in process:8369</div><div class="line">2017-03-02 15:30:45:161 [EMDBManager][ERROR]initDB : lz1</div><div class="line">2017-03-02 15:30:45:192 [Session]loginSync : in process 8369</div><div class="line">2017-03-02 15:30:45:218 [Session]login with eid:easemob-demo#chatdemoui_lz1</div><div class="line">2017-03-02 15:30:45:235 [group]group manager clear</div><div class="line">2017-03-02 15:30:45:253 [EMChatManager]</div><div class="line">2017-03-02 15:30:45:279 [EMDBManager]created chatdb for :lz1</div><div class="line">2017-03-02 15:30:45:302 [EMConnectionManager]configure</div><div class="line">2017-03-02 15:30:45:336 [EMDNSManager]getDnsConfig</div><div class="line">2017-03-02 15:30:45:365 [EMDNSManager]retrieveDNSConfig</div><div class="line">2017-03-02 15:30:45:396 [EMDNSManager]refreshDNSConfig</div><div class="line">2017-03-02 15:30:45:429 [EMDNSManager]try to retrieve dns config! with retries number : 0</div><div class="line">2017-03-02 15:30:45:458 [EMDNSManager]buildConfigUrl</div><div class="line">2017-03-02 15:30:45:488 [EMDNSManager]0 use domain</div><div class="line">2017-03-02 15:30:45:550 [EMDNSManager]retrieveDNSConfigWithCountDown</div><div class="line">2017-03-02 15:30:45:572 [EMDNSManager]config server url : http://rs.easemob.com/easemob/server.xml?sdk_version=2.3.4&amp;app_key=easemob-demo%23chatdemoui</div><div class="line">2017-03-02 15:30:45:592 [group]load all groups from db. size:0</div><div class="line">2017-03-02 15:30:45:615 [EMConversationManager]start to load converstations:</div><div class="line">2017-03-02 15:30:45:635 [EMDNSManager]returned config content : &lt;ebs&gt;&lt;deploy_name&gt;easemob&lt;/deploy_name&gt;&lt;file_version&gt;62&lt;/file_version&gt;&lt;valid_before&gt;1496172191&lt;/valid_before&gt;&lt;gcm_enabled&gt;true&lt;/gcm_enabled&gt;&lt;resolver&gt;&lt;hosts&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;59.110.89.59&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;112.126.66.111&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.174.78&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;116.62.83.103&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;120.26.17.225&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;120.26.15.207&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;port&gt;443&lt;/port&gt;&lt;protocol&gt;https&lt;/protocol&gt;&lt;/host&gt;&lt;/hosts&gt;&lt;/resolver&gt;&lt;tcp_resolver&gt;&lt;hosts&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;59.110.89.59&lt;/ip&gt;&lt;port&gt;2020&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;112.126.66.111&lt;/ip&gt;&lt;port&gt;2020&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.174.78&lt;/ip&gt;&lt;port&gt;2020&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;116.62.83.103&lt;/ip&gt;&lt;port&gt;2020&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;120.26.17.225&lt;/ip&gt;&lt;port&gt;2020&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;rs.easemob.com&lt;/domain&gt;&lt;ip&gt;120.26.15.207&lt;/ip&gt;&lt;port&gt;2020&lt;/port&gt;&lt;/host&gt;&lt;/hosts&gt;&lt;/tcp_resolver&gt;&lt;im&gt;&lt;hosts&gt;&lt;host&gt;&lt;domain&gt;im1.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.20.34&lt;/ip&gt;&lt;port&gt;443&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;im1.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.20.117&lt;/ip&gt;&lt;port&gt;443&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;im1.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.23.59&lt;/ip&gt;&lt;port&gt;443&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;im1.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.26.56&lt;/ip&gt;&lt;port&gt;443&lt;/port&gt;&lt;/host&gt;&lt;/hosts&gt;&lt;/im&gt;&lt;xmpp&gt;&lt;hosts&gt;&lt;host&gt;&lt;domain&gt;im-api.easemob.com&lt;/domain&gt;&lt;ip&gt;im-api.easemob.com&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;protocol&gt;http&lt;/protocol&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;im-api.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.159.193&lt;/ip&gt;&lt;port&gt;5280&lt;/port&gt;&lt;protocol&gt;http&lt;/protocol&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;im-api.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.228.160&lt;/ip&gt;&lt;port&gt;5280&lt;/port&gt;&lt;protocol&gt;http&lt;/protocol&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;im-api.easemob.com&lt;/domain&gt;&lt;port&gt;443&lt;/port&gt;&lt;protocol&gt;https&lt;/protocol&gt;&lt;/host&gt;&lt;/hosts&gt;&lt;/xmpp&gt;&lt;msync-im&gt;&lt;hosts&gt;&lt;host&gt;&lt;domain&gt;msync-im1.easemob.com&lt;/domain&gt;&lt;ip&gt;60.205.131.133&lt;/ip&gt;&lt;port&gt;6802&lt;/port&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;msync-im1.easemob.com&lt;/domain&gt;&lt;ip&gt;60.205.109.58&lt;/ip&gt;&lt;port&gt;7829&lt;/port&gt;&lt;/host&gt;&lt;/hosts&gt;&lt;/msync-im&gt;&lt;rest&gt;&lt;hosts&gt;&lt;host&gt;&lt;domain&gt;a1.easemob.com&lt;/domain&gt;&lt;port&gt;443&lt;/port&gt;&lt;protocol&gt;https&lt;/protocol&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;a1.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.159.193&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;protocol&gt;http&lt;/protocol&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;a1.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.228.160&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;protocol&gt;http&lt;/protocol&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;a1.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.0.214&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;protocol&gt;http&lt;/protocol&gt;&lt;/host&gt;&lt;host&gt;&lt;domain&gt;a1.easemob.com&lt;/domain&gt;&lt;ip&gt;182.92.4.52&lt;/ip&gt;&lt;port&gt;80&lt;/port&gt;&lt;protocol&gt;http&lt;/protocol&gt;&lt;/host&gt;&lt;/hosts&gt;&lt;/rest&gt;&lt;/ebs&gt;</div><div class="line">...</div><div class="line">获取 DNS 成功之后才是真正的认证登录，获取 TOKEN</div><div class="line">2017-03-02 15:30:46:507 [com.easemob.chat.core.EMInternalConfigManager]accesstoken : &#123;&quot;access_token&quot;:&quot;YWMtYt7kgP8XEeamVEtR2Q-CgwAAAVvC2ReE0obINNrCP8QG9pLb0WlQlRPIpDM&quot;,&quot;expires_in&quot;:5182813,&quot;user&quot;:&#123;&quot;uuid&quot;:&quot;603eadf0-ff17-11e6-8180-657de846951b&quot;,&quot;type&quot;:&quot;user&quot;,&quot;created&quot;:1488438654543,&quot;modified&quot;:1488439651099,&quot;username&quot;:&quot;lz1&quot;,&quot;activated&quot;:true,&quot;notification_display_style&quot;:1,&quot;device_token&quot;:&quot;/cRO2vRH64mWOH46+We1zxt4+onQRJOe26fvcX02iC0=&quot;,&quot;nickname&quot;:&quot;立正1&quot;,&quot;notifier_name&quot;:&quot;2882303761517426801&quot;&#125;&#125;</div><div class="line">...</div></pre></td></tr></table></figure></p>
<h3 id="自动登录"><a href="#自动登录" class="headerlink" title="自动登录"></a>自动登录</h3><p>自动登录基本和手动登录一样，唯一的区别就是自动登录没有输出<code>emchat manager login in process:8369</code>，这行是红色的，比较醒目，可以用这个来判断当前登录是自动登录，还是手动登录，还有一点就是自动登录时<code>lastLoginUser</code>这个也是有值的；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">2017-03-02 16:47:50:054 [EaseMob][ERROR]passed userName : null</div><div class="line">2017-03-02 16:47:50:085 [EaseMob][ERROR]is autoLogin : true</div><div class="line">2017-03-02 16:47:50:121 [EaseMob][ERROR]lastLoginUser : lz1</div><div class="line">2017-03-02 16:47:50:155 [EMDBManager][ERROR]initDB : lz1</div><div class="line">2017-03-02 16:47:50:190 [EaseMob][ERROR]Easemob SDK is initialized with version : 2.3.4</div><div class="line"></div><div class="line">下边会进行登录的一些操作，初始化，数据加载，以及推送相关的处理</div><div class="line">...</div></pre></td></tr></table></figure></p>
<h3 id="心跳定时器"><a href="#心跳定时器" class="headerlink" title="心跳定时器"></a>心跳定时器</h3><p>一切都准备好了之后，就是定义心跳定时器，第一次设置时<code>2&#39;00&quot;</code>后启动心跳定时器，后边会慢慢增加到<code>4&#39;30&quot;</code>，然后会按照<code>4&#39;30&quot;</code>这样循环下去，当出现心跳死了之后，会重新从头开始<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">2017-03-02 15:32:47:767 [smart ping]schedule next alarm</div><div class="line">2017-03-02 15:32:47:793 [smart ping]current heartbeat interval : 02:00:000 smart ping state : EMEvaluating</div><div class="line">2017-03-02 15:32:47:821 [smart ping]use 02:00:000 to start alarm</div><div class="line">2017-03-02 15:34:47:776 [EMHeartBeatReceiver]onReceive EMHeartBeatReceiver</div><div class="line">2017-03-02 15:34:47:812 [smart ping]post heartbeat runnable</div><div class="line">2017-03-02 15:34:47:867 [smart ping]has network connection:true has data conn:true isConnected to easemob server : true</div><div class="line">2017-03-02 15:34:47:917 [smart ping]acquire wake lock</div><div class="line">2017-03-02 15:34:47:941 [smart ping]check pingpong ...</div><div class="line">2017-03-02 15:34:48:876 [smart ping]send ping-pong type heartbeat</div><div class="line"></div><div class="line">发送心跳 ping pang</div><div class="line">2017-03-02 15:34:48:919 [SMACK:FileDebugger] SENT to182.92.23.59:443(202029101): &lt;iq id=&quot;6T82J-6&quot; type=&quot;get&quot;&gt;&lt;ping xmlns=&apos;urn:xmpp:ping&apos; /&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 15:34:48:960 [SMACK:FileDebugger] RCV from182.92.23.59:443(202029101): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;6T82J-6&apos; type=&apos;result&apos;/&gt;</div><div class="line">2017-03-02 15:34:48:992 [smart ping]success to send ping pong ... with current heartbeat interval : 02:00:000</div><div class="line">2017-03-02 15:34:49:018 [smart ping]send ping-pong successed</div><div class="line">2017-03-02 15:34:49:045 [smart ping]released the wake lock</div><div class="line">2017-03-02 15:34:49:100 [smart ping]schedule next alarm</div><div class="line">2017-03-02 15:34:49:135 [smart ping]current heartbeat interval : 02:45:000 smart ping state : EMEvaluating</div><div class="line">2017-03-02 15:34:49:176 [smart ping]use 02:45:000 to start alarm</div><div class="line">....</div><div class="line">2017-03-02 15:41:06:823 [smart ping]schedule next alarm</div><div class="line">2017-03-02 15:41:06:845 [smart ping]current heartbeat interval : 04:15:000 smart ping state : EMEvaluating</div><div class="line">2017-03-02 15:41:06:868 [smart ping]use 04:15:000 to start alarm</div><div class="line">2017-03-02 15:54:24:202 [EMHeartBeatReceiver]onReceive EMHeartBeatReceiver</div><div class="line">2017-03-02 15:54:24:248 [smart ping]post heartbeat runnable</div><div class="line">2017-03-02 15:54:24:303 [smart ping]has network connection:true has data conn:true isConnected to easemob server : true</div><div class="line">2017-03-02 15:54:24:355 [smart ping]acquire wake lock</div><div class="line">2017-03-02 15:54:24:384 [smart ping]send white heartbeat</div><div class="line">2017-03-02 15:54:24:437 [smart ping]released the wake lock</div><div class="line">2017-03-02 15:54:24:493 [smart ping]schedule next alarm</div><div class="line">2017-03-02 15:54:24:521 [smart ping]current heartbeat interval : 04:30:000 smart ping state : EMHitted</div><div class="line">2017-03-02 15:54:24:559 [smart ping]use 04:30:000 to start alarm</div></pre></td></tr></table></figure></p>
<h3 id="链接监听与重连"><a href="#链接监听与重连" class="headerlink" title="链接监听与重连"></a>链接监听与重连</h3><p>当 SDK 因为某些原因检测到与服务器的连接断开后，会回调连接中断监听，然后会启动重连线程，进行尝试重连，这个重连中如果网络不可用会直接跳过，等待下次的尝试，当网络连接恢复后，SDK 会马上尝试重连，中间会进行一系列的操作，连接成功后，会马上回调通知上层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">2017-03-02 16:25:44:566 [sxmppcon](202029101) socket was closed</div><div class="line">2017-03-02 16:25:44:620 [EMConnectionManager][ERROR]connectionClosedOnError in java.net.SocketException: recvfrom failed: ETIMEDOUT (Connection timed out)</div><div class="line">2017-03-02 16:25:44:699 [EMConnectionManager]register connectivity receiver.</div><div class="line">2017-03-02 16:25:44:763 [EMConnectionManager]connectivity receiver onReceiver</div><div class="line">2017-03-02 16:25:44:812 [EMConnectionManager]160587117 : enter startReconnectionThread()</div><div class="line">2017-03-02 16:25:44:842 [EMConnectionManager]start reconnectionThread()</div><div class="line">2017-03-02 16:25:44:934 [net]no data connection</div><div class="line">2017-03-02 16:25:44:967 [EMConnectionManager]on disconnected</div><div class="line">2017-03-02 16:25:44:994 [EMChatManager]connectionClosedOnError</div><div class="line">2017-03-02 16:25:45:015 [EMConnectionManager]run in reconnectionThread</div><div class="line">2017-03-02 16:25:45:038 [SMACK:FileDebugger] Connection closed due to an exception (202029101)</div><div class="line">2017-03-02 16:25:45:061 [smart ping] onDisconnected ... cnnListener:com.easemob.chat.EMSmartHeartBeatAws$3@f1bae79 EMSmartHeartBeat:com.easemob.chat.EMSmartHeartBeatAws@88857be</div><div class="line">2017-03-02 16:25:45:085 [EMConnectionManager]connectivity receiver onReceiver</div><div class="line">2017-03-02 16:25:45:111 [net]no data connection</div><div class="line">2017-03-02 16:25:45:819 [EMConnectionManager]run in reconnectionThread with connection 202029101</div><div class="line">2017-03-02 16:25:45:848 [net]no data connection</div><div class="line">2017-03-02 16:25:45:873 [EMConnectionManager]skip the reconnection since there is no data connection!</div><div class="line">2017-03-02 16:25:46:842 [EMChatManager]reconnectingIn in 8 </div><div class="line">2017-03-02 16:25:47:850 [EMChatManager]reconnectingIn in 7</div><div class="line">2017-03-02 16:25:48:922 [EMChatManager]reconnectingIn in 6</div><div class="line">2017-03-02 16:25:49:881 [EMChatManager]reconnectingIn in 5</div><div class="line">2017-03-02 16:25:50:888 [EMChatManager]reconnectingIn in 4</div><div class="line">2017-03-02 16:25:51:895 [EMChatManager]reconnectingIn in 3</div><div class="line">2017-03-02 16:25:52:948 [EMChatManager]reconnectingIn in 2</div><div class="line">2017-03-02 16:25:53:986 [EMChatManager]reconnectingIn in 1</div><div class="line">2017-03-02 16:25:54:990 [EMChatManager]reconnectingIn in 0</div><div class="line">2017-03-02 16:25:55:018 [EMConnectionManager]run in reconnectionThread with connection 202029101</div><div class="line">2017-03-02 16:25:55:044 [net]no data connection</div><div class="line">2017-03-02 16:25:55:071 [EMConnectionManager]skip the reconnection since there is no data connection!</div><div class="line">如果后边网络连接恢复后，会马上进行重连操作</div><div class="line">2017-03-02 16:33:21:869 [EMConnectionManager]connectivity receiver onReceiver</div><div class="line">2017-03-02 16:33:22:046 [net]has wifi connection</div><div class="line">2017-03-02 16:33:22:141 [EMConnectionManager]run in reconnectionThread with connection 202029101</div><div class="line">2017-03-02 16:33:22:357 [EMConnectionManager]160587117 : enter startReconnectionThread()</div><div class="line">2017-03-02 16:33:22:415 [EMConnectionManager]try to reconnectSync</div><div class="line">2017-03-02 16:33:22:513 [EMConnectionManager]enter connectSync</div><div class="line">2017-03-02 16:33:22:690 [EMConnectionManager]connection manager:connect</div><div class="line">2017-03-02 16:33:22:735 [EMConnectionManager]before connect</div><div class="line"></div><div class="line">等待认证响应</div><div class="line">2017-03-02 16:33:23:137 [SASLAuthentication]waiting for authentiation response!</div><div class="line">2017-03-02 16:33:23:445 [SMACK:FileDebugger]User logged (202029101): easemob-demo#chatdemoui_lz1@easemob.com@easemob.com:443/mobile</div><div class="line">2017-03-02 16:33:23:479 [EMConnectionManager]reconnectionSuccessful</div><div class="line">2017-03-02 16:33:23:670 [EMChatManager]reconnectionSuccessful</div><div class="line"></div><div class="line">回调链接成功</div><div class="line">2017-03-02 16:33:23:737 [smart ping] onConnectred ... cnnListener:com.easemob.chat.EMSmartHeartBeatAws$3@f1bae79 EMSmartHeartBeat:com.easemob.chat.EMSmartHeartBeatAws@88857be</div><div class="line">2017-03-02 16:33:23:761 [EMConnectionManager]enter initConnection()</div><div class="line">2017-03-02 16:33:23:782 [smart ping]reset interval...</div><div class="line">2017-03-02 16:33:23:802 [EMConnectionManager]already login. skip</div></pre></td></tr></table></figure></p>
<h3 id="被踢-amp-强制下线-amp-移除账户"><a href="#被踢-amp-强制下线-amp-移除账户" class="headerlink" title="被踢&amp;强制下线&amp;移除账户"></a>被踢&amp;强制下线&amp;移除账户</h3><p>收到连接断开的错误时，会马上记录断开原因的日志，然后会清空链接数据<br>remove:表示移除/禁用/强制下线，这三种状态的提示是一样的，只不过错误码不同<br>Replaced by new connection:表示异地登录</p>
<p>PS：需要注意的一点就是，当收到这几个状态的回调后需要手动调用<code>logout</code>，清除当前登录状态，因此在遇到被踢和强制下线的日志中一般都能看到和 logout 相关日志</p>
<p>关键词：<code>connectionClosedOnError</code>,<code>conflict</code>,<code>logout</code>,<code>connectionClosed</code>,<code>remove</code>,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">2017-03-02 16:57:16:011 [EMConnectionManager][ERROR]connectionClosedOnError in stream:error (conflict) text: Replaced by new connection</div><div class="line">2017-03-02 16:57:16:067 [EMConnectionManager][ERROR]connection closed caused by conflict. set autoreconnect to false</div><div class="line">2017-03-02 16:57:16:108 [EMConnectionManager]on disconnected</div><div class="line">2017-03-02 16:57:16:139 [EMChatManager]connectionClosedOnError</div><div class="line">2017-03-02 16:57:16:163 [SMACK:FileDebugger] Connection closed due to an exception (12605026)</div><div class="line">2017-03-02 16:57:16:187 [smart ping] onDisconnected ... cnnListener:com.easemob.chat.EMSmartHeartBeatAws$3@c21515d EMSmartHeartBeat:com.easemob.chat.EMSmartHeartBeatAws@be82ad2</div><div class="line">2017-03-02 16:57:16:209 [EMPushNotificationHelper]push notification helper ondestory</div><div class="line">2017-03-02 16:57:16:234 [EMChatManager] SDK Logout</div><div class="line">2017-03-02 16:57:16:256 [EMVoiceCallManager][WARN]no active call!</div><div class="line">2017-03-02 16:57:16:288 [EMVoiceCallManager]onCallStateChanged with callState = disconnected callError = error_none</div><div class="line">2017-03-02 16:57:16:315 [EMCustomerService]cancel helpdesk logout</div><div class="line">2017-03-02 16:57:16:336 [EMCustomerService]unregister helpdesk logout receiver</div><div class="line">2017-03-02 16:57:16:374 [InvitationsMonitor]invitationPacketListener = org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor$1@5c51e61</div><div class="line">2017-03-02 16:57:16:395 [EMChatRoomManager]init chat room manager</div><div class="line">2017-03-02 16:57:16:419 [group]group manager logout</div><div class="line">2017-03-02 16:57:16:443 [EMDBManager]close msg db</div><div class="line">2017-03-02 16:57:16:466 [Session]Session logout</div><div class="line">2017-03-02 16:57:16:489 [smart ping]stop heart beat timer</div><div class="line">2017-03-02 16:57:16:513 [smart ping]change smart ping state from : EMEvaluating to : EMStopped</div><div class="line">2017-03-02 16:57:16:539 [EMConnectionManager]35284046 : enter disconnect()</div><div class="line">2017-03-02 16:57:16:566 [EMConnectionManager]unregisterConnectivityReceiver()</div><div class="line">2017-03-02 16:57:16:589 [EMConnectionManager][ERROR]connectionClosed</div><div class="line">2017-03-02 16:57:16:609 [EMConnectionManager]on disconnected</div><div class="line">2017-03-02 16:57:16:629 [EMChatManager]closing connection</div><div class="line">2017-03-02 16:57:16:652 [EMConnectionManager]trying to disconnect connection （12605026)</div><div class="line">2017-03-02 16:57:16:673 [sxmppcon]enter disconnect (12605026)</div><div class="line">2017-03-02 16:57:16:694 [sxmppcon](12605026) shutdown</div><div class="line">2017-03-02 16:57:16:728 [sxmppcon]trying to close the socket : Socket[unconnected]</div><div class="line">2017-03-02 16:57:16:754 [sxmppcon](12605026) socket was closed</div><div class="line">2017-03-02 16:57:16:781 [sxmppcon]shutdown was called</div><div class="line">2017-03-02 16:57:16:834 [EMDNSManager]clearDnsConfig</div><div class="line">2017-03-02 16:57:16:862 [EMHostResolver]reset</div><div class="line">2017-03-02 16:57:16:965 [EMChatManager]do stop service</div><div class="line">2017-03-02 16:57:17:014 [EMChatService]onDestroy</div><div class="line"></div><div class="line">后台强制下线</div><div class="line">2017-03-02 17:03:01:255 [EMConnectionManager][ERROR]connectionClosedOnError in stream:error (conflict) text: User removed</div><div class="line">2017-03-02 17:03:01:299 [EMConnectionManager][ERROR]connection closed caused by conflict. set autoreconnect to false</div></pre></td></tr></table></figure></p>
<h3 id="推送相关"><a href="#推送相关" class="headerlink" title="推送相关"></a>推送相关</h3><p>推送部分2.x 和3.x 基本没有什么变化，都是在登录时检测推送服务是否可用，可以从日志中看到推送功能是否激活，然后获取<code>devicetoken</code>发送到服务器等，<code>devicetoken</code>这个值一定要存在，否者推送无效；这些可以作为检测集成离线推送本地设置是否有效的一些手段；<br>关键词：<code>GCM</code>,<code>push</code>,<code>devicetoken</code>,<code>sendDeviceToServer</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">2017-03-02 15:30:46:585 [EMPushNotificationHelper]GCM is enabled : true</div><div class="line">2017-03-02 15:30:46:613 [EMPushNotificationHelper]GCM service available : false</div><div class="line">2017-03-02 15:30:46:635 [EMPushNotificationHelper]mipush available : true</div><div class="line">2017-03-02 15:30:48:395 [EMPushNotificationHelper]third-party push available</div><div class="line">2017-03-02 15:30:49:430 [EMMipushReceiver]mi push reigster success</div><div class="line">2017-03-02 15:30:49:455 [EMPushNotificationHelper]devicetoken = tyPPd3IQ95+Gg/pYE5RoV1efO/aa4kcZHM+Mc+pPsjI=</div><div class="line">2017-03-02 15:30:49:476 [HttpClientManager]try send request, request url: http://182.92.159.193:80/easemob-demo/chatdemoui/devices with number: 0</div><div class="line">2017-03-02 15:30:49:497 [EMPushNotificationHelper]sendDeviceToServer SC_OK:</div><div class="line">2017-03-02 15:30:49:521 [EMPushNotificationHelper]send device token to server, token = tyPPd3IQ95+Gg/pYE5RoV1efO/aa4kcZHM+Mc+pPsjI=,url = http://182.92.159.193:80/easemob-demo/chatdemoui/users/lz1</div><div class="line">2017-03-02 15:30:49:544 [HttpClientManager]try send request, request url: http://182.92.159.193:80/easemob-demo/chatdemoui/users/lz1 with number: 0</div><div class="line">2017-03-02 15:30:49:569 [EMPushNotificationHelper]sendTokenToServer SC_OK:</div></pre></td></tr></table></figure></p>
<h2 id="消息相关"><a href="#消息相关" class="headerlink" title="消息相关"></a>消息相关</h2><p>消息这部分就比较简单了，首先就是发送，然后等待服务器返回 ack，更新服务器生成的 id，然后就是对方收到消息，会给自己发送已读 ack，</p>
<h3 id="发送新消息"><a href="#发送新消息" class="headerlink" title="发送新消息"></a>发送新消息</h3><p>关键词：<code>SENT</code>,<code>RCV</code>,<code>chat</code>,<code>received</code>,<code>acked</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">常见消息将要发送</div><div class="line">2017-03-03 14:39:12:018 [sender]try to send msg to:&lt;contact jid:easemob-demo#chatdemoui_lz2, username:lz2, nick:null&gt; msg:&#123;&quot;from&quot;:&quot;lz1&quot;,&quot;to&quot;:&quot;lz2&quot;,&quot;bodies&quot;:[&#123;&quot;type&quot;:&quot;txt&quot;,&quot;msg&quot;:&quot;复合肥减减肥&quot;&#125;],&quot;ext&quot;:&#123;&#125;&#125;</div><div class="line">SDK 内部开始发送消息</div><div class="line">2017-03-03 14:39:12:054 [SMACK:FileDebugger] SENT to182.92.20.34:443(260847652): &lt;message id=&quot;c6X5L-4-4c958&quot; to=&quot;easemob-demo#chatdemoui_lz2@easemob.com&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com/mobile&quot; type=&quot;chat&quot;&gt;&lt;body&gt;&#123;&quot;from&quot;:&quot;lz1&quot;,&quot;to&quot;:&quot;lz2&quot;,&quot;bodies&quot;:[&#123;&quot;type&quot;:&quot;txt&quot;,&quot;msg&quot;:&quot;复合肥减减肥&quot;&#125;],&quot;ext&quot;:&#123;&#125;&#125;&lt;/body&gt;&lt;thread&gt;gO9790&lt;/thread&gt;&lt;/message&gt;</div><div class="line"></div><div class="line">收到服务器返回的 ACK，这个时候消息 id 会由临时 id 返回服务器生成的 id</div><div class="line">2017-03-03 14:39:12:128 [SMACK:FileDebugger] RCV from182.92.20.34:443(260847652): &lt;message from=&apos;easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos;&gt;&lt;body&gt;c6X5L-4-4c958&lt;/body&gt;&lt;received xmlns=&apos;urn:xmpp:receipts&apos; mid=&apos;304763800656021220&apos;&gt;c6X5L-4-4c958&lt;/received&gt;&lt;/message&gt;</div><div class="line">2017-03-03 14:39:12:153 [acklistener]&lt;message to=&quot;easemob-demo#chatdemoui_lz1@easemob.com/mobile&quot; from=&quot;easemob.com&quot;&gt;&lt;body&gt;c6X5L-4-4c958&lt;/body&gt;&lt;received xmlns=&quot;urn:xmpp:receipts&quot; id=&quot;null&quot;/&gt;&lt;/message&gt;</div><div class="line">2017-03-03 14:39:12:179 [acklistener] found returned global server msg id : 304763800656021220</div><div class="line">2017-03-03 14:39:12:205 [acklistener]received server ack for msg:c6X5L-4-4c958</div><div class="line"></div><div class="line">收到对方已读 ACK</div><div class="line">2017-03-03 14:39:13:908 [SMACK:FileDebugger] RCV from182.92.20.34:443(260847652): &lt;message from=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; id=&apos;304763808801359888&apos;&gt;&lt;body&gt;304763800656021220&lt;/body&gt;&lt;acked xmlns=&apos;urn:xmpp:receipts&apos; id=&apos;304763800656021220&apos;/&gt;&lt;/message&gt;</div><div class="line">2017-03-03 14:39:13:957 [acklistener]&lt;message id=&quot;304763808801359888&quot; to=&quot;easemob-demo#chatdemoui_lz1@easemob.com&quot; from=&quot;easemob-demo#chatdemoui_lz2@easemob.com&quot;&gt;&lt;body&gt;304763800656021220&lt;/body&gt;&lt;acked xmlns=&quot;urn:xmpp:receipts&quot;&gt;&lt;/acked&gt;&lt;/message&gt;</div><div class="line"></div><div class="line">告诉服务器自己收到对方已读的 ACK</div><div class="line">2017-03-03 14:39:13:996 [chat]send ack message back to server:org.jivesoftware.smack.packet.Message@b4fff167</div><div class="line">2017-03-03 14:39:14:025 [SMACK:FileDebugger] SENT to182.92.20.34:443(260847652): &lt;message id=&quot;304763808801359888&quot; to=&quot;easemob.com&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com&quot;&gt;&lt;received xmlns=&quot;urn:xmpp:receipts&quot; id=&quot;304763808801359888&quot;/&gt;&lt;/message&gt;</div></pre></td></tr></table></figure></p>
<h3 id="接收新消息"><a href="#接收新消息" class="headerlink" title="接收新消息"></a>接收新消息</h3><p>2.x收到消息后服务器是直接把消息推给客户端，直接就接收解析了</p>
<p>关键词：<code>SENT</code>,<code>RCV</code>,<code>chat</code>,<code>received</code>,<code>acked</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">SDK 内部输出收到消息，这里还没到回调</div><div class="line">2017-03-03 14:41:44:038 [SMACK:FileDebugger] RCV from182.92.20.34:443(260847652): &lt;message from=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; type=&apos;chat&apos; id=&apos;304764453499439120&apos;&gt;&lt;body&gt;&#123;&quot;bodies&quot;:[&#123;&quot;msg&quot;:&quot;呱呱呱呱呱呱&quot;,&quot;type&quot;:&quot;txt&quot;&#125;],&quot;ext&quot;:&#123;&#125;,&quot;from&quot;:&quot;lz2&quot;,&quot;to&quot;:&quot;lz1&quot;&#125;&lt;/body&gt;&lt;/message&gt;</div><div class="line"></div><div class="line">收到消息后，给对方发送已送达 ACK</div><div class="line">2017-03-03 14:41:44:123 [SMACK:FileDebugger] SENT to182.92.20.34:443(260847652): &lt;message id=&quot;304764453499439120&quot; to=&quot;easemob.com&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com&quot;&gt;&lt;received xmlns=&quot;urn:xmpp:receipts&quot; id=&quot;304764453499439120&quot;/&gt;&lt;/message&gt;</div><div class="line"></div><div class="line">这里是回调部分</div><div class="line">2017-03-03 14:41:44:180 [chat]chat listener receive msg from:easemob-demo#chatdemoui_lz2@easemob.com body:&#123;&quot;bodies&quot;:[&#123;&quot;msg&quot;:&quot;呱呱呱呱呱呱&quot;,&quot;type&quot;:&quot;txt&quot;&#125;],&quot;ext&quot;:&#123;&#125;,&quot;from&quot;:&quot;lz2&quot;,&quot;to&quot;:&quot;lz1&quot;&#125;</div><div class="line">2017-03-03 14:41:44:217 [EMConversationManager]save message:304764453499439120</div><div class="line">2017-03-03 14:41:44:268 [EMConversationManager]get conversation for user:lz2</div><div class="line">2017-03-03 14:41:44:332 [EMDBManager]add converstion with:lz2</div><div class="line">2017-03-03 14:41:44:360 [EMDBManager]save msg to db</div><div class="line">2017-03-03 14:41:44:389 [EMDBManager]add converstion with:lz2</div><div class="line">2017-03-03 14:41:44:417 [notify]publish event, event type: EventNewMessage</div><div class="line">2017-03-03 14:41:44:446 [EaseChatFragment]onEvent: From: lz2 to: lz1</div><div class="line">2017-03-03 14:41:44:471 [Session]check connection...</div><div class="line">2017-03-03 14:41:44:495 [Session]check connection ok</div><div class="line">2017-03-03 14:41:44:532 [EMMessageHandler]send ack msg to:lz2 for msg:304764453499439120</div><div class="line"></div><div class="line">自己读了消息，给对方发送已读 ACK</div><div class="line">2017-03-03 14:41:44:566 [SMACK:FileDebugger] SENT to182.92.20.34:443(260847652): &lt;message id=&quot;c6X5L-5&quot; to=&quot;easemob-demo#chatdemoui_lz2@easemob.com&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com&quot;&gt;&lt;body&gt;304764453499439120&lt;/body&gt;&lt;acked xmlns=&quot;urn:xmpp:receipts&quot; id=&quot;304764453499439120&quot;/&gt;&lt;/message&gt;</div></pre></td></tr></table></figure></p>
<h2 id="业务逻辑相关"><a href="#业务逻辑相关" class="headerlink" title="业务逻辑相关"></a>业务逻辑相关</h2><p>从日志来看，其实2.x 的也算是通过消息的形式进行操作，这些都是 xmpp 的消息格式，都是发送代表特定操作的消息给服务器，然后服务器会返回这个消息发送成功，接着服务器会以新消息的形式告诉 SDK 操作成功，最后都和收发消息的日志逻辑一样；<br>需要注意的就是这些操作中的关键词；</p>
<h3 id="联系人"><a href="#联系人" class="headerlink" title="联系人"></a>联系人</h3><p>联系人的这些操作比较简单，</p>
<p>关键词：<code>subscribe</code>,<code>subscribed</code>,<code>roster</code>,<code>subscription</code>,<code>remove</code>,<code>special</code>,<code>privacy</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">收到好友请求很明显</div><div class="line">2017-03-02 17:14:34:815 [SMACK:FileDebugger] RCV from182.92.26.56:443(98255024): &lt;presence from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz2@easemob.com/mobile&apos; id=&apos;go1Xg-33&apos; type=&apos;subscribe&apos;&gt;&lt;status&gt;加个好友呗&lt;/status&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">同意对方请求</div><div class="line">2017-03-02 17:17:16:038 [SMACK:FileDebugger] SENT to182.92.26.56:443(98255024): &lt;presence id=&quot;yOWo3-18&quot; to=&quot;easemob-demo#chatdemoui_lz1@easemob.com&quot; type=&quot;subscribed&quot;&gt;&lt;status&gt;[resp:true]&lt;/status&gt;&lt;priority&gt;24&lt;/priority&gt;&lt;/presence&gt;</div><div class="line">2017-03-02 17:17:16:069 [SMACK:FileDebugger] SENT to182.92.26.56:443(98255024): &lt;presence id=&quot;yOWo3-19&quot; to=&quot;easemob-demo#chatdemoui_lz1@easemob.com&quot; type=&quot;subscribe&quot;&gt;&lt;status&gt;[resp:true]&lt;/status&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">2017-03-02 17:17:16:154 [SMACK:FileDebugger] RCV from182.92.26.56:443(98255024): &lt;iq from=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz2@easemob.com/mobile&apos; id=&apos;push413681005&apos; type=&apos;set&apos;&gt;&lt;query xmlns=&apos;jabber:iq:roster&apos; ver=&apos;e7f2a8501f158f4bc887cd876c4b0e83359d6a2f&apos;&gt;&lt;item subscription=&apos;from&apos; jid=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos;/&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line"></div><div class="line">对方同意了请求</div><div class="line">2017-03-02 17:17:15:584 [SMACK:FileDebugger] RCV from182.92.20.117:443(158255556): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;push4291800965&apos; type=&apos;set&apos;&gt;&lt;query xmlns=&apos;jabber:iq:roster&apos; ver=&apos;05fa1fbab5632f76d0dfd615e3544708fe7fd718&apos;&gt;&lt;item subscription=&apos;to&apos; jid=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos;/&gt;&lt;/query&gt;&lt;/iq&gt;&lt;presence from=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;yOWo3-18&apos; type=&apos;subscribed&apos;&gt;&lt;status&gt;[resp:true]&lt;/status&gt;&lt;priority&gt;24&lt;/priority&gt;&lt;/presence&gt;&lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;push825452103&apos; type=&apos;set&apos;&gt;&lt;query xmlns=&apos;jabber:iq:roster&apos; ver=&apos;1af84210f8a52f51ec94d169f67b85a7773ad289&apos;&gt;&lt;item subscription=&apos;to&apos; jid=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos;/&gt;&lt;/query&gt;&lt;/iq&gt;&lt;presence from=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;yOWo3-19&apos; type=&apos;subscribe&apos;&gt;&lt;status&gt;[resp:true]&lt;/status&gt;&lt;/presence&gt;&lt;presence from=&apos;easemob-demo#chatdemoui_lz2@easemob.com/mobile&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;yOWo3-15&apos;&gt;&lt;im_login_time&gt;665&lt;/im_login_time&gt;&lt;chat_login_time&gt;1416&lt;/chat_login_time&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">2017-03-02 17:17:15:624 [rosterstorage]updated roster version to:05fa1fbab5632f76d0dfd615e3544708fe7fd718</div><div class="line"></div><div class="line">删除联系人</div><div class="line">2017-03-02 18:04:02:519 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;2f21d-18&quot; type=&quot;set&quot;&gt;&lt;query xmlns=&quot;jabber:iq:roster&quot; &gt;&lt;item jid=&quot;easemob-demo#chatdemoui_lz2@easemob.com&quot; name=&quot;lz2&quot; subscription=&quot;remove&quot;&gt;&lt;/item&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line"></div><div class="line">将对方加入黑名单</div><div class="line">2017-03-02 18:04:50:625 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;2f21d-22&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com/mobile&quot; type=&quot;set&quot;&gt;&lt;query xmlns=&quot;jabber:iq:privacy&quot;&gt;&lt;list name=&quot;special&quot;&gt;&lt;item action=&quot;deny&quot; order=&quot;100&quot; type=&quot;jid&quot; value=&quot;easemob-demo#chatdemoui_lz2@easemob.com&quot;&gt;&lt;message/&gt;&lt;/item&gt;&lt;/list&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:04:50:651 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;push1906068296&apos; type=&apos;set&apos;&gt;&lt;query xmlns=&apos;jabber:iq:privacy&apos;&gt;&lt;list name=&apos;special&apos;/&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line"></div><div class="line">移除黑名单</div><div class="line">2017-03-02 18:08:38:085 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;2f21d-34&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com/mobile&quot; type=&quot;get&quot;&gt;&lt;query xmlns=&quot;jabber:iq:privacy&quot;&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:115 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;2f21d-34&apos; type=&apos;result&apos;&gt;&lt;query xmlns=&apos;jabber:iq:privacy&apos;&gt;&lt;active name=&apos;special&apos;/&gt;&lt;default name=&apos;special&apos;/&gt;&lt;list name=&apos;special&apos;/&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:140 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;2f21d-35&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com/mobile&quot; type=&quot;get&quot;&gt;&lt;query xmlns=&quot;jabber:iq:privacy&quot;&gt;&lt;list name=&quot;special&quot;/&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:165 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;2f21d-35&apos; type=&apos;result&apos;&gt;&lt;query xmlns=&apos;jabber:iq:privacy&apos;&gt;&lt;list name=&apos;special&apos;&gt;&lt;item type=&apos;jid&apos; value=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos; action=&apos;deny&apos; order=&apos;100&apos;&gt;&lt;message/&gt;&lt;/item&gt;&lt;/list&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:190 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;2f21d-36&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com/mobile&quot; type=&quot;get&quot;&gt;&lt;query xmlns=&quot;jabber:iq:privacy&quot;&gt;&lt;list name=&quot;special&quot;/&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:215 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;2f21d-36&apos; type=&apos;result&apos;&gt;&lt;query xmlns=&apos;jabber:iq:privacy&apos;&gt;&lt;list name=&apos;special&apos;&gt;&lt;item type=&apos;jid&apos; value=&apos;easemob-demo#chatdemoui_lz2@easemob.com&apos; action=&apos;deny&apos; order=&apos;100&apos;&gt;&lt;message/&gt;&lt;/item&gt;&lt;/list&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:253 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;2f21d-37&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com/mobile&quot; type=&quot;set&quot;&gt;&lt;query xmlns=&quot;jabber:iq:privacy&quot;&gt;&lt;default/&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:273 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;2f21d-37&apos; type=&apos;result&apos;/&gt;</div><div class="line">2017-03-02 18:08:38:293 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;2f21d-38&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com/mobile&quot; type=&quot;set&quot;&gt;&lt;query xmlns=&quot;jabber:iq:privacy&quot;&gt;&lt;list name=&quot;special&quot;/&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:323 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;push3498390976&apos; type=&apos;set&apos;&gt;&lt;query xmlns=&apos;jabber:iq:privacy&apos;&gt;&lt;list name=&apos;special&apos;/&gt;&lt;/query&gt;&lt;/iq&gt;</div><div class="line">2017-03-02 18:08:38:342 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;iq from=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos; id=&apos;2f21d-38&apos; type=&apos;result&apos;/&gt;</div><div class="line">2017-03-02 18:08:38:362 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;push3498390976&quot; from=&quot;easemob-demo#chatdemoui_lz1@easemob.com&quot; type=&quot;result&quot;&gt;&lt;/iq&gt;</div></pre></td></tr></table></figure></p>
<h3 id="群组操作"><a href="#群组操作" class="headerlink" title="群组操作"></a>群组操作</h3><p>群组的操作也都是以 xmpp 消息的格式进行操作的，仔细看的话都是一个个的消息体，只是这些消息体和聊天的消息稍微有些差别，不过可以根据中间的一些关键词来了解分析日志</p>
<p>关键词：<code>muc</code>,<code>create</code>,<code>201</code>,<code>invites</code>,<code>join</code>,<code>unavailable</code>,<code>affiliation</code>,<code>member</code>,<code>none</code>,<code>role</code>,<code>participant</code>,<code>none</code>,<code>321</code>,<code>110</code>,<code>destroy</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">创建新群组</div><div class="line">2017-03-02 17:50:13:330 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;presence id=&quot;2f21d-6&quot; to=&quot;easemob-demo#chatdemoui_1488448213229@conference.easemob.com/lz1&quot;&gt;&lt;x xmlns=&quot;http://jabber.org/protocol/muc&quot;&gt;&lt;/x&gt;&lt;create xmlns=&quot;http://jabber.org/protocol/muc&quot;&gt;&lt;/create&gt;&lt;/presence&gt;</div><div class="line">2017-03-02 17:50:13:356 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;presence from=&apos;easemob-demo#chatdemoui_1488448213229@conference.easemob.com/lz1&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item jid=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; affiliation=&apos;owner&apos; role=&apos;moderator&apos;/&gt;&lt;status code=&apos;201&apos;/&gt;&lt;/x&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">邀请加入群组</div><div class="line">2017-03-02 17:53:47:102 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;message id=&quot;2f21d-15&quot; to=&quot;easemob-demo#chatdemoui_1488448213229@conference.easemob.com&quot;&gt;&lt;x xmlns=&quot;http://jabber.org/protocol/muc#user&quot;&gt;&lt;invite to=&quot;easemob-demo#chatdemoui_lz2@easemob.com&quot;&gt;&lt;reason&gt;EaseMob-Group&lt;/reason&gt;&lt;/invite&gt;&lt;/x&gt;&lt;/message&gt;</div><div class="line"></div><div class="line">对方同意，并加入到群组中</div><div class="line">2017-03-02 17:53:47:657 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;presence from=&apos;easemob-demo#chatdemoui_1488448213229@conference.easemob.com/lz2&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item affiliation=&apos;member&apos; role=&apos;participant&apos;/&gt;&lt;/x&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">SDK 自动同意邀请会发送一条加入的消息给服务器</div><div class="line">2017-03-02 17:39:48:823 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;presence id=&quot;2f21d-4&quot; to=&quot;easemob-demo#chatdemoui_1479267663683@conference.easemob.com/lz1&quot;&gt;&lt;x xmlns=&quot;http://jabber.org/protocol/muc&quot;&gt;&lt;/x&gt;&lt;join xmlns=&quot;http://jabber.org/protocol/muc&quot;&gt;&lt;/join&gt;&lt;/presence&gt;</div><div class="line">2017-03-02 17:39:48:845 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;presence from=&apos;easemob-demo#chatdemoui_1479267663683@conference.easemob.com/lz1&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item jid=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; affiliation=&apos;member&apos; role=&apos;moderator&apos;/&gt;&lt;/x&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">收到被踢出群组</div><div class="line">2017-03-02 17:47:53:175 [SMACK:FileDebugger] RCV from182.92.23.59:443(12605026): &lt;message from=&apos;easemob-demo#chatdemoui_1479267663683@conference.easemob.com/lz1&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; type=&apos;notify&apos; presence_type=&apos;unavailable&apos; id=&apos;304441338491836376&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item affiliation=&apos;none&apos; role=&apos;none&apos;&gt;&lt;actor nick=&apos;lz2&apos;/&gt;&lt;/item&gt;&lt;status code=&apos;321&apos;/&gt;&lt;/x&gt;&lt;/message&gt;&lt;presence from=&apos;easemob-demo#chatdemoui_1479267663683@conference.easemob.com/lz1&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; type=&apos;unavailable&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item affiliation=&apos;none&apos; role=&apos;none&apos;/&gt;&lt;status code=&apos;110&apos;/&gt;&lt;/x&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">群组解散</div><div class="line">2017-03-02 17:59:45:100 [SMACK:FileDebugger] SENT to182.92.23.59:443(12605026): &lt;iq id=&quot;2f21d-17&quot; to=&quot;easemob-demo#chatdemoui_1488448213229@conference.easemob.com&quot; type=&quot;set&quot;&gt;&lt;query xmlns=&quot;http://jabber.org/protocol/muc#owner&quot;&gt;&lt;destroy&gt;&lt;reason&gt;delete-group&lt;/reason&gt;&lt;/destroy&gt;&lt;/query&gt;&lt;/iq&gt;</div></pre></td></tr></table></figure></p>
<h3 id="聊天室"><a href="#聊天室" class="headerlink" title="聊天室"></a>聊天室</h3><p>聊天室的操作基本和群组差不多的，一些操作的命令关键词都是一样的<br>关键词：<code>muc</code>,<code>join</code>,<code>affiliation</code>,<code>member</code>,<code>none</code>,<code>role</code>,<code>participant</code>,<code>none</code>,<code>321</code>,<code>chatroom</code>,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">加入聊天室</div><div class="line">2017-03-03 15:14:51:992 [SMACK:FileDebugger] SENT to182.92.20.34:443(260847652): &lt;presence id=&quot;c6X5L-13&quot; to=&quot;easemob-demo#chatdemoui_3759501541378@conference.easemob.com/lz1&quot;&gt;&lt;x xmlns=&quot;http://jabber.org/protocol/muc&quot;&gt;&lt;/x&gt;&lt;join xmlns=&quot;http://jabber.org/protocol/muc&quot;&gt;&lt;/join&gt;&lt;/presence&gt;</div><div class="line">2017-03-03 15:14:52:045 [SMACK:FileDebugger] RCV from182.92.20.34:443(260847652): &lt;presence from=&apos;easemob-demo#chatdemoui_3759501541378@conference.easemob.com/lz1&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com/mobile&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item affiliation=&apos;member&apos; role=&apos;participant&apos;/&gt;&lt;/x&gt;&lt;roomtype xmlns=&apos;easemob:x:roomtype&apos; type=&apos;chatroom&apos;/&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">收到其他人加入聊天室日志</div><div class="line">2017-03-03 15:24:25:677 [SMACK:FileDebugger] RCV from182.92.20.34:443(260847652): &lt;presence from=&apos;easemob-demo#chatdemoui_3759501541378@conference.easemob.com/lz2&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item affiliation=&apos;member&apos; role=&apos;participant&apos;/&gt;&lt;/x&gt;&lt;roomtype xmlns=&apos;easemob:x:roomtype&apos; type=&apos;chatroom&apos;/&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">其他人离开聊天室</div><div class="line">2017-03-03 15:25:15:858 [SMACK:FileDebugger] RCV from182.92.20.34:443(260847652): &lt;presence from=&apos;easemob-demo#chatdemoui_3759501541378@conference.easemob.com/lz2&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; type=&apos;unavailable&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item affiliation=&apos;none&apos; role=&apos;none&apos;/&gt;&lt;/x&gt;&lt;roomtype xmlns=&apos;easemob:x:roomtype&apos; type=&apos;chatroom&apos;/&gt;&lt;/presence&gt;</div><div class="line"></div><div class="line">服务器把自己踢出聊天室</div><div class="line">2017-03-03 15:28:09:622 [SMACK:FileDebugger] RCV from182.92.20.34:443(260847652): &lt;message from=&apos;easemob-demo#chatdemoui_3759501541378@conference.easemob.com/lz1&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; type=&apos;notify&apos; presence_type=&apos;unavailable&apos; id=&apos;304776417562855424&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item affiliation=&apos;none&apos; role=&apos;none&apos;&gt;&lt;actor nick=&apos;系统管理员&apos;/&gt;&lt;/item&gt;&lt;status code=&apos;321&apos;/&gt;&lt;/x&gt;&lt;/message&gt;</div><div class="line"></div><div class="line">聊天室解散</div><div class="line">2017-03-03 15:29:33:394 [SMACK:FileDebugger] RCV from182.92.20.34:443(260847652): &lt;message from=&apos;easemob-demo#chatdemoui_3759501541378@conference.easemob.com/lz1&apos; to=&apos;easemob-demo#chatdemoui_lz1@easemob.com&apos; type=&apos;notify&apos; presence_type=&apos;unavailable&apos; id=&apos;304776777249589296&apos;&gt;&lt;x xmlns=&apos;http://jabber.org/protocol/muc#user&apos;&gt;&lt;item affiliation=&apos;none&apos; role=&apos;none&apos;/&gt;&lt;destroy&gt;&lt;reason&gt;&lt;/reason&gt;&lt;/destroy&gt;&lt;/x&gt;&lt;/message&gt;</div></pre></td></tr></table></figure></p>
<h2 id="通话相关"><a href="#通话相关" class="headerlink" title="通话相关"></a>通话相关</h2><p>由于通话功能大部分都是由底层实现，也就先不写了</p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>没有什么能一眼看出错误的方法，只要记住正常的日志是什么样的，以后只要遇到错误的日志就知道这不正常了，所有能通过日志看出来问题的问题，都不是说一下根据哪一点日志就能知道的，一般都是需要联系下上下文的日志，然后结合场景才好分析</p>
<p>没什么投机取巧的方式，其实都是熟能生巧，然后大家互相交流，分享自己所知道的</p>
<p>最后希望这一篇分析能对大家有所帮助，</p>
<p>错误码参考：<a href="http://docs.easemob.com/start/450errorcode/20androiderrorcode" target="_blank" rel="external">环信官方 API 文档 Error</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;我的简书：【&lt;a href=&quot;http://www.jianshu.com/u/f53bcbbc7c3e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lzan13&lt;/a&gt; / &lt;a href=&quot;http://www.jiansh
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="Easemob" scheme="http://melove.net/tags/Easemob/"/>
    
      <category term="SDK" scheme="http://melove.net/tags/SDK/"/>
    
      <category term="IM" scheme="http://melove.net/tags/IM/"/>
    
      <category term="Log" scheme="http://melove.net/tags/Log/"/>
    
  </entry>
  
  <entry>
    <title>关于环信3.xSDK日志简单分析</title>
    <link href="http://melove.net/2017/03/android-library-im-sdk-hyphenate-v3-1489749364000.html"/>
    <id>http://melove.net/2017/03/android-library-im-sdk-hyphenate-v3-1489749364000.html</id>
    <published>2017-03-17T11:16:04.000Z</published>
    <updated>2017-03-17T11:29:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>我的简书：【<a href="http://www.jianshu.com/u/f53bcbbc7c3e" target="_blank" rel="external">lzan13</a> / <a href="http://www.jianshu.com/p/a194fa19bd6a" target="_blank" rel="external">关于环信3.xSDK日志简单分析</a>】</p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先说下环信日志保存的机制，这边只要是在开启了<code>SDK</code>的<code>Debug</code>模式下调用环信的<code>EMLog.d()</code>方法输出的日志，日志内容都会在控制台输出的同时记录到设备的日志文件中；</p>
<p>这里就一些常见的日志跟大家略微解释下，一边能给大家在以后排查问题中起到一些帮助；</p>
<blockquote>
<p>PS：这里所列出来的日志内容只是特定情况测试下出现，在不同的设备，不同环境下稍微会有些出入，不过一些关键词的地方都应该是一样的，不要死心眼就好；</p>
</blockquote>
<h2 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h2><h3 id="SDK-的初始化"><a href="#SDK-的初始化" class="headerlink" title="SDK 的初始化"></a>SDK 的初始化</h3><p>SDK 初始化的时候会首先检查 DNS 配置信息是否存在，如果不存在，在初始化时会首先请求 DNS 配置列表，请求成功后就会返回一个<code>json</code>串，2.x 是<code>xml</code>格式内容；如果当对方的网络情况有问题的时候，这一步就可以看出一些问题，比如请求 dns 列表失败等</p>
<p>关键词：<code>getDnsListFromServer</code>,<code>parseDnsServer</code>,<code>dns_time</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 16:23:31:497]: =============EMChatClientImpl::init()==================</div><div class="line">[2017/3/1 16:23:31:497]: dns config mode is 1</div><div class="line">[2017/3/1 16:23:31:497]: EMConfigManager::init() </div><div class="line">[2017/3/1 16:23:31:497]: No config file, do nothing</div><div class="line">[2017/3/1 16:23:31:497]: addConnectionListener</div><div class="line">[2017/3/1 16:23:31:499]: =============== Call Manager init ===============</div><div class="line">[2017/3/1 16:23:31:499]: addConnectionListener</div><div class="line">[2017/3/1 16:23:31:506]: registerContactListener</div><div class="line">[2017/3/1 16:23:31:511]: restBaseUrl()</div><div class="line">[2017/3/1 16:23:31:511]: EMDNSManager::getCurrentHost: type: 2</div><div class="line">[2017/3/1 16:23:31:512]: EMSessionManager::checkDNS()</div><div class="line">[2017/3/1 16:23:31:512]: valid_time: </div><div class="line">[2017/3/1 16:23:31:512]: no saved dns list, download it</div><div class="line">[2017/3/1 16:23:31:514]: getDnsListFromServer()</div><div class="line">[2017/3/1 16:23:31:514]: buildUrl(): http://rs.easemob.com/easemob/server.json?sdk_version=3.2.3&amp;app_key=easemob-demo%23chatdemoui&amp;file_version=1</div><div class="line">[2017/3/1 16:23:31:631]: [EMARHttpAPI] httpExecute code: 200</div><div class="line">[2017/3/1 16:23:31:631]: 1 time retry</div><div class="line">[2017/3/1 16:23:31:631]: DNS List size: 2115</div><div class="line">[2017/3/1 16:23:31:631]: EMSessionManager::parseDnsServer: &#123;&quot;file_version&quot;:&quot;61&quot;,&quot;resolver&quot;:&#123;&quot;hosts&quot;:[&#123;&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;59.110.89.59&quot;&#125;,&#123;&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;112.126.66.111&quot;&#125;,&#123;&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.174.78&quot;&#125;,&#123;&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;116.62.83.103&quot;&#125;,&#123;&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;120.26.17.225&quot;&#125;,&#123;&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;120.26.15.207&quot;&#125;,&#123;&quot;protocol&quot;:&quot;https&quot;,&quot;port&quot;:&quot;443&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;&#125;]&#125;,&quot;rest&quot;:&#123;&quot;hosts&quot;:[&#123;&quot;protocol&quot;:&quot;https&quot;,&quot;port&quot;:&quot;443&quot;,&quot;domain&quot;:&quot;a1.easemob.com&quot;&#125;,&#123;&quot;protocol&quot;:&quot;http&quot;,&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;a1.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.159.193&quot;&#125;,&#123;&quot;protocol&quot;:&quot;http&quot;,&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;a1.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.228.160&quot;&#125;,&#123;&quot;protocol&quot;:&quot;http&quot;,&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;a1.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.0.214&quot;&#125;,&#123;&quot;protocol&quot;:&quot;http&quot;,&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;a1.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.4.52&quot;&#125;]&#125;,&quot;valid_before&quot;:&quot;1496085791&quot;,&quot;im&quot;:&#123;&quot;hosts&quot;:[&#123;&quot;port&quot;:&quot;443&quot;,&quot;domain&quot;:&quot;im1.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.20.34&quot;&#125;,&#123;&quot;port&quot;:&quot;443&quot;,&quot;domain&quot;:&quot;im1.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.20.117&quot;&#125;,&#123;&quot;port&quot;:&quot;443&quot;,&quot;domain&quot;:&quot;im1.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.23.59&quot;&#125;,&#123;&quot;port&quot;:&quot;443&quot;,&quot;domain&quot;:&quot;im1.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.26.56&quot;&#125;]&#125;,&quot;deploy_name&quot;:&quot;easemob&quot;,&quot;tcp_resolver&quot;:&#123;&quot;hosts&quot;:[&#123;&quot;port&quot;:&quot;2020&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;59.110.89.59&quot;&#125;,&#123;&quot;port&quot;:&quot;2020&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;112.126.66.111&quot;&#125;,&#123;&quot;port&quot;:&quot;2020&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.174.78&quot;&#125;,&#123;&quot;port&quot;:&quot;2020&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;116.62.83.103&quot;&#125;,&#123;&quot;port&quot;:&quot;2020&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;120.26.17.225&quot;&#125;,&#123;&quot;port&quot;:&quot;2020&quot;,&quot;domain&quot;:&quot;rs.easemob.com&quot;,&quot;ip&quot;:&quot;120.26.15.207&quot;&#125;]&#125;,&quot;msync-im&quot;:&#123;&quot;hosts&quot;:[&#123;&quot;port&quot;:&quot;6801&quot;,&quot;domain&quot;:&quot;msync-im1.easemob.com&quot;,&quot;ip&quot;:&quot;60.205.131.133&quot;&#125;,&#123;&quot;port&quot;:&quot;7830&quot;,&quot;domain&quot;:&quot;msync-im1.easemob.com&quot;,&quot;ip&quot;:&quot;60.205.109.58&quot;&#125;]&#125;,&quot;xmpp&quot;:&#123;&quot;hosts&quot;:[&#123;&quot;protocol&quot;:&quot;http&quot;,&quot;port&quot;:&quot;80&quot;,&quot;domain&quot;:&quot;im-api.easemob.com&quot;,&quot;ip&quot;:&quot;im-api.easemob.com&quot;&#125;,&#123;&quot;protocol&quot;:&quot;http&quot;,&quot;port&quot;:&quot;5280&quot;,&quot;domain&quot;:&quot;im-api.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.159.193&quot;&#125;,&#123;&quot;protocol&quot;:&quot;http&quot;,&quot;port&quot;:&quot;5280&quot;,&quot;domain&quot;:&quot;im-api.easemob.com&quot;,&quot;ip&quot;:&quot;182.92.228.160&quot;&#125;,&#123;&quot;protocol&quot;:&quot;https&quot;,&quot;port&quot;:&quot;443&quot;,&quot;domain&quot;:&quot;im-api.easemob.com&quot;&#125;]&#125;,&quot;gcm_enabled&quot;:&quot;true&quot;&#125;</div><div class="line">[2017/3/1 16:23:31:631]: current time: 1488356611631</div><div class="line">[2017/3/1 16:23:31:631]: valid time: 1496085791000</div><div class="line">[2017/3/1 16:23:31:631]: saveConfigs()</div><div class="line">[2017/3/1 16:23:31:632]: write to config file: &#123;</div><div class="line">    &quot;dns_time&quot;:&quot;1496085791000&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="手动登录"><a href="#手动登录" class="headerlink" title="手动登录"></a>手动登录</h3><p>当进行手动登录是，会首先获取 DNS 配置，（上边初始化时不是已经获取了么，为什么还要获取？因为 sdk 就这样写的，所以它又获取了一次😓）如果不存在就去获取，获取失败的情况下会进行多次尝试，然后获取完成 DNS 之后就开始登录了，登录要做的就是获取账户的 token，后续的操作都是根据这个 token 进行操作了</p>
<p>主要关键词：<code>login</code>,<code>getDnsListFromServer</code>,<code>fetchToken</code>,<code>token</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 16:39:6:481]: [EMClient] emchat manager login in process:19581</div><div class="line">[2017/3/1 16:39:6:539]: EMSessionManager::login(): lz1</div><div class="line">[2017/3/1 16:39:6:539]: getDnsListFromServer()</div><div class="line">...</div><div class="line">这里会同样的去获取 DNS 配置</div><div class="line">...</div><div class="line">[2017/3/1 10:1:41:794]: current host: domain: 182.92.0.214 port: 80</div><div class="line">[2017/3/1 10:1:41:794]: fetchTokenForUser()http://182.92.0.214:80/shztzn/smartfarm/token</div><div class="line">[2017/3/1 10:1:41:895]: [retrieve token time] 0: 0:101</div><div class="line">[2017/3/1 10:1:41:895]: fetchToken success </div><div class="line">[2017/3/1 10:1:41:895]: saveToken(): user: pad8a7195bffad4b6bdb65e533e969e43c2 time: 1488333701895</div><div class="line">[2017/3/1 10:1:41:921]: savetoken() result: 1</div><div class="line">[2017/3/1 10:1:41:921]: EMDNSManager::getCurrentHost: type: 1</div><div class="line">[2017/3/1 10:1:41:922]: EMSessionManager::checkDNS()</div><div class="line">[2017/3/1 10:1:41:922]: EMDNSManager::getHost: type: 1</div><div class="line">[2017/3/1 10:1:41:922]: current host: domain: 60.205.131.133 port: 6801</div><div class="line">[2017/3/1 10:1:41:922]: token is valid</div><div class="line">[2017/3/1 10:1:41:922]: setServer: 60.205.131.133</div><div class="line">[2017/3/1 10:1:41:922]: Calling connect...</div><div class="line">[2017/3/1 10:1:41:922]: doConnect()</div><div class="line">[2017/3/1 10:1:41:922]: current connectState: 0</div><div class="line">[2017/3/1 10:1:41:922]: log: level: 0, area: 1, ChatClient::connect() </div><div class="line">[2017/3/1 10:1:41:922]: log: level: 0, area: 2, getSocket(): 41</div><div class="line">[2017/3/1 10:1:41:922]: log: level: 1, area: 2, connectSocket(): start to connecting...</div><div class="line">[2017/3/1 10:1:41:958]: log: level: 1, area: 2, connectSocket(): connect finished</div><div class="line">...</div></pre></td></tr></table></figure></p>
<h3 id="自动登录"><a href="#自动登录" class="headerlink" title="自动登录"></a>自动登录</h3><p>在3.x中确定自动登录只需要一个关键词就好：<code>autoLogin</code><br>需要注意一点，自动登录和重连不一样，自动登录包含初始化以及 DNS 的检测，重连一般不检测 DNS，自动登录最后输出的日志基本和重连的一样，都是进行网络链接；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 17:30:17:640]: autoLogin</div><div class="line">[2017/3/1 17:30:17:641]: EMSessionManager::login(): lz1</div><div class="line">[2017/3/1 17:30:17:641]: EMDNSManager::getCurrentHost: type: 1</div><div class="line">[2017/3/1 17:30:17:641]: EMSessionManager::checkDNS()</div><div class="line">[2017/3/1 17:30:17:641]: valid_time: 1496085791000</div><div class="line">[2017/3/1 17:30:17:641]: EMSessionManager::parseDnsServer: autologin</div><div class="line">[2017/3/1 17:30:17:642]: current time: 1488360617642</div><div class="line">[2017/3/1 17:30:17:642]: valid time: 1496085791000</div><div class="line">[2017/3/1 17:30:17:642]: saveConfigs()</div><div class="line">[2017/3/1 17:30:17:643]: write to config file: &#123;</div><div class="line">    &quot;dns_time&quot;:&quot;1496085791000&quot;</div><div class="line">&#125;</div><div class="line">[2017/3/1 17:30:17:649]: checkDNS finished</div><div class="line">[2017/3/1 17:30:17:651]: Calling connect...</div><div class="line">[2017/3/1 17:30:17:651]: doConnect()</div><div class="line">[2017/3/1 17:30:17:651]: current connectState: 0</div><div class="line">[2017/3/1 17:30:17:651]: log: level: 0, area: 1, ChatClient::connect() </div><div class="line">[2017/3/1 17:30:17:653]: log: level: 0, area: 2, getSocket(): 35</div><div class="line">[2017/3/1 17:30:17:653]: log: level: 1, area: 2, connectSocket(): start to connecting...</div><div class="line">[2017/3/1 17:30:17:665]: log: level: 1, area: 2, connectSocket(): connect finished</div></pre></td></tr></table></figure></p>
<h3 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h3><p>推出的登录的日志很简单，清空一些数据，然后断开连接等;</p>
<p>关键词：<code>logout</code>,<code>disconnect</code>,<code>cleanup</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 10:1:39:707]: begin logout ..</div><div class="line">[2017/3/1 10:1:39:707]: EMSessionManager::disconnect()</div><div class="line">[2017/3/1 10:1:39:707]: clearDnsConfig()</div><div class="line">[2017/3/1 10:1:39:707]: logout complete</div><div class="line">[2017/3/1 10:1:39:708]: saveConfigs()</div><div class="line">[2017/3/1 10:1:39:708]: write to config file: &#123;</div><div class="line">    &quot;dns_time&quot;:&quot;-1&quot;</div><div class="line">&#125;</div><div class="line">[2017/3/1 10:1:40:265]: stopReceive()</div><div class="line">[2017/3/1 10:1:40:265]: log: level: 0, area: 1, ChatClient::disconnect()</div><div class="line">[2017/3/1 10:1:40:265]: log: level: 1, area: 2, cleanup() 41</div><div class="line">[2017/3/1 10:1:40:265]: log: level: 1, area: 2, closeSocket() 41</div><div class="line">[2017/3/1 10:1:40:265]: log: level: 2, area: 1, handleDisconnect:14</div></pre></td></tr></table></figure></p>
<h3 id="心跳定时器"><a href="#心跳定时器" class="headerlink" title="心跳定时器"></a>心跳定时器</h3><p>一切都准备好了之后，就是定义心跳定时器，第一次设置时<code>2&#39;00&quot;</code>后启动心跳定时器，后边会慢慢增加到<code>4&#39;30&quot;</code>，然后会按照<code>4&#39;30&quot;</code>这样循环下去<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 16:39:7:52]: [smart ping] change smart ping state from : EMReady to : EMEvaluating</div><div class="line">[2017/3/1 16:39:7:52]: [smart ping] reset interval...</div><div class="line">[2017/3/1 16:39:7:52]: [smart ping] change smart ping state from : EMEvaluating to : EMEvaluating</div><div class="line">[2017/3/1 16:39:7:55]: [smart ping]  onConnectred ...</div><div class="line">[2017/3/1 16:39:7:55]: [smart ping] reset interval...</div><div class="line">[2017/3/1 16:39:7:66]: [smart ping] prevWifi:false isWifi:true prevWIFISSID: SSID&quot;huanxin-unifi&quot;</div><div class="line">[2017/3/1 16:39:7:67]: [smart ping] change smart ping state from : EMEvaluating to : EMEvaluating</div><div class="line">[2017/3/1 16:39:7:68]: [smart ping] reset currentInterval:02:00:000</div><div class="line">[2017/3/1 16:39:7:68]: [smart ping] schedule next alarm</div><div class="line">[2017/3/1 16:39:7:68]: [smart ping] current heartbeat interval : 02:00:000 smart ping state : EMEvaluating</div></pre></td></tr></table></figure></p>
<h3 id="链接监听与重连"><a href="#链接监听与重连" class="headerlink" title="链接监听与重连"></a>链接监听与重连</h3><p>连接监听主要是实现 EMConnectionListener 接口来监听设备和服务器的连接情况，其中牵扯到网络恢复后与服务器的重连，下边这部分日志是当检测到网络连接断开后，SDK和服务器的连接情况，下边的日志中当SDK 检测到链接不到服务器后会首先清空 socket 等一些链接相关信息，然后会回到链接监听的<code>onDisConnect()</code>方法，接着 SDK 会进行尝试重连 3 次，当尝试全部失败后就不在尝试，会安排一个定时器，定时器的时间是<code>2&#39;45&quot;</code>，到时间后会触发心跳重新进行尝试连接服务器，如果在这个心跳触发之前，网络状况有新的变化会直接重新尝试连接服务器；</p>
<p>关键词：<code>onDisconnect</code>,<code>disconnect</code>,<code>onNetworkChanged</code>,<code>EMHeartBeatReceiver</code>,<code>heartbeat</code>,<code>reconnect</code>,<code>doConnect</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 19:30:28:214]: log: level: 1, area: 2, cleanup() 34</div><div class="line">[2017/3/1 19:30:28:214]: log: level: 1, area: 2, closeSocket() 34</div><div class="line">[2017/3/1 19:30:28:214]: log: level: 2, area: 2, recv(): recv() failed. errno: 110: Connection timed out</div><div class="line">[2017/3/1 19:30:28:214]: log: level: 1, area: 2, cleanup() -1</div><div class="line">[2017/3/1 19:30:28:214]: log: level: 2, area: 1, handleDisconnect:1</div><div class="line">[2017/3/1 19:30:28:214]: EMSessionManager::onDisConnect(): 1</div><div class="line">[2017/3/1 19:30:28:214]: stopReceive()</div><div class="line">[2017/3/1 19:30:28:214]: log: level: 0, area: 1, ChatClient::disconnect()</div><div class="line">[2017/3/1 19:30:28:214]: log: level: 1, area: 2, cleanup() -1</div><div class="line">[2017/3/1 19:30:28:214]: log: level: 2, area: 1, handleDisconnect:14</div><div class="line">[2017/3/1 19:30:28:214]: network issue, just reconnect after random time</div><div class="line">[2017/3/1 19:30:28:215]: EMSessionManager::scheduleReconnect() updateServer: 0 updateToken: 0</div><div class="line">[2017/3/1 19:30:28:215]: EMSessionManager::delayReconnect()</div><div class="line">[2017/3/1 19:30:28:215]: getDelayedTime(): 7</div><div class="line">[2017/3/1 19:30:28:215]: notify state change to connection listener</div><div class="line">[2017/3/1 19:30:28:216]: [global listener] onDisconnect303</div><div class="line">[2017/3/1 19:30:28:216]: [smart ping]  onDisconnected ...303</div><div class="line">[2017/3/1 19:30:28:616]: [EMClient] connectivity receiver onReceiver</div><div class="line">[2017/3/1 19:30:28:629]: [EMClient] no data connection</div><div class="line">[2017/3/1 19:30:28:630]: onNetworkChanged(): 0</div><div class="line">[2017/3/1 19:30:28:630]: notify network broken</div><div class="line">[2017/3/1 19:30:28:630]: EMSessionManager::disconnect()</div><div class="line">[2017/3/1 19:30:28:632]: notify state change to connection listener</div><div class="line">[2017/3/1 19:30:28:632]: [global listener] onDisconnect2</div><div class="line">[2017/3/1 19:30:28:632]: [smart ping]  onDisconnected ...2</div><div class="line">[2017/3/1 19:30:31:440]: [EMClient] connectivity receiver onReceiver</div><div class="line">[2017/3/1 19:30:31:447]: [EMClient] no data connection</div><div class="line">[2017/3/1 19:30:31:447]: onNetworkChanged(): 0</div><div class="line">[2017/3/1 19:30:31:447]: notify network broken</div><div class="line">[2017/3/1 19:30:31:447]: EMSessionManager::disconnect()</div><div class="line">[2017/3/1 19:30:31:448]: notify state change to connection listener</div><div class="line">[2017/3/1 19:30:31:449]: [global listener] onDisconnect2</div><div class="line">[2017/3/1 19:30:31:449]: [smart ping]  onDisconnected ...2</div><div class="line">[2017/3/1 19:30:31:492]: [EMClient] connectivity receiver onReceiver</div><div class="line">[2017/3/1 19:30:31:511]: [EMClient] no data connection</div><div class="line">[2017/3/1 19:30:31:511]: onNetworkChanged(): 0</div><div class="line">[2017/3/1 19:30:31:511]: notify network broken</div><div class="line">[2017/3/1 19:30:31:512]: EMSessionManager::disconnect()</div><div class="line">[2017/3/1 19:30:31:512]: notify state change to connection listener</div><div class="line">[2017/3/1 19:30:31:512]: [global listener] onDisconnect2</div><div class="line">[2017/3/1 19:30:31:512]: [smart ping]  onDisconnected ...2</div><div class="line">[2017/3/1 19:33:4:560]: [EMHeartBeatReceiver] onReceive EMHeartBeatReceiver</div><div class="line">[2017/3/1 19:33:4:567]: [net] no data connection</div><div class="line">[2017/3/1 19:33:4:570]: [smart ping] schedule next alarm</div><div class="line">[2017/3/1 19:33:4:573]: [smart ping] current heartbeat interval : 02:45:000 smart ping state : EMEvaluating</div><div class="line">[2017/3/1 19:33:4:579]: [net] no data connection</div><div class="line">[2017/3/1 19:33:4:580]: [smart ping] is not connected to server, so use idle interval : 3 mins</div><div class="line">[2017/3/1 19:36:19:566]: [EMClient] connectivity receiver onReceiver</div><div class="line">[2017/3/1 19:36:19:577]: [net] wifi is connected</div><div class="line">[2017/3/1 19:36:19:577]: [EMClient] has wifi connection</div><div class="line">[2017/3/1 19:36:19:577]: onNetworkChanged(): 2</div><div class="line">[2017/3/1 19:36:19:577]: network comes back, retry to connect</div><div class="line">[2017/3/1 19:36:19:577]: EMSessionManager::reconnect()</div><div class="line">[2017/3/1 19:36:19:577]: doConnect()</div><div class="line">[2017/3/1 19:36:19:577]: current connectState: 0</div><div class="line">[2017/3/1 19:36:19:577]: log: level: 0, area: 1, ChatClient::connect() </div><div class="line">[2017/3/1 19:36:19:596]: log: level: 0, area: 2, getSocket(): 67</div><div class="line">[2017/3/1 19:36:19:596]: log: level: 1, area: 2, connectSocket(): start to connecting...</div><div class="line">[2017/3/1 19:36:19:602]: log: level: 1, area: 2, connectSocket(): connect finished</div></pre></td></tr></table></figure></p>
<h3 id="被踢-amp-强制下线-amp-移除账户"><a href="#被踢-amp-强制下线-amp-移除账户" class="headerlink" title="被踢&amp;强制下线&amp;移除账户"></a>被踢&amp;强制下线&amp;移除账户</h3><p>和账户相关的操作其实也都是以消息的形式和服务器进行交互的，其中一个特殊属性为<code>ns</code>，类型是<code>STATISTIC</code>，然后具体的操作通过 <code>operation</code>进行细分：1.表示移除/禁用/强制下线，2.表示异地登录<br>这几个状态都会触发网络链接监听的断开<code>onDisconnect()</code>回调；</p>
<p>PS：需要注意的一点就是，当收到这几个状态的回调后需要手动调用<code>logout</code>，清除当前登录状态，因此在遇到被踢和强制下线的日志中一般都能看到和 logout 相关日志</p>
<p>关键词：<code>STATISTIC</code>,<code>operation</code>,<code>logout</code>,<code>onDisconnected</code>,<code>206</code>,<code>heart beat</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">异地登录</div><div class="line">[2017/3/1 20:0:26:592]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; metas : [ &#123; id : 304104413746698288, from : @easemob.com, to : easemob-demo#chatdemoui_lz1@easemob.com/mobile, timestamp : 1488369626401, ns : STATISTIC, payload : &#123; operation : 2 &#125; &#125; ], queue : @easemob.com &#125; &#125;</div><div class="line">[2017/3/1 20:0:26:592]: log: level: 0, area: 1, ChatClient::disconnect()</div><div class="line">[2017/3/1 20:0:26:592]: log: level: 1, area: 2, cleanup() 35</div><div class="line">[2017/3/1 20:0:26:592]: log: level: 1, area: 2, closeSocket() 35</div><div class="line">[2017/3/1 20:0:26:592]: log: level: 2, area: 1, handleDisconnect:13</div><div class="line">[2017/3/1 20:0:26:592]: EMSessionManager::onDisConnect(): 13</div><div class="line">[2017/3/1 20:0:26:592]: stopReceive()</div><div class="line">[2017/3/1 20:0:26:592]: log: level: 0, area: 1, ChatClient::disconnect()</div><div class="line">[2017/3/1 20:0:26:592]: log: level: 1, area: 2, cleanup() -1</div><div class="line">[2017/3/1 20:0:26:592]: log: level: 2, area: 1, handleDisconnect:14</div><div class="line">[2017/3/1 20:0:26:593]: ConnUserLoginAnotherDevice</div><div class="line">[2017/3/1 20:0:26:593]: begin logout ..</div><div class="line">[2017/3/1 20:0:26:593]: EMSessionManager::disconnect()</div><div class="line">[2017/3/1 20:0:26:593]: clearDnsConfig()</div><div class="line">[2017/3/1 20:0:26:593]: logout complete</div><div class="line">[2017/3/1 20:0:26:593]: notify state change to connection listener</div><div class="line">[2017/3/1 20:0:26:618]: [smart ping]  onDisconnected ...206</div><div class="line">[2017/3/1 20:0:26:640]: [EMPushHelper] push notification helper ondestory</div><div class="line">[2017/3/1 20:0:26:641]: [EMClient]  SDK Logout</div><div class="line">[2017/3/1 20:0:26:643]: [smart ping] stop heart beat timer</div><div class="line">[2017/3/1 20:0:26:643]: [smart ping] change smart ping state from : EMEvaluating to : EMStopped</div><div class="line">[2017/3/1 20:0:26:644]: [smart ping] reset interval...</div><div class="line">[2017/3/1 20:0:26:645]: [smart ping] change smart ping state from : EMStopped to : EMEvaluating</div><div class="line">[2017/3/1 20:0:26:650]: logout, user not login</div><div class="line">[2017/3/1 20:0:26:650]: saveConfigs()</div><div class="line">[2017/3/1 20:0:26:651]: write to config file: &#123;</div><div class="line">    &quot;dns_time&quot;:&quot;-1&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">移除/禁用/强制下线</div><div class="line">[2017/3/2 14:14:55:351]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; metas : [ &#123; id : 304386456690886672, from : @easemob.com, to : easemob-demo#chatdemoui_lz1@easemob.com/mobile, timestamp : 1488435294646, ns : STATISTIC, payload : &#123; operation : 1 &#125; &#125; ], queue : @easemob.com &#125; &#125;</div></pre></td></tr></table></figure></p>
<h3 id="网络有问题的日志-TODO"><a href="#网络有问题的日志-TODO" class="headerlink" title="网络有问题的日志 TODO"></a>网络有问题的日志 TODO</h3><p>下边这段日志是在当前网络有问题的情况下进行登录请求，可以看到请求结果是<code>408</code>，正常情况重连服务器是不需要获取DNS 的，但是这个应该是 DNS 配置已经失效，这边一直在尝试重新获取 DNS；不过从后边的日志可以看出是网络连接有问题；</p>
<p>关键词：<code>disconnect</code>,<code>handleDisconnect</code>,<code>checkDNS</code>,<code>408</code>,<code>reconnect</code>,<code>unreachable</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 9:59:52:649]: log: level: 0, area: 1, ChatClient::disconnect()</div><div class="line">[2017/3/1 9:59:52:649]: log: level: 1, area: 2, cleanup() -4</div><div class="line">[2017/3/1 9:59:52:649]: log: level: 2, area: 1, handleDisconnect:14</div><div class="line">[2017/3/1 9:59:52:649]: dns error, reconnect using different IP</div><div class="line">[2017/3/1 9:59:52:649]: EMSessionManager::scheduleReconnect() updateServer: 1 updateToken: 0</div><div class="line">[2017/3/1 9:59:52:649]: EMDNSManager::getNextAvailableHost: type: 1</div><div class="line">[2017/3/1 9:59:52:649]: EMSessionManager::checkDNS()</div><div class="line">[2017/3/1 9:59:52:649]: tried all candidates, download again</div><div class="line">[2017/3/1 9:59:52:649]: getDnsListFromServer()</div><div class="line">[2017/3/1 9:59:52:649]: EMDNSManager::getHost: type: 0</div><div class="line">[2017/3/1 9:59:52:649]: current host: domain: 120.26.17.225 port: 80</div><div class="line">[2017/3/1 9:59:52:649]: buildUrl(): http://120.26.17.225/easemob/server.json?sdk_version=3.2.3&amp;app_key=shztzn%23smartfarm&amp;file_version=61</div><div class="line">[2017/3/1 9:59:52:651]: notify state change to connection listener</div><div class="line">[2017/3/1 9:59:52:664]: 1 time retry</div><div class="line">[2017/3/1 9:59:52:664]: getDnsListFromServer code: 408 response: </div><div class="line">[2017/3/1 9:59:52:664]: EMDNSManager::getHost: type: 0</div><div class="line">[2017/3/1 9:59:52:665]: current host: domain: 59.110.89.59 port: 80</div><div class="line">[2017/3/1 9:59:52:665]: buildUrl(): http://59.110.89.59/easemob/server.json?sdk_version=3.2.3&amp;app_key=shztzn%23smartfarm&amp;file_version=61</div><div class="line">[2017/3/1 9:59:52:673]: 2 time retry</div><div class="line">[2017/3/1 9:59:52:673]: getDnsListFromServer code: 408 response: </div><div class="line">[2017/3/1 9:59:52:674]: EMDNSManager::getHost: type: 0</div><div class="line">[2017/3/1 9:59:52:674]: current host: domain: 112.126.66.111 port: 80</div><div class="line">[2017/3/1 9:59:52:674]: buildUrl(): http://112.126.66.111/easemob/server.json?sdk_version=3.2.3&amp;app_key=shztzn%23smartfarm&amp;file_version=61</div><div class="line">[2017/3/1 9:59:52:674]: EMDNSManager::getNextAvailableHost: new index: 0</div><div class="line">[2017/3/1 9:59:52:675]: EMDNSManager::getHost: type: 1</div><div class="line">[2017/3/1 9:59:52:675]: current host: domain: 60.205.131.133 port: 6801</div><div class="line">[2017/3/1 9:59:52:675]: setServer: 60.205.131.133</div><div class="line">[2017/3/1 9:59:52:676]: EMSessionManager::delayReconnect()</div><div class="line">[2017/3/1 9:59:52:676]: getDelayedTime(): 17</div><div class="line">[2017/3/1 9:59:52:676]: Calling connect result: 0</div><div class="line">[2017/3/1 9:59:53:505]: asyncSendMessage: 14883335935043542 retry = 3</div><div class="line">[2017/3/1 9:59:53:505]: EMSessionManager::reconnect()</div><div class="line">[2017/3/1 9:59:53:506]: doConnect()</div><div class="line">[2017/3/1 9:59:53:506]: current connectState: 0</div><div class="line">[2017/3/1 9:59:53:506]: log: level: 0, area: 1, ChatClient::connect() </div><div class="line">[2017/3/1 9:59:53:506]: log: level: 0, area: 2, getSocket(): 41</div><div class="line">[2017/3/1 9:59:53:506]: log: level: 1, area: 2, connectSocket(): start to connecting...</div><div class="line">[2017/3/1 9:59:53:508]: log: level: 2, area: 2, connectSocket(): 60.205.131.133 error: Network is unreachable</div><div class="line">[2017/3/1 9:59:53:508]: log: level: 1, area: 2, closeSocket() 41</div><div class="line">[2017/3/1 9:59:53:508]: log: level: 1, area: 2, connectSocket(): connect finished</div><div class="line">[2017/3/1 9:59:53:508]: log: level: 2, area: 2, connect(): connection refused</div><div class="line">[2017/3/1 9:59:53:508]: log: level: 1, area: 2, cleanup() -4</div><div class="line">[2017/3/1 9:59:53:508]: log: level: 2, area: 1, handleDisconnect:4</div><div class="line">[2017/3/1 9:59:53:508]: EMSessionManager::onDisConnect(): 4</div><div class="line">[2017/3/1 9:59:53:508]: stopReceive()</div></pre></td></tr></table></figure></p>
<h3 id="推送相关"><a href="#推送相关" class="headerlink" title="推送相关"></a>推送相关</h3><p>和推送相关的日志都是和<code>EMPushHelper</code>或者<code>EMPushManager</code>相关的，可以从日志中看到推送功能是否激活，然后获取<code>devicetoken</code>发送到服务器等，<code>devicetoken</code>这个值一定要存在，否者推送无效；这些可以作为检测集成离线推送本地设置是否有效的一些手段；</p>
<p>关键词：<code>GCM</code>,<code>push</code>,<code>devicetoken</code>,<code>sendDeviceToServer</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 16:39:7:202]: isEnabledGCM: 1</div><div class="line">[2017/3/1 16:39:7:202]: [EMPushHelper] GCM is enabled : true</div><div class="line">[2017/3/1 16:39:7:207]: [EMPushHelper] GCM service available : false</div><div class="line">[2017/3/1 16:39:7:217]: [EMPushHelper] mipush available : true</div><div class="line">[2017/3/1 16:39:7:218]: [EMPushHelper] third-party push available</div><div class="line">[2017/3/1 16:39:7:221]: [EMPushManager] nick name is null or empty</div><div class="line">[2017/3/1 16:39:7:708]: [EMMipushReceiver] mi push reigster success</div><div class="line">[2017/3/1 16:39:7:708]: [EMPushHelper] devicetoken = /cRO2vRH64mWOH46+We1zxt4+onQRJOe26fvcX02iC0=</div><div class="line">[2017/3/1 16:39:7:715]: [HttpClientManager] try send request, request url: http://182.92.4.52:80/easemob-demo/chatdemoui/devices with number: 0</div><div class="line">[2017/3/1 16:39:7:792]: [EMPushHelper] sendDeviceToServer SC_OK:</div><div class="line"></div><div class="line">修改离线推送相关</div><div class="line">[2017/3/2 13:11:53:423]: SetGroupsOfNotificationDisabled 1</div><div class="line">[2017/3/2 13:11:53:564]: update user configs:   &#123;</div><div class="line">  &quot;action&quot; : &quot;put&quot;,</div><div class="line">  &quot;application&quot; : &quot;4d7e4ba0-dc4a-11e3-90d5-e1ffbaacdaf5&quot;,</div><div class="line">  &quot;path&quot; : &quot;/users&quot;,</div><div class="line">  &quot;uri&quot; : &quot;https://a1.easemob.com/easemob-demo/chatdemoui/users&quot;,</div><div class="line">  &quot;entities&quot; : [ &#123;</div><div class="line">    &quot;uuid&quot; : &quot;479d9cea-134d-11e6-8943-534ab75c4508&quot;,</div><div class="line">    &quot;type&quot; : &quot;user&quot;,</div><div class="line">    &quot;created&quot; : 1462513331630,</div><div class="line">    &quot;modified&quot; : 1488431513381,</div><div class="line">    &quot;username&quot; : &quot;lz1&quot;,</div><div class="line">    &quot;activated&quot; : true,</div><div class="line">    &quot;notification_display_style&quot; : 1,</div><div class="line">    &quot;device_token&quot; : &quot;/cRO2vRH64mWOH46+We1zxt4+onQRJOe26fvcX02iC0=&quot;,</div><div class="line">    &quot;nickname&quot; : &quot;立正1&quot;,</div><div class="line">    &quot;notification_ignore_1479267663683&quot; : true,</div><div class="line">    &quot;notification_ignore_1483610597352&quot; : true,</div><div class="line">    &quot;notification_ignore_1488431342804&quot; : false,</div><div class="line">    &quot;notifier_name&quot; : &quot;2882303761517426801&quot;</div><div class="line">  &#125; ],</div><div class="line">  &quot;timestamp&quot; : 1488431513377,</div><div class="line">  &quot;duration&quot; : 33,</div><div class="line">  &quot;organization&quot; : &quot;easemob-demo&quot;,</div><div class="line">  &quot;applicationName&quot; : &quot;chatdemoui&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="消息相关"><a href="#消息相关" class="headerlink" title="消息相关"></a>消息相关</h2><p>消息相关的日志还是比较明确的，</p>
<h3 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h3><p>发送新消息时会首先生成一个临时的 msgId，这个 msgId 是当前时间戳+四位拼成；当消息发送成功后，服务器会返回对应的服务器生成的 msgId 然后更新到本地，这算是一个消息的发送完成（可以根据这部分来判断消息是否发送成功）；<br>然后如果开启了已读回执，当对方读了消息之后，发送者会收到一条通知（NOYICE 的消息）告诉你有因消息，因为 ack 也是新消息，所以也是需要自己去服务器同步拉取（注意日志中的 REAF_ACK）；当做完这些之后，SDK 会重新发一条同步的消息，来看下是否还有新的消息</p>
<p>关键词：<code>asyncSendMessage</code>,<code>SEND</code>,<code>RECV</code>,<code>NOTICE</code>,<code>server_id</code>,<code>READ_ACK</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">[2017/3/1 21:7:0:649]: asyncSendMessage: 14883736206090002 retry = 3</div><div class="line">[2017/3/1 21:7:0:650]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 14883736206090002, to : lz2, ns : CHAT, payload : &#123; chattype : CHAT, from : lz1, to : lz2, contents : [ &#123; contenttype : TEXT, text : www问问 &#125; ] &#125; &#125; &#125; &#125;</div><div class="line"></div><div class="line">消息发送成功，返回服务器生成的 msgId</div><div class="line">[2017/3/1 21:7:0:743]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, meta_id : 14883736206090002, server_id : 304121568710101040, timestamp : 1488373620639 &#125; &#125;</div><div class="line"></div><div class="line">服务器告诉 SDK 有新消息了</div><div class="line">[2017/3/1 21:7:1:314]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : NOTICE, payload : &#123; queue : lz2/mobile &#125; &#125;</div><div class="line"></div><div class="line">发送请求来同步新消息</div><div class="line">[2017/3/1 21:7:1:314]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; queue : lz2/mobile &#125; &#125;</div><div class="line"></div><div class="line">收到已读的 ACK</div><div class="line">[2017/3/1 21:7:1:333]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304121571285403696, timestamp : 1488373621196, ns : CHAT, payload : &#123; chattype : READ_ACK, from : lz2, to : lz1, ack_message_id : 304121568710101040 &#125; &#125; ], next_key : 304121571285403696, queue : lz2, timestamp : 1488373621267 &#125; &#125;</div><div class="line"></div><div class="line">查询是否还有新消息</div><div class="line">[2017/3/1 21:7:1:333]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; key : 304121571285403696, queue : lz2 &#125; &#125;</div><div class="line">[2017/3/1 21:7:1:515]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, queue : lz2, is_last : true, timestamp : 1488373621351 &#125; &#125;</div><div class="line"></div><div class="line">...</div><div class="line">发送已读 ACK</div><div class="line">[2017/3/2 11:7:8:116]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 775, to : admin, ns : CHAT, payload : &#123; chattype : READ_ACK, from : lz1, to : admin, ack_message_id : 304337511725925492 &#125; &#125; &#125; &#125;</div></pre></td></tr></table></figure></p>
<h3 id="收到新消息"><a href="#收到新消息" class="headerlink" title="收到新消息"></a>收到新消息</h3><p>3.x收到新消息后服务器并不会直接下发消息，而是给SDK端下发一个通知（NOTICE 的消息），告诉你有新消息，就像下边日志的第一行，sdk 收到这条消息之后，会给服务器发送一个我要获取新消息的消息（有点绕），然后服务器才会把这条消息给下发，当接收完这次通知的消息后，SDK 还会给服务器在发送一条同步消息，用来询问服务器是否还有新的消息，当返回结果包含<code>is_last:true</code>时，表示已经没有新消息；<br>当消息接收完成之后就是SDK内部给上层发送通知了；最后就是当自己看了新消息之后，还要给对方发送一条ACK 的信息，然后还要收到一条服务器返回的一条状态信息才算完事；</p>
<p>关键词：<code>RECV</code>,<code>NOTICE</code>,<code>CHAT</code>,<code>compress_algorimth</code>,<code>callbackReceievedMessages</code>,<code>onMessageReceived</code>,<code>COMMAND</code>,<code>action</code>,<code>READ_ACK</code>,<code>is_last</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">服务器告诉 SDK 有新消息了</div><div class="line">[2017/3/1 20:58:54:6]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : NOTICE, payload : &#123; queue : lz2/mobile &#125; &#125;</div><div class="line"></div><div class="line">发送请求来同步新消息</div><div class="line">[2017/3/1 20:58:54:6]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; queue : lz2/mobile &#125; &#125;</div><div class="line"></div><div class="line">[2017/3/1 20:58:54:32]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304119478168324144, timestamp : 1488373133870, ns : CHAT, payload : &#123; chattype : CHAT, from : lz2, to : lz1, contents : [ &#123; contenttype : TEXT, text : qqqqqqqqqqqq &#125; ] &#125; &#125; ], next_key : 304119478168324144, queue : lz2, timestamp : 1488373133959 &#125; &#125;</div><div class="line"></div><div class="line">查询是否还有新消息</div><div class="line">[2017/3/1 20:58:54:32]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; key : 304119478168324144, queue : lz2 &#125; &#125;</div><div class="line">[2017/3/1 20:58:54:106]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, queue : lz2, is_last : true, timestamp : 1488373134006 &#125; &#125;</div><div class="line"></div><div class="line">发送 ACK 给对方</div><div class="line">[2017/3/1 21:5:55:298]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 259, to : lz2, ns : CHAT, payload : &#123; chattype : READ_ACK, from : lz1, to : lz2, ack_message_id : 304119478168324144 &#125; &#125; &#125; &#125;</div><div class="line">[2017/3/1 21:5:55:364]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, meta_id : 259, server_id : 304121288056637488, timestamp : 1488373555277 &#125; &#125;</div><div class="line"></div><div class="line">收到 cmd 消息</div><div class="line">[2017/3/2 11:6:13:653]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304337832351106168, timestamp : 1488423973404, ns : CHAT, payload : &#123; chattype : CHAT, from : admin, to : lz1, contents : [ &#123; contenttype : COMMAND, action : action1 &#125; ] &#125; &#125; ], next_key : 304337832351106168, queue : admin, timestamp : 1488423973440 &#125; &#125;</div><div class="line"></div><div class="line">收到离线消息，这个直接是一个 json 数组</div><div class="line">[2017/3/2 12:46:37:98]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304343301819992124, timestamp : 1488425246875, ns : CHAT, payload : &#123; chattype : CHATROOM, from : qazqaz123321, to : 3759501541378, contents : [ &#123; contenttype : VOICE, displayname : qazqaz12332120170302T112724.amr, remotepath : https://a1.easemob.com/easemob-demo/chatdemoui/chatfiles/289e8240-fef8-11e6-b120-0b193a44693b, secretkey : KJ6CSv74EeacsQ3KDqwnqF9amIMbc6fNBK-qXRVNwd4MkZR7, filelength : 2134, duration : 2 &#125; ] &#125; &#125;, &#123; id : 304343752070137864, timestamp : 1488425351703, ns : CHAT, payload : &#123; chattype : CHATROOM, from : lingo, to : 3759501541378, contents : [ &#123; contenttype : VOICE, displayname : lingo20170302T112907.amr, remotepath : https://a1.easemob.com/easemob-demo/chatdemoui/chatfiles/671458b0-fef8-11e6-bf54-a356d485d240, secretkey : ZxRYuv74EeankPOIMACFAftORz04rIiMWfHPQUKLvcXi_Jgo, filelength : 2566, duration : 3 &#125; ] &#125; &#125;, &#123; id : 304345086324377616, timestamp : 1488425662350, ns : CHAT, payload : &#123; chattype : CHATROOM, from : 15515625700, to : 3759501541378, contents : [ &#123; contenttype : TEXT, text : [):] &#125; ], exts : [ &#123; key : userIcon, type : 7, value : https://116.255.227.78:1008/FileUpload/UserImage/7521a766-64db-4a18-8772-d22c5e065d0b.jpg &#125;, &#123; key : userName, type : 7, value : hl_4a8fe2f &#125; ] &#125; &#125;, &#123; id : 304347342838958040, timestamp : 1488426187748, ns : CHAT, payload : &#123; chattype : CHATROOM, from : kimpeng, to : 3759501541378, contents : [ &#123; contenttype : TEXT, text : [+o(] &#125; ] &#125; &#125;, &#123; id : 304347456840140856, timestamp : 1488426214277, ns : CHAT, payload : &#123; chattype : CHATROOM, from : 15172330957, to : 3759501541378, contents : [ &#123; contenttype : TEXT, text : 基本 &#125; ] &#125; &#125;, &#123; id : 304348603307001816, timestamp : 1488426481208, ns : CHAT, payload : &#123; chattype : CHATROOM, from : kimpeng, to : 3759501541378, contents : [ &#123; contenttype : TEXT, text : [:(] &#125; ] &#125; &#125;, &#123; id : 304349346936129496, timestamp : 1488426654367, ns : CHAT, payload : &#123; chattype : CHATROOM, from : kimpeng, to : 3759501541378, contents : [ &#123; contenttype : TEXT, text : [:(][(a)] &#125; ] &#125; &#125;, &#123; id : 304349681360570328, timestamp : 1488426732212, ns : CHAT, payload : &#123; chattype : CHATROOM, from : kimpeng, to : 3759501541378, contents : [ &#123; contenttype : TEXT, text : A &#125; ] &#125; &#125;, &#123; id : 304350070763947992, timestamp : 1488426822893, ns : CHAT, payload : &#123; chattype : CHATROOM, from : kimpeng, to : 3759501541378, contents : [ &#123; contenttype : TEXT, text : A &#125; ] &#125; &#125;, &#123; id : 304350107678017496, timestamp : 1488426831478, ns : CHAT, payload : &#123; chattype : CHATROOM, from : kimpeng, to : 3759501541378, contents : [ &#123; contenttype : TEXT, text : A &#125; ] &#125; &#125;, &#123; id : 304363701610219560, timestamp : 1488429996565, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_3759501541378@conference.easemob.com, operation : JOIN, from : easemob-demo#chatdemoui_lz1@easemob.com, status : &#123; error_code : 0, description :  &#125; &#125; &#125; ], next_key : 304363701610219560, queue : 3759501541378@conference.easemob.com, timestamp : 1488429996918 &#125; &#125;</div><div class="line">``` </div><div class="line"></div><div class="line">业务逻辑相关</div><div class="line">---------</div><div class="line">在3.x 中一切的操作都是用消息的形式来做的，通过发送代表特定操作的消息给服务器，然后服务器会返回这个消息发送成功，接着服务器会以新消息的形式告诉 SDK 操作成功，最后都和收发消息的日志逻辑一样；</div><div class="line">需要注意的就是这些操作中的关键词；</div><div class="line">首先说一点就是，这些操作都有一个特殊的属性 `ns`这个属性的指表示不同的操作:`MUC`表示群组和聊天室相关操作；`ROSTER`表示联系人相关操作</div><div class="line"></div><div class="line">下边先用创建新群组来详细解释下：</div><div class="line"></div><div class="line">### 创建新群组</div><div class="line">从创建群组可以看出，创建的操作就是给服务器发送一个创建的操作，接着服务器返回这条消息发送成功，然后就像收到消息一样，服务器告诉创建者，你有新消息需要拉取，拉取到后可以发现，这条消息就是告诉自己群组创建成功，然后后边就是检查是否有新消息;</div><div class="line"></div><div class="line">关键词：`MUC`,`SEND`,`CREATE`,`RECV`,</div><div class="line">```log</div><div class="line">[2017/3/2 12:7:35:249]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 2567, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488427655248, operation : CREATE, from : lz1, setting : &#123; name : ttttt, desc : tttttt, muc_type : 2, max_users : 200, owner : lz1 &#125;, reason : lz1邀请加入群：ttttt &#125; &#125; &#125; &#125;</div><div class="line"></div><div class="line">[2017/3/2 12:7:35:316]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, meta_id : 2567, server_id : 304353645141428264, timestamp : 1488427655125 &#125; &#125;</div><div class="line"></div><div class="line">[2017/3/2 12:7:35:317]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : NOTICE, payload : &#123; queue : 1488427655248@conference.easemob.com &#125; &#125;</div><div class="line"></div><div class="line">[2017/3/2 12:7:35:317]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; queue : 1488427655248@conference.easemob.com &#125; &#125;</div><div class="line"></div><div class="line">[2017/3/2 12:7:35:372]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304353645279840296, timestamp : 1488427655132, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488427655248@conference.easemob.com, operation : CREATE, from : easemob-demo#chatdemoui_lz1@easemob.com, status : &#123; error_code : 0, description :  &#125; &#125; &#125; ], next_key : 304353645279840296, queue : 1488427655248@conference.easemob.com, timestamp : 1488427655190 &#125; &#125;</div><div class="line"></div><div class="line">[2017/3/2 12:7:35:373]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; key : 304353645279840296, queue : 1488427655248@conference.easemob.com &#125; &#125;</div><div class="line"></div><div class="line">[2017/3/2 12:7:35:453]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, queue : 1488427655248@conference.easemob.com, is_last : true, timestamp : 1488427655254 &#125; &#125;</div></pre></td></tr></table></figure></p>
<h3 id="群组其他操作"><a href="#群组其他操作" class="headerlink" title="群组其他操作"></a>群组其他操作</h3><p>关键词：<code>MUC</code>,<code>operation</code>,<code>SEND</code>,<code>APPLY</code>,<code>INVITE</code>,<code>INVITE_ACCEPT</code>,<code>INVITE_DECLINE</code>,<code>APPLY_ACCEPT</code>,<code>APPLY_DECLINE``PRESENCE</code>,<code>LEAVE</code>,<code>DESTROY</code>,<code>KICK</code>,<code>ABSENCE</code>,<code>RECV</code>,<code>BLOCK</code>,<code>UNBLOCK</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">发送加入请求：</div><div class="line">[2017/3/2 12:26:38:737]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 3591, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488428778313, operation : APPLY, from : lz1, tos : [ lz2 ], reason : 请求加入 &#125; &#125; &#125; &#125;</div><div class="line"></div><div class="line">收到加入请求：</div><div class="line">[2017/3/2 12:16:48:410]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304356020619053112, timestamp : 1488428208185, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488427655248@conference.easemob.com, operation : APPLY, from : easemob-demo#chatdemoui_lz2@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], reason : 请求加入, is_chatroom : false, status : &#123; error_code : 0, description :  &#125; &#125; &#125; ], next_key : 304356020619053112, queue : lz2, timestamp : 1488428208229 &#125; &#125;</div><div class="line"></div><div class="line">邀请加入群组</div><div class="line">[2017/3/2 11:39:39:774]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 2055, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1483610597352, operation : INVITE, from : lz1, tos : [ lz2 ], reason : welcome &#125; &#125; &#125; &#125;</div><div class="line">[2017/3/2 11:39:41:64]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304346454208546772, timestamp : 1488425980847, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1483610597352@conference.easemob.com, operation : INVITE_ACCEPT, from : easemob-demo#chatdemoui_lz2@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], is_chatroom : false, status : &#123; description :  &#125; &#125; &#125; ], next_key : 304346454208546772, queue : 1483610597352@conference.easemob.com, timestamp : 1488425980883 &#125; &#125;</div><div class="line">[2017/3/2 11:39:41:138]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304346454330181588, timestamp : 1488425980876, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1483610597352@conference.easemob.com, operation : PRESENCE, from : easemob-demo#chatdemoui_lz2@easemob.com, is_chatroom : false &#125; &#125; ], next_key : 304346454330181588, queue : 1483610597352@conference.easemob.com, timestamp : 1488425980928 &#125; &#125;</div><div class="line"></div><div class="line">同意对方邀请</div><div class="line">[2017/3/2 12:20:41:289]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 2823, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488427655248, operation : APPLY_ACCEPT, from : lz1, tos : [ lz2 ] &#125; &#125; &#125; &#125;</div><div class="line">[2017/3/2 12:20:42:696]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304357026689980384, timestamp : 1488428442436, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488427655248@conference.easemob.com, operation : PRESENCE, from : easemob-demo#chatdemoui_lz2@easemob.com, is_chatroom : false &#125; &#125; ], next_key : 304357026689980384, queue : 1488427655248@conference.easemob.com, timestamp : 1488428442505 &#125; &#125;</div><div class="line"></div><div class="line">拒绝对方邀请</div><div class="line">[2017/3/2 12:21:34:594]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 3335, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488427655248, operation : APPLY_DECLINE, from : lz1, tos : [ lz2 ] &#125; &#125; &#125; &#125;</div><div class="line"></div><div class="line">离开群组</div><div class="line">[2017/3/2 11:7:24:803]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 1031, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1482203912329, operation : LEAVE, from : lz1 &#125; &#125; &#125; &#125;</div><div class="line">[2017/3/2 11:7:25:183]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304338138476578856, timestamp : 1488424044686, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1482203912329@conference.easemob.com, operation : LEAVE, from : easemob-demo#chatdemoui_lz1@easemob.com, status : &#123; error_code : 0, description :  &#125; &#125; &#125; ], next_key : 304338138476578856, queue : 1482203912329@conference.easemob.com, timestamp : 1488424044990 &#125; &#125;</div><div class="line"></div><div class="line">群组踢人</div><div class="line">[2017/3/2 11:30:40:684]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 1799, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1483610597352, operation : KICK, from : lz1, tos : [ lz2 ] &#125; &#125; &#125; &#125;</div><div class="line">[2017/3/2 11:30:41:122]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304344134942984200, timestamp : 1488425440851, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1483610597352@conference.easemob.com, operation : ABSENCE, from : easemob-demo#chatdemoui_lz2@easemob.com, is_chatroom : false &#125; &#125; ], next_key : 304344134942984200, queue : 1483610597352@conference.easemob.com, timestamp : 1488425440955 &#125; &#125;</div><div class="line"></div><div class="line">服务器删除群组</div><div class="line">[2017/3/2 13:0:44:727]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304367343482439644, timestamp : 1488430844502, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488427655248@conference.easemob.com, operation : DESTROY, from : easemob-demo#chatdemoui_系统管理员@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], is_chatroom : false, status : &#123; error_code : 0, description :  &#125; &#125; &#125; ], next_key : 304367343482439644, queue : 1488427655248@conference.easemob.com, timestamp : 1488430844552 &#125; &#125;</div><div class="line"></div><div class="line">屏蔽群消息</div><div class="line">[2017/3/2 13:10:23:189]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 5895, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488431342804, operation : BLOCK, from : lz1 &#125; &#125; &#125; &#125;</div><div class="line">[2017/3/2 13:10:23:278]: log: level: 1, area: 1, ChatClient::handleSync begin</div><div class="line">[2017/3/2 13:10:23:278]: log: level: 1, area: 1, ChatClient::handleSync complete: response</div><div class="line">[2017/3/2 13:10:23:310]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304369828473346088, timestamp : 1488431423075, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488431342804@conference.easemob.com, operation : BLOCK, from : easemob-demo#chatdemoui_lz1@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], status : &#123; error_code : 0, description :  &#125; &#125; &#125; ], next_key : 304369828473346088, queue : 1488431342804@conference.easemob.com, timestamp : 1488431423128 &#125; &#125;</div><div class="line"></div><div class="line">解除屏蔽群消息</div><div class="line">[2017/3/2 15:3:29:333]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 521, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488431342804, operation : UNBLOCK, from : lz1 &#125; &#125; &#125; &#125;</div><div class="line">[2017/3/2 15:3:32:900]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304398975526508532, timestamp : 1488438209409, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_1488431342804@conference.easemob.com, operation : UNBLOCK, from : easemob-demo#chatdemoui_lz1@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], status : &#123; error_code : 0, description :  &#125; &#125; &#125; ], next_key : 304398975526508532, queue : 1488431342804@conference.easemob.com, timestamp : 1488438210535 &#125; &#125;</div></pre></td></tr></table></figure></p>
<h3 id="聊天室"><a href="#聊天室" class="headerlink" title="聊天室"></a>聊天室</h3><p>单单从日志看，这些操作其实和群组的都一样</p>
<p>关键词：<code>MUC</code>,<code>JOIN</code>,<code>PRESENCE</code>,<code>ABSENCE</code>,<code>KICK</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">自己加入聊天室</div><div class="line">[2017/3/2 12:46:36:668]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 5383, to : @easemob.com, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_3759501541378@conference.easemob.com, operation : JOIN, from : lz1 &#125; &#125; &#125; &#125;</div><div class="line"></div><div class="line">收到别人加入聊天室的回调</div><div class="line">[2017/3/2 12:53:40:186]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304365519564179492, timestamp : 1488430419846, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_3759501541378@conference.easemob.com, operation : PRESENCE, from : easemob-demo#chatdemoui_lz2@easemob.com, is_chatroom : true &#125; &#125; ], next_key : 304365519564179492, queue : 3759501541378@conference.easemob.com, timestamp : 1488430420020 &#125; &#125;</div><div class="line"></div><div class="line">其他人离开聊天室回调</div><div class="line">[2017/3/2 12:56:56:655]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304366363252623336, timestamp : 1488430616269, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_3759501541378@conference.easemob.com, operation : ABSENCE, from : easemob-demo#chatdemoui_lz2@easemob.com, is_chatroom : true &#125; &#125; ], next_key : 304366363252623336, queue : 3759501541378@conference.easemob.com, timestamp : 1488430616481 &#125; &#125;</div><div class="line"></div><div class="line">自己被后台踢出聊天室</div><div class="line">[2017/3/2 12:58:30:329]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304366766241351692, timestamp : 1488430710093, ns : MUC, payload : &#123; muc_id : easemob-demo#chatdemoui_3759501541378@conference.easemob.com, operation : KICK, from : easemob-demo#chatdemoui_系统管理员@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], is_chatroom : true, status : &#123; error_code : 0, description :  &#125; &#125; &#125; ], next_key : 304366766241351692, queue : 3759501541378@conference.easemob.com, timestamp : 1488430710153 &#125; &#125;</div></pre></td></tr></table></figure></p>
<h3 id="联系人"><a href="#联系人" class="headerlink" title="联系人"></a>联系人</h3><p>关键词：<code>ROSTER</code>,<code>ADD</code>,<code>REMOVE</code>,<code>ACCEPT</code>,<code>REMOTE_ACCEPT</code>,<code>DECLINE</code>,<code>REMOTE_DECLINE</code>,<code>BAN</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">收到添加请求</div><div class="line">[2017/3/2 12:31:51:693]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304359900245395412, timestamp : 1488429111488, ns : ROSTER, payload : &#123; operation : ADD, from : easemob-demo#chatdemoui_lz2@easemob.com/mobile, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], reason : 加个好友呗 &#125; &#125; ], next_key : 304359900245395412, queue : @easemob.com, timestamp : 1488429111530 &#125; &#125;</div><div class="line"></div><div class="line">删除：</div><div class="line">[2017/3/2 12:31:34:502]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 3847, to : @easemob.com, ns : ROSTER, payload : &#123; operation : REMOVE, tos : [ easemob-demo#chatdemoui_lz2 ], reason : , bi_direction : 0 &#125; &#125; &#125; &#125;</div><div class="line">[2017/3/2 12:31:34:628]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304359826958321704, timestamp : 1488429094423, ns : ROSTER, payload : &#123; operation : REMOVE, from : easemob-demo#chatdemoui_lz2@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com/mobile ], roster_ver : DB5BEDE0B3C0828FF9C2B7E2C119D30AC8AA66E4 &#125; &#125; ], next_key : 304359826958321704, queue : @easemob.com, timestamp : 1488429094467 &#125; &#125;</div><div class="line"></div><div class="line">同意：</div><div class="line">[2017/3/2 12:40:33:251]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304362140305721384, timestamp : 1488429633032, ns : ROSTER, payload : &#123; operation : ACCEPT, from : easemob-demo#chatdemoui_lz2@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com/mobile ], roster_ver : 31A3278F5D16C2726689A176C39D81FF9961647A &#125; &#125; ], next_key : 304362140305721384, queue : @easemob.com, timestamp : 1488429633077 &#125; &#125;</div><div class="line"></div><div class="line">被同意：</div><div class="line">[2017/3/2 12:42:59:308]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304362767614216148, timestamp : 1488429779090, ns : ROSTER, payload : &#123; operation : REMOTE_ACCEPT, from : easemob-demo#chatdemoui_lz2@easemob.com/mobile, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], roster_ver : 13B1298E1FAF70683EB467693584B2FD74CBDC6D &#125; &#125; ], next_key : 304362767614216148, queue : @easemob.com, timestamp : 1488429779133 &#125; &#125;</div><div class="line"></div><div class="line">拒绝：</div><div class="line">[2017/3/2 12:39:52:931]: log: level: 1, area: 1, SEND:</div><div class="line">&#123; verison : MSYNC_V1, compress_algorimth : 0, command : SYNC, payload : &#123; meta : &#123; id : 4103, to : @easemob.com, ns : ROSTER, payload : &#123; operation : DECLINE, tos : [ easemob-demo#chatdemoui_lz2 ], reason : , bi_direction : 0 &#125; &#125; &#125; &#125;</div><div class="line"></div><div class="line">被拒绝：</div><div class="line">[2017/3/2 12:42:59:308]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304362767614216148, timestamp : 1488429779090, ns : ROSTER, payload : &#123; operation : REMOTE_DECLINE, from : easemob-demo#chatdemoui_lz2@easemob.com/mobile, tos : [ easemob-demo#chatdemoui_lz1@easemob.com ], roster_ver : 13B1298E1FAF70683EB467693584B2FD74CBDC6D &#125; &#125; ], next_key : 304362767614216148, queue : @easemob.com, timestamp : 1488429779133 &#125; &#125;</div><div class="line"></div><div class="line">加入黑名单</div><div class="line">[2017/3/2 12:43:18:539]: log: level: 1, area: 1, RECV:</div><div class="line">&#123; verison : MSYNC_V1, command : SYNC, payload : &#123; status : &#123; error_code : 0 &#125;, metas : [ &#123; id : 304362850200061992, timestamp : 1488429798324, ns : ROSTER, payload : &#123; operation : BAN, status : &#123; error_code : 0 &#125;, from : easemob-demo#chatdemoui_lz2@easemob.com, tos : [ easemob-demo#chatdemoui_lz1@easemob.com/mobile ] &#125; &#125; ], next_key : 304362850200061992, queue : @easemob.com, timestamp : 1488429798362 &#125; &#125;</div></pre></td></tr></table></figure></p>
<h2 id="通话相关"><a href="#通话相关" class="headerlink" title="通话相关"></a>通话相关</h2><p>由于通话功能大部分都是由底层实现，这边暂时无法看懂，也就先不写了😁😝</p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>没有什么能一眼看出错误的方法，只要记住正常的日志是什么样的，以后只要遇到错误的日志就知道这不正常了，所有能通过日志看出来问题的问题，都不是说一下根据哪一点日志就能知道的，一般都是需要联系下上下文的日志，然后结合场景才好分析</p>
<p>没什么投机取巧的方式，其实都是熟能生巧，然后大家互相交流，分享自己所知道的</p>
<p>最后希望这一篇分析能对大家有所帮助，</p>
<p>错误码参考：<a href="http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1_e_m_error.html" target="_blank" rel="external">环信官方 API 文档 Error</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;我的简书：【&lt;a href=&quot;http://www.jianshu.com/u/f53bcbbc7c3e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lzan13&lt;/a&gt; / &lt;a href=&quot;http://www.jiansh
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="Easemob" scheme="http://melove.net/tags/Easemob/"/>
    
      <category term="SDK" scheme="http://melove.net/tags/SDK/"/>
    
      <category term="IM" scheme="http://melove.net/tags/IM/"/>
    
      <category term="Log" scheme="http://melove.net/tags/Log/"/>
    
      <category term="Hyphenate" scheme="http://melove.net/tags/Hyphenate/"/>
    
  </entry>
  
  <entry>
    <title>Android 守护进程的实现方式</title>
    <link href="http://melove.net/2017/03/android-daemon-service-1488942411000.html"/>
    <id>http://melove.net/2017/03/android-daemon-service-1488942411000.html</id>
    <published>2017-03-08T03:06:51.000Z</published>
    <updated>2017-03-10T03:53:43.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>项目源码：【<a href="https://github.com/lzan13" target="_blank" rel="external">lzan13</a> / <a href="https://github.com/lzan13/VMDaemonServices" target="_blank" rel="external">VMDaemonService</a>】<br>我的简书：【<a href="http://jianshu.com/u/f53bcbbc7c3e" target="_blank" rel="external">lzan13</a> / <a href="http://www.jianshu.com/p/b16631a2fe3c" target="_blank" rel="external">Android 守护进程的实现方式</a>】</p>
</blockquote>
<p>在我们进行应用开发时，会遇到上级的各种需求，其中有一条 刚需：<code>后台保活</code>，更有甚者：</p>
<blockquote class="blockquote-center">我要我们的应用永远活在用户的手机后台不被杀死<br>—— 这都 TM 的扯淡</blockquote>

<p>除了系统级别的应用能持续运行，所有三方程序都有被杀死的那一天！当然<code>QQ/微信/陌陌</code>等会好一些，因为他们已经深入设备的<code>心</code>；<br>我们能做的只是通过各种手段尽量让我们的程序在后台运行的时间长一些，或者在被干掉的时候，能够重新站起来，而且这个也不是每次都有效的，也是不能在所有的设备的上都有效的；要做到后台进程保活，我们需要做到两方便：</p>
<ol>
<li>提高进程优先级，降低被回收或杀死概率</li>
<li>在进程被干掉后，进行拉起</li>
</ol>
<p>要实现实现上边所说，通过下边几点来实现，首先我们需要了解下进程的优先级划分：</p>
<h3 id="进程的优先级"><a href="#进程的优先级" class="headerlink" title="#进程的优先级"></a>#进程的优先级</h3><p><code>Process Importance</code>记录在<code>ActivityManager.java</code>类中:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Path：SDK/sources/android-25/android/app/ActivityManager#RunningAppProcessInfo.java</div><div class="line"> * </div><div class="line"> * 这个进程正在运行前台UI，也就是说，它是当前在屏幕顶部的东西，用户正在进行交互的而进程</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_FOREGROUND = <span class="number">100</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 此进程正在运行前台服务，即使用户不是在应用中时也执行音乐播放，这一般表示该进程正在做用户积极关心的事情</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_FOREGROUND_SERVICE = <span class="number">125</span>;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * 这个过程不是用户的直接意识到，但在某种程度上是他们可以察觉的。</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_PERCEPTIBLE = <span class="number">130</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 此进程正在运行前台UI，但设备处于睡眠状态，因此用户不可见，意思是用户意识不到的进程，因为他们看不到或与它交互，</div><div class="line"> * 但它是相当重要，因为用户解锁设备时期望的返回到这个进程</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_TOP_SLEEPING = <span class="number">150</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 进程在后台，但我们不能恢复它的状态，所以我们想尽量避免杀死它，不然这个而进程就丢了</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_CANT_SAVE_STATE = <span class="number">170</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 此进程正在运行某些对用户主动可见的内容，但不是直接显示在UI，</div><div class="line"> * 这可能运行在当前前台之后的窗口（因此暂停并且其状态被保存，不与用户交互，但在某种程度上对他们可见）;</div><div class="line"> * 也可能在系统的控制下运行其他服务，</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_VISIBLE = <span class="number">200</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 服务进程，此进程包含在后台保持运行的服务，这些后台服务用户察觉不到，是无感知的，所以它们可以由系统相对自由地杀死</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_SERVICE = <span class="number">300</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 后台进程</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_BACKGROUND = <span class="number">400</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 空进程，此进程没有任何正在运行的代码</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_EMPTY = <span class="number">500</span>;</div><div class="line"></div><div class="line"><span class="comment">// 此过程不存在。</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> IMPORTANCE_GONE = <span class="number">1000</span>;</div></pre></td></tr></table></figure></p>
<h3 id="进程回收机制"><a href="#进程回收机制" class="headerlink" title="#进程回收机制"></a>#进程回收机制</h3><p>了解进程优先级之后，我们还需要知道一个进程回收机制的东西；这里参考<code>AngelDevil</code>在博客园上的一篇文章:</p>
<blockquote>
<p>详情参考：【<a href="http://www.cnblogs.com/angeldevil/archive/2013/05/21/3090872.html" target="_blank" rel="external">Android Low Memory Killer</a>】</p>
</blockquote>
<p><code>Android</code>的<code>Low Memory Killer</code>基于<code>Linux</code>的<code>OOM</code>机制，在<code>Linux</code>中，内存是以页面为单位分配的，当申请页面分配时如果内存不足会通过以下流程选择bad进程来杀掉从而释放内存：</p>
<blockquote>
<p>alloc_pages -&gt; out_of_memory() -&gt; select_bad_process() -&gt; badness()</p>
</blockquote>
<p>在<code>Low Memory Killer</code>中通过进程的<code>oom_adj</code>与占用内存的大小决定要杀死的进程，<code>oom_adj</code>越小越不容易被杀死；<br><code>Low Memory Killer Driver</code>在用户空间指定了一组内存临界值及与之一一对应的一组<code>oom_adj</code>值，当系统剩余内存位于内存临界值中的一个范围内时，如果一个进程的<code>oom_adj</code>值大于或等于这个临界值对应的<code>oom_adj</code>值就会被杀掉。</p>
<p>下边是表示<code>Process State</code>(即老版本里的<code>OOM_ADJ</code>)数值对照表，数值越大，重要性越低，在新版SDK中已经在<code>android</code>层去除了小于0的进程状态<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Path：SDK/sources/android-25/android/app/ActivityManager#RunningAppProcessInfo.java </span></div><div class="line"><span class="comment">// 进程不存在。 </span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_NONEXISTENT = -<span class="number">1</span>;</div><div class="line"><span class="comment">// 进程是一个持久的系统进程，一般指当前 UI 进程</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_PERSISTENT = <span class="number">0</span>;</div><div class="line"><span class="comment">// 进程是一个持久的系统进程，正在做和 UI 相关的操作，但不直接显示</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_PERSISTENT_UI = <span class="number">1</span>;</div><div class="line"><span class="comment">// 进程正在托管当前的顶级活动。请注意，这涵盖了用户可见的所有活动。 </span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_TOP = <span class="number">2</span>;</div><div class="line"><span class="comment">// 进程由于系统绑定而托管前台服务。</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_BOUND_FOREGROUND_SERVICE = <span class="number">3</span>;</div><div class="line"><span class="comment">// 进程正在托管前台服务。</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_FOREGROUND_SERVICE = <span class="number">4</span>;</div><div class="line"><span class="comment">// 与&#123;@link #PROCESS_STATE_TOP&#125;相同，但设备处于睡眠状态。 </span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_TOP_SLEEPING = <span class="number">5</span>;</div><div class="line"><span class="comment">// 进程对用户很重要，是他们知道的东西</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_IMPORTANT_FOREGROUND = <span class="number">6</span>;</div><div class="line"><span class="comment">// 进程对用户很重要，但不是他们知道的</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_IMPORTANT_BACKGROUND = <span class="number">7</span>;</div><div class="line"><span class="comment">// 进程在后台运行备份/恢复操作</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_BACKUP = <span class="number">8</span>;</div><div class="line"><span class="comment">// 进程在后台，但我们不能恢复它的状态，所以我们想尽量避免杀死它，不然这个而进程就丢了</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_HEAVY_WEIGHT = <span class="number">9</span>;</div><div class="line"><span class="comment">// 进程在后台运行一个服务，与oom_adj不同，此级别用于正常运行在后台状态和执行操作状态。 </span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_SERVICE = <span class="number">10</span>;</div><div class="line"><span class="comment">// 进程在后台运行一个接收器，注意，从oom_adj接收器的角度来看，在较高的前台级运行，但是对于我们的优先级，这不是必需的，并且将它们置于服务之下意味着当它们接收广播时，一些进程状态中的更少的改变。 </span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_RECEIVER = <span class="number">11</span>;</div><div class="line"><span class="comment">// 进程在后台，但主持家庭活动</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_HOME = <span class="number">12</span>;</div><div class="line"><span class="comment">// 进程在后台，但托管最后显示的活动</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_LAST_ACTIVITY = <span class="number">13</span>;</div><div class="line"><span class="comment">// 进程正在缓存以供以后使用，并包含活动</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_CACHED_ACTIVITY = <span class="number">14</span>;</div><div class="line"><span class="comment">// 进程正在缓存供以后使用，并且是包含活动的另一个缓存进程的客户端</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_CACHED_ACTIVITY_CLIENT = <span class="number">15</span>;</div><div class="line"><span class="comment">// 进程正在缓存以供以后使用，并且为空</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROCESS_STATE_CACHED_EMPTY = <span class="number">16</span>;</div></pre></td></tr></table></figure></p>
<p><code>Process State</code>（即老版本的<code>OOM_ADJ</code>）与<code>Process Importance</code>对应关系，这个方法也是在<code>ActivityManager.java</code>类中，有了这个关系，就知道可以知道我们的应用处于哪个级别，对于我们后边优化有个很好地参考<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** </span></div><div class="line"> * Path：SDK/sources/android-25/android/app/ActivityManager#RunningAppProcessInfo.java</div><div class="line"> *</div><div class="line"> * 通过这个方法，将Linux底层的 OOM_ADJ级别码和 android 层面的进程重要程度联系了起来</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">procStateToImportance</span><span class="params">(<span class="keyword">int</span> procState)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (procState == PROCESS_STATE_NONEXISTENT) &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_GONE;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (procState &gt;= PROCESS_STATE_HOME) &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_BACKGROUND;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (procState &gt;= PROCESS_STATE_SERVICE) &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_SERVICE;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (procState &gt; PROCESS_STATE_HEAVY_WEIGHT) &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_CANT_SAVE_STATE;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (procState &gt;= PROCESS_STATE_IMPORTANT_BACKGROUND) &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_PERCEPTIBLE;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (procState &gt;= PROCESS_STATE_IMPORTANT_FOREGROUND) &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_VISIBLE;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (procState &gt;= PROCESS_STATE_TOP_SLEEPING) &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_TOP_SLEEPING;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (procState &gt;= PROCESS_STATE_FOREGROUND_SERVICE) &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_FOREGROUND_SERVICE;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> IMPORTANCE_FOREGROUND;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>一般情况下，设备端进程被干掉有一下几种情况</p>
<table>
<thead>
<tr>
<th>进程结束场景</th>
<th>结束方式</th>
<th>影响范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>Android 系统自身内存回收机制</td>
<td>Low Memory Killer</td>
<td>Process State 数值从大到小</td>
</tr>
<tr>
<td>第三方管理程序清理进程 无 Root 权限</td>
<td>killBackgroundProcess</td>
<td>Process State 数值大于6进程</td>
</tr>
<tr>
<td>第三方管理程序清理进程 有 Root 权限</td>
<td>force-stop or Kill</td>
<td>除当前前台进程外所有非系统进程</td>
</tr>
<tr>
<td>Rom 清除进程（用户手动清理）</td>
<td>force-stop or Kill</td>
<td>所有非系统进程</td>
</tr>
<tr>
<td>用户手动强制结束</td>
<td>force-stop</td>
<td>第三方应用以及非 System 进程</td>
</tr>
</tbody>
</table>
<p>由以上分析，我们可以可以总结出，如果想提高我们应用后台运行时间，就需要提高当前应用进程优先级，来减少被杀死的概率</p>
<h3 id="守护进程的实现"><a href="#守护进程的实现" class="headerlink" title="#守护进程的实现"></a>#守护进程的实现</h3><p>分析了那么多，现在对Android自身后台进程管理，以及进程的回收也有了一个大致的了解，后边我们要做的就是想尽一切办法去提高应用进程优先级，降低进程被杀的概率；或者是在被杀死后能够重新启动后台守护进程</p>
<h4 id="1-模拟前台进程"><a href="#1-模拟前台进程" class="headerlink" title="#1.模拟前台进程"></a>#1.模拟前台进程</h4><p>第一种方式就是利用系统漏洞，使用<code>startForeground()</code>将当前进程伪装成前台进程，将进程优先级提高到最高(这里所说的最高是服务所能达到的最高，即1);</p>
<p>这种方式在<code>7.x</code>之前都是很好用的，QQ、微信、IReader、Keep 等好多应用都是用的这种方式实现；因为在7.x 以后的设备上，这种伪装前台进程的方式也会显示出来通知栏提醒，这个是取消不掉的，虽然<code>Google</code>现在还没有对这种方式加以限制，不过这个已经能够被用户感知到了，这种方式估计也用不了多久了</p>
<p>下边看下实现方式，这边这个<code>VMDaemonService</code>就是一个守护进程服务，其中在服务的<code>onStartCommand()</code>方法中调用<code>startForeground()</code>将服务进程设置为前台进程，当运行在 API18 以下的设备是可以直接设置，API18 以上需要实现一个内部的<code>Service</code>，这个内部类实现和外部类同样的操作，然后结束自己；当这个服务启动后就会创建一个定时器去发送广播，当我们的核心服务被干掉后，就由另外的广播接收器去接收我们守护进程发出的广播，然后唤醒我们的核心服务；<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 以实现内部 Service 类的方式实现守护进程，这里是利用 android 漏洞提高当前进程优先级</div><div class="line"> *</div><div class="line"> * Created by lzan13 on 2017/3/7.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VMDaemonService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String TAG = VMDaemonService.class.getSimpleName();</div><div class="line"></div><div class="line">    <span class="comment">// 定时唤醒的时间间隔，这里为了自己测试方边设置了一分钟</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> ALARM_INTERVAL = <span class="number">1</span> * <span class="number">60</span> * <span class="number">1000</span>;</div><div class="line">    <span class="comment">// 发送唤醒广播请求码</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> WAKE_REQUEST_CODE = <span class="number">5121</span>;</div><div class="line">    <span class="comment">// 守护进程 Service ID</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> DAEMON_SERVICE_ID = -<span class="number">5121</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"VMDaemonService-&gt;onCreate"</span>);</div><div class="line">        <span class="keyword">super</span>.onCreate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"VMDaemonService-&gt;onStartCommand"</span>);</div><div class="line">        <span class="comment">// 利用 Android 漏洞提高进程优先级，</span></div><div class="line">        startForeground(DAEMON_SERVICE_ID, <span class="keyword">new</span> Notification());</div><div class="line">        <span class="comment">// 当 SDk 版本大于18时，需要通过内部 Service 类启动同样 id 的 Service</span></div><div class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">18</span>) &#123;</div><div class="line">            Intent innerIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, DaemonInnerService.class);</div><div class="line">            startService(innerIntent);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 发送唤醒广播来促使挂掉的UI进程重新启动起来</span></div><div class="line">        AlarmManager alarmManager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);</div><div class="line">        Intent alarmIntent = <span class="keyword">new</span> Intent();</div><div class="line">        alarmIntent.setAction(VMWakeReceiver.DAEMON_WAKE_ACTION);</div><div class="line"></div><div class="line">        PendingIntent operation = PendingIntent.getBroadcast(<span class="keyword">this</span>, WAKE_REQUEST_CODE, alarmIntent,</div><div class="line">                PendingIntent.FLAG_UPDATE_CURRENT);</div><div class="line"></div><div class="line">        alarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis(),</div><div class="line">                ALARM_INTERVAL, operation);</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * 这里返回值是使用系统 Service 的机制自动重新启动，不过这种方式以下两种方式不适用：</div><div class="line">         * 1.Service 第一次被异常杀死后会在5秒内重启，第二次被杀死会在10秒内重启，第三次会在20秒内重启，一旦在短时间内 Service 被杀死达到5次，则系统不再拉起。</div><div class="line">         * 2.进程被取得 Root 权限的管理工具或系统工具通过 forestop 停止掉，无法重启。</div><div class="line">         */</div><div class="line">        <span class="keyword">return</span> START_STICKY;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"onBind 未实现"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"VMDaemonService-&gt;onDestroy"</span>);</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 实现一个内部的 Service，实现让后台服务的优先级提高到前台服务，这里利用了 android 系统的漏洞，</div><div class="line">     * 不保证所有系统可用，测试在7.1.1 之前大部分系统都是可以的，不排除个别厂商优化限制</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">DaemonInnerService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"DaemonInnerService -&gt; onCreate"</span>);</div><div class="line">            <span class="keyword">super</span>.onCreate();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"DaemonInnerService -&gt; onStartCommand"</span>);</div><div class="line">            startForeground(DAEMON_SERVICE_ID, <span class="keyword">new</span> Notification());</div><div class="line">            stopSelf();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">            <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"onBind 未实现"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"DaemonInnerService -&gt; onDestroy"</span>);</div><div class="line">            <span class="keyword">super</span>.onDestroy();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>当我们启动这个守护进程的时候，就可以使用以下<code>adb</code>命令查看当前程序的进程情况（需要<code>adb shell</code>进去设备），<br>为了等下区分进程优先级，我启动了一个普通的后台进程，两外两个一个是我们启动的守护进程，一个是当前程序的核心进程，可以看到除了后台进程外，另外两个进程都带有<code>isForeground=true</code>的属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 这个命令的 services 可以换成 service，这样会只显示当前，进程，不显示详细内容</span></div><div class="line"><span class="comment"># dumpsys activity services &lt;Your Package Name&gt;</span></div><div class="line">root@vbox86p:/ <span class="comment"># dumpsys activity services com.vmloft.develop.daemon           </span></div><div class="line">ACTIVITY MANAGER SERVICES (dumpsys activity services)</div><div class="line">  User 0 active services:</div><div class="line">  * ServiceRecord&#123;170fe1dd u0 com.vmloft.develop.daemon/.services.VMDaemonService&#125;</div><div class="line">    intent=&#123;cmp=com.vmloft.develop.daemon/.services.VMDaemonService&#125;</div><div class="line">    packageName=com.vmloft.develop.daemon</div><div class="line">    processName=com.vmloft.develop.daemon:daemon</div><div class="line">    baseDir=/data/app/com.vmloft.develop.daemon-1/base.apk</div><div class="line">    dataDir=/data/data/com.vmloft.develop.daemon</div><div class="line">    app=ProcessRecord&#123;173fe77f 2370:com.vmloft.develop.daemon:daemon/u0a68&#125;</div><div class="line">    isForeground=<span class="literal">true</span> foregroundId=-5121 foregroundNoti=Notification(pri=0 contentView=com.vmloft.develop.daemon/0x1090077 vibrate=null sound=null defaults=0x0 flags=0x62 color=0xff607d8b vis=PRIVATE)</div><div class="line">    createTime=-6s196ms startingBgTimeout=--</div><div class="line">    lastActivity=-6s157ms restartTime=-6s157ms createdFromFg=<span class="literal">true</span></div><div class="line">    startRequested=<span class="literal">true</span> delayedStop=<span class="literal">false</span> stopIfKilled=<span class="literal">false</span> callStart=<span class="literal">true</span> lastStartId=1</div><div class="line"></div><div class="line">  * ServiceRecord&#123;2fee4f84 u0 com.vmloft.develop.daemon/.services.VMCoreService&#125;</div><div class="line">    intent=&#123;cmp=com.vmloft.develop.daemon/.services.VMCoreService&#125;</div><div class="line">    packageName=com.vmloft.develop.daemon</div><div class="line">    processName=com.vmloft.develop.daemon</div><div class="line">    baseDir=/data/app/com.vmloft.develop.daemon-1/base.apk</div><div class="line">    dataDir=/data/data/com.vmloft.develop.daemon</div><div class="line">    app=ProcessRecord&#123;18c6a1b4 2343:com.vmloft.develop.daemon/u0a68&#125;</div><div class="line">    isForeground=<span class="literal">true</span> foregroundId=-5120 foregroundNoti=Notification(pri=0 contentView=com.vmloft.develop.daemon/0x1090077 vibrate=null sound=null defaults=0x0 flags=0x62 color=0xff607d8b vis=PRIVATE)</div><div class="line">    createTime=-28s136ms startingBgTimeout=--</div><div class="line">    lastActivity=-28s136ms restartTime=-28s136ms createdFromFg=<span class="literal">true</span></div><div class="line">    startRequested=<span class="literal">true</span> delayedStop=<span class="literal">false</span> stopIfKilled=<span class="literal">false</span> callStart=<span class="literal">true</span> lastStartId=1</div><div class="line"></div><div class="line">  * ServiceRecord&#123;2ef6909e u0 com.vmloft.develop.daemon/.services.VMBackgroundService&#125;</div><div class="line">    intent=&#123;cmp=com.vmloft.develop.daemon/.services.VMBackgroundService&#125;</div><div class="line">    packageName=com.vmloft.develop.daemon</div><div class="line">    processName=com.vmloft.develop.daemon:background</div><div class="line">    baseDir=/data/app/com.vmloft.develop.daemon-1/base.apk</div><div class="line">    dataDir=/data/data/com.vmloft.develop.daemon</div><div class="line">    app=ProcessRecord&#123;29f8734c 2388:com.vmloft.develop.daemon:background/u0a68&#125;</div><div class="line">    createTime=-3s279ms startingBgTimeout=--</div><div class="line">    lastActivity=-3s262ms restartTime=-3s262ms createdFromFg=<span class="literal">true</span></div><div class="line">    startRequested=<span class="literal">true</span> delayedStop=<span class="literal">false</span> stopIfKilled=<span class="literal">false</span> callStart=<span class="literal">true</span> lastStartId=1</div></pre></td></tr></table></figure></p>
<p>然后我们可以用下边的命令查看<code>ProcessID</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 这个命令可以查看当前DProcessID（数据结果第二列），我们可以看到当前程序有两个进程</span></div><div class="line"><span class="comment"># ps | grep com.vmloft.develop.daemon</span></div><div class="line">root@vbox86p:/ <span class="comment"># ps | grep com.vmloft.develop.daemon</span></div><div class="line">u0_a68    2343  274   1012408 42188 ffffffff f74f1b45 S com.vmloft.develop.daemon</div><div class="line">u0_a68    2370  274   997012 26152 ffffffff f74f1b45 S com.vmloft.develop.daemon:daemon</div><div class="line">u0_a68    2388  274   997012 25668 ffffffff f74f1b45 S com.vmloft.develop.daemon:background</div></pre></td></tr></table></figure></p>
<p>有了<code>ProcessID</code>之后，我们可以根据这个<code>ProcessID</code>获取到当前进程的优先级状态<code>Process State</code>，对应<code>Linux</code>层的<code>oom_adj</code><br>可以看到当前核心进程的级别为<code>0</code>，因为这个表示当前程序运行在前台 UI 界面，守护进程级别为<code>1</code>，因为我们利用漏洞设置成了前台进程，虽然不可见，但是他的级别也是比较高的，仅次于前台 UI 进程，然后普通后台进程级别为<code>4</code>；当我们退到后台时，可以看到核心进程的级别变为<code>1</code>了，这就是因为我们利用<code>startForeground()</code>将进程设置成前台进程的原因，这样就降低了进程被系统回收的概率了；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 这个命令就是通过 ProcessID 输出其对应 oom_adj</span></div><div class="line"><span class="comment"># cat /proc/ProcessID/oom_adj</span></div><div class="line"><span class="comment"># 程序在前台时，查询进程级别</span></div><div class="line">root@vbox86p:/ <span class="comment"># cat /proc/2343/oom_adj                                      </span></div><div class="line">0</div><div class="line">root@vbox86p:/ <span class="comment"># cat /proc/2370/oom_adj                                        </span></div><div class="line">1</div><div class="line">root@vbox86p:/ <span class="comment"># cat /proc/2388/oom_adj                                        </span></div><div class="line">4</div><div class="line"><span class="comment"># 当程序退到后台时，再次查看进程级别</span></div><div class="line">root@vbox86p:/ <span class="comment"># cat /proc/2343/oom_adj                                      </span></div><div class="line">1</div><div class="line">root@vbox86p:/ <span class="comment"># cat /proc/2370/oom_adj                                        </span></div><div class="line">1</div><div class="line">root@vbox86p:/ <span class="comment"># cat /proc/2388/oom_adj                                        </span></div><div class="line">4</div></pre></td></tr></table></figure></p>
<p>可以看到这种方式确实能够提高进程优先级，但是在一些国产的设备上还是会被杀死的，比我我测试的时候小米点击清空最近运行的应用进程就别干掉了；当把应用加入到设备白名单里就不会被杀死了，微信就是这样，人家直接装上之后就已经在白名单里了，我们要做的就是在用户使用中引导他们将我们的程序设置进白名单，将守护进程和白名单结合起来，这样才能保证我们的应用持续或者</p>
<h4 id="2-JobScheduler机制唤醒"><a href="#2-JobScheduler机制唤醒" class="headerlink" title="#2.JobScheduler机制唤醒"></a>#2.JobScheduler机制唤醒</h4><p>Android系统在5.x以上版本提供了一个<code>JobSchedule</code>接口，系统会根据自己实现定时去调用改接口传递的进程去实现一些操作，而且这个接口在被强制停止后依然能够正常的启动；不过在一些国产设备上可能无效，比如小米；<br>下边是 JobServcie 的实现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 5.x 以上使用 JobService 实现守护进程，这个守护进程要做的工作很简单，就是启动应用的核心进程</div><div class="line"> * Created by lzan13 on 2017/3/8.</div><div class="line"> */</div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP) <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VMDaemonJobService</span> <span class="keyword">extends</span> <span class="title">JobService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String TAG = VMDaemonJobService.class.getSimpleName();</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStartJob</span><span class="params">(JobParameters params)</span> </span>&#123;</div><div class="line">        Log.d(TAG, <span class="string">"onStartJob"</span>);</div><div class="line">        <span class="comment">// 这里为了掩饰直接启动核心进程，没有做其他判断操作</span></div><div class="line">        startService(<span class="keyword">new</span> Intent(getApplicationContext(), VMCoreService.class));</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStopJob</span><span class="params">(JobParameters params)</span> </span>&#123;</div><div class="line">        Log.d(TAG, <span class="string">"onStopJob"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们要做的就是在需要的时候调用<code>JobSchedule</code>的<code>schedule</code>来启动任务；剩下的就不需要关心了，<code>JobSchedule</code>会帮我们做好，下边就是我这边实现的启动任务的方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 5.x以上系统启用 JobScheduler API 进行实现守护进程的唤醒操作</div><div class="line"> */</div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP) </div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startJobScheduler</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> jobId = <span class="number">1</span>;</div><div class="line">    JobInfo.Builder jobInfo = <span class="keyword">new</span> JobInfo.Builder(jobId, <span class="keyword">new</span> ComponentName(<span class="keyword">this</span>, VMDaemonJobService.class));</div><div class="line">    jobInfo.setPeriodic(<span class="number">10000</span>);</div><div class="line">    jobInfo.setPersisted(<span class="keyword">true</span>);</div><div class="line">    JobScheduler jobScheduler = (JobScheduler) getSystemService(Context.JOB_SCHEDULER_SERVICE);</div><div class="line">    jobScheduler.schedule(jobInfo.build());</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="3-系统-Service-START-STICKY-机制重启"><a href="#3-系统-Service-START-STICKY-机制重启" class="headerlink" title="#3.系统 Service START_STICKY 机制重启"></a>#3.系统 Service START_STICKY 机制重启</h4><p>在实现<code>Service</code>类时，将<code>onStartCommand()</code>返回值设置为<code>START_STICKY</code>，利用系统机制在<code>Service</code>挂掉后自动拉活；不过这种方式只适合比较原生一些的系统，像小米，华为等这些定制化比较高的第三方厂商，他们都已经把这些给限制掉了；<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span> </div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</div><div class="line">    Log.i(TAG, <span class="string">"VMDaemonService-&gt;onStartCommand"</span>);</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 这里返回值是使用系统 Service 的机制自动重新启动，不过这种方式以下两种方式不适用：</div><div class="line">     * 1.Service 第一次被异常杀死后会在5秒内重启，第二次被杀死会在10秒内重启，第三次会在20秒内重启，一旦在短时间内 Service 被杀死达到5次，则系统不再拉起。</div><div class="line">     * 2.进程被取得 Root 权限的管理工具或系统工具通过 forestop 停止掉，无法重启。</div><div class="line">     * 3.一些定制化比较高的第三方系统也不适用</div><div class="line">     */</div><div class="line">    <span class="keyword">return</span> START_STICKY;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这种方式在以下两种情况无效：</p>
<ul>
<li><code>Service</code>第一次被异常杀死后会在<code>5</code>秒内重启，第二次被杀死会在<code>10</code>秒内重启，第三次会在<code>20</code>秒内重启，一旦在短时间内<code>Service</code>被杀死达到<code>5</code>次，这个服务就不能再次重启了；</li>
<li>进程被取得<code>Root</code>权限的管理工具或系统工具通过<code>fores-top</code>方式停止掉，无法重启;</li>
<li>一些定制化比较高的第三方系统也不适用</li>
</ul>
<h4 id="4-其他保活方式"><a href="#4-其他保活方式" class="headerlink" title="#4.其他保活方式"></a>#4.其他保活方式</h4><blockquote>
<ul>
<li>利用 Native 本地进程，这个主要使用到 jni 调用底层实现，而且在 Android 5.x 以后对这个限制也比较高，不适用了，暂时不研究</li>
<li>集成第三方SDK互相唤醒，这个只要正常集成了第三方的SDK，并使用了他们对应的服务，当一个设备安装的多个应用都集成了某一个第三方SDK时，启动任意一个 app 都会唤醒其他的 app，不过这个在一些新版的国内厂商系统也是做了限制，这种方式并没有什么效果</li>
<li>一像素的 Activity 方式（流氓方式），经测试一些手机系统无法检测到解锁和锁屏，不确定是否系统修改了解锁或者锁屏的广播，还是禁用了这些广播，因此此方式无效；</li>
</ul>
</blockquote>
<h3 id="结语"><a href="#结语" class="headerlink" title="#结语"></a>#结语</h3><p>事事没有绝对，万物总有一些漏洞，就算上边的那些方式不可用了，后边肯定还会出现其他的方式；我们不能保证我们的应用不死，但我们可以提高存活率；</p>
<p>其实最好的方式还是把程序做好，让程序本身深入人心，别人喜欢你了，就算你被干掉了，他们也会主动的把你拉起来，然后把你加入他们的白名单，然后我们的目的就实现了不是 😁 ~</p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="#参考资料"></a>#参考资料</h3><ul>
<li>【<a href="https://segmentfault.com/a/1190000006251859" target="_blank" rel="external">腾讯Bugly干货分享 Android 进程保活招式大全</a>】</li>
<li>【<a href="https://developer.android.com/guide/components/processes-and-threads.html" target="_blank" rel="external">Android 官方文档-进程和线程</a>】</li>
<li>【<a href="http://www.cnblogs.com/angeldevil/archive/2013/05/21/3090872.html" target="_blank" rel="external">Android Low Memory Killer</a>】</li>
<li>【<a href="http://www.jianshu.com/p/63aafe3c12af" target="_blank" rel="external">关于 Android 进程保活，你所需要知道的一切</a>】</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;项目源码：【&lt;a href=&quot;https://github.com/lzan13&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lzan13&lt;/a&gt; / &lt;a href=&quot;https://github.com/lzan13/VMD
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="Daemon" scheme="http://melove.net/tags/Daemon/"/>
    
      <category term="JobService" scheme="http://melove.net/tags/JobService/"/>
    
      <category term="JobScheduler" scheme="http://melove.net/tags/JobScheduler/"/>
    
      <category term="Process" scheme="http://melove.net/tags/Process/"/>
    
      <category term="Service" scheme="http://melove.net/tags/Service/"/>
    
      <category term="StartForeground" scheme="http://melove.net/tags/StartForeground/"/>
    
  </entry>
  
  <entry>
    <title>使用第三方库出现找不到so库UnsatisfiedLinkError错误的原因以及解决方案</title>
    <link href="http://melove.net/2017/02/android-library-so-error-unsatisfiedlinkerror-1487659244.html"/>
    <id>http://melove.net/2017/02/android-library-so-error-unsatisfiedlinkerror-1487659244.html</id>
    <published>2017-02-21T06:40:44.000Z</published>
    <updated>2017-02-21T06:59:12.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>首先这边引用<code>环信SDK工程师</code>总结的出现这个问题的一些原因（稍作排版修改）：<br>引用 / <a href="http://www.imgeek.org/article/825307895" target="_blank" rel="external">环信SDK工程师分析 UnsatisfiedLinkError</a></p>
</blockquote>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在开发项目的时候我们免不了使用一些第三方的库来进行快速开发，有些第三方库只是简单的一个<code>jar</code>包，但是有些使用了<code>jni</code>开发，因此会包含<code>so</code>库文件，这个时候如果不消息我们就会遇到一个错误:<code>java.lang.UnsatisfiedLinkError</code>；</p>
<p>最近经常遇到有开发者在问使用环信<code>sdk</code>的时候出现这个错误；这里分享下问题原因以及解决方案；</p>
<h3 id="相关信息"><a href="#相关信息" class="headerlink" title="相关信息"></a>相关信息</h3><p>这里需要先解释一下相关信息<br><code>hyphenatechatsdk</code>提供的指令集类型仅提供<code>armeabi</code>、<code>arm64-v8a</code>、<code>x86</code>三种;<br><code>armeabi</code>和<code>armeabi-v7a</code>是相近似的指令集，<code>v7a</code>是增强型指令集，运行速度，效率均有所提高，他们都是<code>32</code>位指令，并且兼容；<code>arm64-v8a</code>对应<code>arm64</code>位指令集；<br><code>arm64</code>位策略和<code>intel IA32</code>不一样：<code>intel64</code>位指令是兼容<code>intel32</code>位指令，<code>intel32</code>位指令编译的程序可以直接在<code>intel64</code>位机器上运行；但是<code>arm</code>不是，<code>arm64</code>位和<code>arm32</code>位是彼此独立的指令系统，不兼容；<code>arm</code>这样设计的原因是因为运行在嵌入式上，设计指标更趋向于效率，和耗电考量；实际上<code>arm64</code>位芯片上同时包含着<code>arm64</code>指令处理器和<code>arm32</code>位指令处理器，只不过两个处理器彼此独立；</p>
<h3 id="导致产生UnsatisfiedLinkError的几个原因"><a href="#导致产生UnsatisfiedLinkError的几个原因" class="headerlink" title="导致产生UnsatisfiedLinkError的几个原因"></a>导致产生<code>UnsatisfiedLinkError</code>的几个原因</h3><p>影响链接的限制条件: <code>armeabi</code>实际上可以运行在<code>arm64</code>位机器上，只不过<code>Google</code>增加了限制条件：</p>
<ol>
<li><p><code>Android4.x</code>只要能找到<code>so</code>，就可以运行，<code>so</code>可以在<code>armeabi</code>、<code>armeabi-v7a</code>、<code>arm64-v8a</code>，<code>so</code>位置可以很随意；</p>
</li>
<li><p><code>Android5.x</code>开始，检查更加严格，会只有和芯片型号对应目录的<code>so</code>会安装到手机中；</p>
<blockquote>
<p>举个例子：<br>开发环境下目录结构如下<br> <code>libs/armeabi:libhyphenate.so libhyphenate_av.so</code><br> <code>libs/armeabi-v7a:libmediadata.so</code><br>手机对应的指令集是<code>armeabi-v7a</code>，然后安装到手机的只有<code>libmediadata.so</code>；</p>
</blockquote>
</li>
<li><p><code>Android6.x</code>下，检查更加严格，有一条规则，之前测试有遇到，现在不太确认；<br><code>libs/armeabi/: libhyphenate.so libhyphenate_av.so</code><br><code>libs/arm64-v8a</code>(没有此目录)<br>在<code>arm64</code>位机器上也可以运行，但是作为开发者通常会依赖其他开发包，比如<code>baiduMap</code>，也会用其他<code>so</code>，不能让所有开发者都删掉<code>libs/arm64-v8a</code>的目录；不过开发者可以尝试下删除<code>arm64-v8a</code>，只留<code>armeabi</code>，这样安装包会很小，在各个平台上也能运行；<br><code>Google</code>考量点是执行速率，更流畅的用户体验，作为开发者，服务提供者，我们希望<code>apk</code>尽可能小，对执行速度要求不高；</p>
</li>
<li><p><code>armeabi</code>和<code>armeabi-v7a</code>可以互换，现在市面上的手机很少有<code>armeabi</code>的，基本上是<code>armeabi-v7a</code>或<code>arm64</code>位的高端机器。</p>
</li>
<li><p>查看手机芯片型号：<code>cat /proc/cpuinfo</code>, 仔细看一下打印信息，能够看明白手机指令集，是<code>32</code>位还是<code>64</code>位。</p>
</li>
<li><p><code>x86</code>目录，通常对应虚拟机，很多开发者喜欢在<code>genymotion</code>上开发调试，这个就对应<code>86</code>，<code>x86</code>和前面说的<code>intel IA32</code>是一回事，所以只提供<code>32</code>位的，也能在<code>x86-64</code>位机器上运行；</p>
</li>
<li><p>我们的<code>so</code>还依赖于<code>libsqlite.so</code>，不过由于这个包从来没有变化，使用的是系统默认提供的<code>/system/lib</code>，在<code>Android 6.x</code>及以下的平台可以运行，<code>Android7.x</code>执行更严格的安全检查，禁止使用系统目录的内容，所以如果希望在<code>Android7.x</code>以上版本，需要把系统目录的<code>libsqlite.so</code>拷贝出来，也放在自己<code>app</code>对应指令目录下，由于目前<code>Android7.x</code>市面上没有机型，所以目前不在考虑范围；</p>
</li>
<li><p><code>mips</code>指令集的手机很少见，听说联想有出过，没见过;</p>
</li>
<li><p><code>libs/armeabi/libhyphenate.so</code>和<code>libs.without.audio/armeabi/libhyphenate.so</code>是不同，<code>libs/armeabi/libhyphenate.so</code>会依赖于<code>libs/armeabi/libhyphenate_av.so</code>，如果找不到会报<code>java.lang.UnsatisfiedLinkError</code>；</p>
</li>
<li><p>还有一个比较容易忽略的一点，现在我们的的项目一般都是引入好多个第三方库，第六点也提到了使用<code>baiduMap</code>这点，就是当一个项目引入多个库，不同的库有不同的<code>so</code>文件夹，当其中一个支持的比较少，但是另一个比较全时，也会出现这样的错误，解决方法就是不支持的<code>so</code>文件夹删除</p>
<blockquote>
<p>举个例子：<br>环信支持的指令集<code>arm64-v8a</code>、<code>armeabi</code>、<code>x86</code><br>百度地图支持的指令集<code>arm64-v8a</code>、<code>armeabi</code>、<code>armeabi-v7a</code>、<code>x86</code>、<code>x86_64</code>、<code>mips</code>、<code>mips64</code><br>如果想在所有设备上都能运行，需要把<code>armeabi-v7a</code>、<code>x86_64</code>、<code>mips</code>、<code>mips64</code>这些删除；<br>根据前边所说可以保留<code>armeabi-v7a</code>文件夹，然后复制<code>armeabi</code>里的<code>so</code>文件到<code>armeabi-v7a</code>就行了</p>
</blockquote>
</li>
</ol>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>所以如果大家再遇到这样的问题，可以先根据以上信息排查下，无非就是某个库的 so 文件放多了，或者某个 so 库的文件放少了，或者是 jar 包和 so 不匹配了，这些只要细心看下 ide 的日志提示，很容易就解决，希望此篇文章能帮大家解决问题，谢谢！</p>
<p>文笔有限，如果问题，欢迎指正 ^_^~</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;首先这边引用&lt;code&gt;环信SDK工程师&lt;/code&gt;总结的出现这个问题的一些原因（稍作排版修改）：&lt;br&gt;引用 / &lt;a href=&quot;http://www.imgeek.org/article/825307895&quot; target=&quot;_blank&quot;
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="Library" scheme="http://melove.net/tags/Library/"/>
    
      <category term="Easemob" scheme="http://melove.net/tags/Easemob/"/>
    
      <category term="Error" scheme="http://melove.net/tags/Error/"/>
    
      <category term="Armeabi" scheme="http://melove.net/tags/Armeabi/"/>
    
      <category term="HyphenateChatSDK" scheme="http://melove.net/tags/HyphenateChatSDK/"/>
    
      <category term="UnsatisfiedLinkError" scheme="http://melove.net/tags/UnsatisfiedLinkError/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio 开发测试运行 Java 类的 Main 方法</title>
    <link href="http://melove.net/2016/11/android-androidstudio-run-java-1479898645000.html"/>
    <id>http://melove.net/2016/11/android-androidstudio-run-java-1479898645000.html</id>
    <published>2016-11-23T10:57:25.000Z</published>
    <updated>2017-02-16T09:05:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>自从<code>Google</code>发布了<code>AndroidStudio1.5</code>之后，现在经常使用<code>AndroidStudio</code>开发程序了，在习惯了他的强大之后已经深深的把<code>Eclipse</code>给抛弃了，现在就算有<code>Eclipse</code>的项目也直接导入到<code>AndroidStudio</code>里去查看；不过在有时候发现<code>Eclipse</code>比<code>AndroidStudio</code>还是有一点儿有时的，就是在有时候突然有个小想法，或者想测试小段计算的代码，这个时候也还必须连上手机去运行程序才行，这让我一直很苦恼；</p>
<p>不过后来发现，原来可以通过另外一种方式实现运行<code>java</code>类的<code>main</code>方法，不过在刚开始的测试过程中一直有问题，最近更新了下<code>SDK</code>突然想起来试下，发现成功了，这里记录下，给大家一个参考；</p>
<hr>
<h3 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h3><p>首先如果想实现在<code>AndroidStudio</code>上运行<code>java</code>类，必须有个正常的项目，他是不能直接使用的，有了正常的<code>AndroidStudio</code>项目之后我们就可以在项目上新建一个<code>Module</code>；<br>步骤：</p>
<ol>
<li>创建 Module<blockquote>
<p><code>右击项目</code>-&gt;<code>New</code>-&gt;<code>Module</code></p>
</blockquote>
</li>
<li>然后在弹出界面选择<blockquote>
<p><code>Java Library</code></p>
</blockquote>
</li>
<li>然后填写Libarary的信息就行了<blockquote>
<ul>
<li>Library Name<br>就填写当前 Library 的名字</li>
<li>Java package name<br>当前创建的 Library 包名</li>
<li>Java class<br>当前 Library 第一个类的名字</li>
</ul>
</blockquote>
</li>
</ol>
<h3 id="编码测试"><a href="#编码测试" class="headerlink" title="编码测试"></a>编码测试</h3><p>基础我们都已经做好了，下边就可以开始进行编码测试了，这个编码都要在刚才创建的<code>Library</code>下进行，这样就可以像在<code>Eclipse</code>里进行一样了</p>
<p>创建完成之后就可以看到项目目录下有一个刚才创建的<code>Module</code>，我们的<code>java</code>代码都是在这个<code>library</code>下编写测试;</p>
<p>首先我们要写一个<code>main</code>方法，并在里边输出一句话<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 我们java library 的额第一个类</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MLMain</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * java类的 main方法，可以直接 run</div><div class="line">     * <span class="doctag">@param</span> args</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        System.out.print(<span class="string">"hello java library!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>然后我们可以直接右击当前类，点击<code>Run&#39;MLMain.main()&#39;</code></p>
<p>可以看到控制台输出了我们打印的那句话</p>
<h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>OK了，以后我们就可以愉快的在 AndroidStudio 中测试 java 代码了！</p>
<p>希望这篇文章能对大家有所帮助！O(∩_∩)O~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从&lt;code&gt;Google&lt;/code&gt;发布了&lt;code&gt;AndroidStudio1.5&lt;/code&gt;之后，现在经常使用&lt;code&gt;AndroidStudio&lt;/code&gt;开发程序了，在习惯了他的强大之后已经深深的把&lt;code&gt;Eclipse&lt;/code&gt;给抛弃了，现在
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="Library" scheme="http://melove.net/tags/Library/"/>
    
      <category term="Module" scheme="http://melove.net/tags/Module/"/>
    
      <category term="Java" scheme="http://melove.net/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令总结</title>
    <link href="http://melove.net/2016/11/git-common-commands-summary-1478837532000.html"/>
    <id>http://melove.net/2016/11/git-common-commands-summary-1478837532000.html</id>
    <published>2016-11-11T04:12:12.000Z</published>
    <updated>2017-02-16T10:49:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>简单总结下使用 <code>git</code> 进行版本控制的时候一些常用命令，以及一些常用语</p>
<h2 id="创建SSH秘钥"><a href="#创建SSH秘钥" class="headerlink" title="创建SSH秘钥"></a>创建SSH秘钥</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;lzan13@sina.com&quot;</div></pre></td></tr></table></figure>
<p>这个命令会在当前用户目录下生成一个<code>.ssh</code>目录，然后生成两个文件<code>.id_rsa</code>私钥和<code>.id_rsa.pub</code>公钥</p>
<h2 id="本地操作相关"><a href="#本地操作相关" class="headerlink" title="本地操作相关"></a>本地操作相关</h2><p>主要是在本地仓库操作时使用的一些命令</p>
<h3 id="git-status"><a href="#git-status" class="headerlink" title="#git status"></a>#git status</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git status</div></pre></td></tr></table></figure>
<p>查看当前仓库状态：是否有文件修改，需要添加等</p>
<h3 id="git-add"><a href="#git-add" class="headerlink" title="#git add"></a>#git add</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git add &lt;file&gt;</div><div class="line">git add .</div></pre></td></tr></table></figure>
<p>将文件添加到暂存区，后边跟着文件名，可以使用<code>.</code>表示添加全部文件</p>
<h3 id="git-commit"><a href="#git-commit" class="headerlink" title="#git commit"></a>#git commit</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -m &quot;first commit&quot;</div></pre></td></tr></table></figure>
<p>提交暂存区的所有代码到版本库，参数就是本次提交的说明信息</p>
<h3 id="git-log"><a href="#git-log" class="headerlink" title="#git log"></a>#git log</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git log // 查看提交日志</div><div class="line">git log --pretty=oneline // 查询信息都在一行显示</div><div class="line">git log --graph // 查看分之合并图</div></pre></td></tr></table></figure>
<p>提交日志相关，列出从最近到之前的提交日志，列出信息包含有<code>SHA1</code>计算得到的<code>commit_id</code></p>
<h3 id="git-reset"><a href="#git-reset" class="headerlink" title="#git reset"></a>#git reset</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git reset --hard HEAD^</div><div class="line">git reset --hard &lt;commit_id&gt;</div></pre></td></tr></table></figure>
<p>这个命令的作用是将代码回退到之前提交的版本，在Git中，用<code>HEAD</code>表示当前版本，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，如果是多个可以写成<code>HEAD~ N</code>，N 代表是第几个，也可以和<code>git log</code>的结果关联起来使用</p>
<h3 id="git-relog"><a href="#git-relog" class="headerlink" title="#git relog"></a>#git relog</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git relog</div></pre></td></tr></table></figure>
<p>Git 工具操作命令历史日志，和<code>git log</code>稍有不同，<code>git relog</code>会记录所有 git 操作</p>
<h3 id="git-diff"><a href="#git-diff" class="headerlink" title="#git diff"></a>#git diff</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git diff</div><div class="line">git diff &lt;file&gt;</div><div class="line">git diff [&lt;commit_id&gt;] -- &lt;file&gt; // 表示要查看当前文件与上个版本库中的区别</div></pre></td></tr></table></figure>
<p>查看文件差异，不带有参数时会列出本次修改所有文件，带上参数时需要制定文件全路径</p>
<h3 id="git-checkout"><a href="#git-checkout" class="headerlink" title="#git checkout"></a>#git checkout</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -- &lt;file&gt;</div></pre></td></tr></table></figure>
<p>撤销对文件的本次修改，回到之前的状态，准确点儿是回到上次调用<code>git add</code>或者<code>git commit</code>状态</p>
<h3 id="git-rm"><a href="#git-rm" class="headerlink" title="#git rm"></a>#git rm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git rm &lt;file&gt;</div></pre></td></tr></table></figure>
<p>从版本库删除一个文件，与本地的删除一个文件不同，这里是直接将版本库里的文件删除了，如果之前有将文件提交到版本库，可以使用<code>git checkout -- filename</code>恢复；</p>
<h3 id="git-branch"><a href="#git-branch" class="headerlink" title="#git branch"></a>#git branch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git branch // 查看分支 -v 本地全部分支，-a 包括远程全部分支</div><div class="line">git checkout -b &lt;branch&gt; // 创建并切换分支，等同于下边两个命令</div><div class="line">git branch &lt;branch&gt; // 创建分支</div><div class="line">git checkout &lt;branch&gt; // 切换分支</div><div class="line">git branch -d &lt;branch&gt; // 删除本地分支</div></pre></td></tr></table></figure>
<p>分支相关操作命令</p>
<h3 id="git-merge"><a href="#git-merge" class="headerlink" title="#git merge"></a>#git merge</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge &lt;branch&gt;</div></pre></td></tr></table></figure>
<p>合并指定分支到当前所在分支，在使用<code>merge</code>命令时有可能会出现代码修改冲突的情况，特别是在多人协作的情况下，冲突用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>和<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>包裹，中间用<code>=======</code>分割，<code>=======</code>以上是当前分支内容，以下是合并到当前分支的其他分支内容；</p>
<h2 id="远程操作相关"><a href="#远程操作相关" class="headerlink" title="远程操作相关"></a>远程操作相关</h2><p>主要是和操作远程仓库相关的一些命令</p>
<h3 id="git-remote"><a href="#git-remote" class="headerlink" title="#git remote"></a>#git remote</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git remote add &lt;name&gt; &lt;url&gt;</div><div class="line">git remote remove &lt;name&gt;</div><div class="line">git remote rename &lt;old&gt; &lt;new&gt;</div></pre></td></tr></table></figure>
<p>管理当前仓库的远程地址，分别是：添加远程仓库地址、删除远程仓库、重命名远程仓库</p>
<h3 id="git-push"><a href="#git-push" class="headerlink" title="#git push"></a>#git push</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git push -u &lt;remote&gt; &lt;branch&gt;</div><div class="line">git push &lt;remote&gt; &lt;branch&gt;</div><div class="line">git push &lt;remote&gt; &lt;branch&gt;:&lt;branch&gt; // 将本地分支上传到远程的一个新分支</div><div class="line">git push &lt;remote :&lt;branch&gt; // 将本地空分支推送到远端，即删除远程分支</div></pre></td></tr></table></figure>
<p>此命令是将本地仓库推送到远程仓库，第一次推送到远程分支需要加上<code>-u</code>参数，</p>
<h3 id="git-clone"><a href="#git-clone" class="headerlink" title="#git clone"></a>#git clone</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone &lt;url&gt; [&lt;dir&gt;]</div><div class="line">git clone -b &lt;branch&gt; &lt;url&gt; [&lt;dir&gt;]</div><div class="line">git checkout -b &lt;branch&gt; &lt;remote&gt;/&lt;branch&gt; // 根据远程仓库的分支创建并切换到新分支</div></pre></td></tr></table></figure>
<p>克隆远程仓库到本地，可以使用<code>-b</code>参数指定克隆的分支，以及指定克隆后的文件夹名称，不设置就是默认远程仓库名字；</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>参考网站 <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰 Git 教程</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单总结下使用 &lt;code&gt;git&lt;/code&gt; 进行版本控制的时候一些常用命令，以及一些常用语&lt;/p&gt;
&lt;h2 id=&quot;创建SSH秘钥&quot;&gt;&lt;a href=&quot;#创建SSH秘钥&quot; class=&quot;headerlink&quot; title=&quot;创建SSH秘钥&quot;&gt;&lt;/a&gt;创建SSH秘钥&lt;/
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
    
      <category term="Git" scheme="http://melove.net/tags/Git/"/>
    
      <category term="Branch" scheme="http://melove.net/tags/Branch/"/>
    
      <category term="Clone" scheme="http://melove.net/tags/Clone/"/>
    
      <category term="Remote" scheme="http://melove.net/tags/Remote/"/>
    
      <category term="SSH" scheme="http://melove.net/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>SublimeText的使用</title>
    <link href="http://melove.net/2016/05/tool-sublimetext-use-1462945062000.html"/>
    <id>http://melove.net/2016/05/tool-sublimetext-use-1462945062000.html</id>
    <published>2016-05-11T05:37:42.000Z</published>
    <updated>2017-02-16T09:39:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前一直在使用<code>EditPlus3</code>，后来得知了<code>SublimeText</code>，好牛X的样子，所以就开始使用了</p>
<h3 id="首先SublimeText的安装"><a href="#首先SublimeText的安装" class="headerlink" title="首先SublimeText的安装"></a>首先SublimeText的安装</h3><p>先去官方下载安装包，这里下载的是<a href="http://www.sublimetext.com/2" target="_blank" rel="external">SublimeText2</a> 根据安装向导安装就好了</p>
<h3 id="Package-Control"><a href="#Package-Control" class="headerlink" title="Package Control"></a>Package Control</h3><p>如果需要给<code>SublimeText</code>安装插件，首先需要安装<code>Package Control</code></p>
<ul>
<li>按<code>Ctrl+``或者</code>View&gt;Show Console<code>打开</code>Console`（SublimeText控制台）</li>
<li><p>粘贴下边的代码到<code>Console</code>并回车，<a href="https://packagecontrol.io/installation" target="_blank" rel="external">Package Control</a></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 2.x版本</span></div><div class="line"><span class="keyword">import</span> urllib2,os,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class="keyword">if</span> not os.path.exists(ipp) <span class="keyword">else</span> None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by) <span class="keyword">if</span> dh == h <span class="keyword">else</span> None; print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)</div><div class="line"></div><div class="line"><span class="comment">// 3.x版本</span></div><div class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manpciual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</div></pre></td></tr></table></figure>
</li>
<li><p>等待左下角的进度完成，然后重启<code>SublimeText2</code>就成功了</p>
</li>
</ul>
<h3 id="MarkdownEditing"><a href="#MarkdownEditing" class="headerlink" title="MarkdownEditing"></a>MarkdownEditing</h3><h4 id="安装MarkdownEditing"><a href="#安装MarkdownEditing" class="headerlink" title="安装MarkdownEditing"></a>安装MarkdownEditing</h4><ul>
<li>按下<code>Ctrl+Shift+P</code>然后输入<code>Package Control: Install Package</code>或<code>pci</code>然后在弹出框输入<code>MarkdownEditing</code>回车，等待安装完成，然后重启<code>SublimeText</code>就可以看到<code>Markdown</code>的效果了</li>
<li>此插件可以设置一些主题，不过他的主题对<code>Markdown</code>的语言没作用，只是更改了编辑文本的主题样式</li>
<li>然后就是有一些快捷键比如：<blockquote>
<p>插入链接：<code>win+ctrl+v</code><br>插入图片：<code>win+ctrl+k</code><br>其他详细可以通过打开<code>Ctrl+Shift+P</code>然后输入<code>MarkdownEditing</code>查看</p>
</blockquote>
</li>
</ul>
<h3 id="HTML-CSS-JS-Prettify"><a href="#HTML-CSS-JS-Prettify" class="headerlink" title="HTML/CSS/JS Prettify"></a>HTML/CSS/JS Prettify</h3><h4 id="安装HTML-CSS-JS-Prettify"><a href="#安装HTML-CSS-JS-Prettify" class="headerlink" title="安装HTML-CSS-JS Prettify"></a>安装HTML-CSS-JS Prettify</h4><p>按下<code>Ctrl+Shift+P</code>然后输入<code>Package Control: Install Package</code>或<code>pci</code>然后在弹出框输入<code>HTML-CSS-JS Prettify</code>然后回车，等待安装完成重启就行了</p>
<h4 id="配置HTML-CSS-JS-Prettify"><a href="#配置HTML-CSS-JS-Prettify" class="headerlink" title="配置HTML-CSS-JS Prettify"></a>配置HTML-CSS-JS Prettify</h4><p>配置的时候只需要右键<code>HTML/CSS/JS Prettify&gt;Set Plugin Options</code>打开插件的配置文件，修改下<code>nodejs</code>的路径就行了，其中有三个平台的路径，只需要修改自己相应的平台就行了<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  // Simply using `node` without specifying a path sometimes doesn't work :(</div><div class="line">  // https://github.com/victorporof/Sublime-HTMLPrettify#oh-noez-command-not-found</div><div class="line">  // http://nodejs.org/#download</div><div class="line">  "node_path": &#123;</div><div class="line">    "windows": "D:/develop/web/nodejs/node.exe",</div><div class="line">    "linux": "/usr/bin/nodejs",</div><div class="line">    "osx": "/usr/local/bin/node"</div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  // Automatically format when a file is saved.</div><div class="line">  "format_on_save": false,</div><div class="line"></div><div class="line">  // Only format the selection if there's one available.</div><div class="line">  "format_selection_only": true,</div><div class="line"></div><div class="line">  // Log the settings passed to the prettifier from `.jsbeautifyrc`.</div><div class="line">  "print_diagnostics": true</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="Pretty-JSON"><a href="#Pretty-JSON" class="headerlink" title="Pretty JSON"></a>Pretty JSON</h3><h4 id="安装Pretty-JSON"><a href="#安装Pretty-JSON" class="headerlink" title="安装Pretty JSON"></a>安装Pretty JSON</h4><ul>
<li>按下<code>Ctrl+Shift+P</code>然后输入<code>Package Control: Install Package</code>或<code>pci</code>然后在弹出框输入<code>Pretty JSON</code>然后回车等待安装完成</li>
<li>选择<code>Preferences &gt; Package Settings &gt; Pretty JSON &gt; Settings - Default​</code>进行相关设置，其实这个没有什么要设置的</li>
<li>快捷键就是<code>Ctrl+Alt+J</code></li>
</ul>
<h3 id="一些常用设置"><a href="#一些常用设置" class="headerlink" title="一些常用设置"></a>一些常用设置</h3><ul>
<li>Tab为4空格：菜单栏<code>View&gt;Indentation&gt;Tab Width: 4</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;之前一直在使用&lt;code&gt;EditPlus3&lt;/code&gt;，后来得知了&lt;code&gt;SublimeText&lt;/code&gt;，好牛X的样子，所以就
    
    </summary>
    
      <category term="APPShare" scheme="http://melove.net/categories/APPShare/"/>
    
    
      <category term="Share" scheme="http://melove.net/tags/Share/"/>
    
      <category term="Tool" scheme="http://melove.net/tags/Tool/"/>
    
      <category term="Plugin" scheme="http://melove.net/tags/Plugin/"/>
    
      <category term="SublimeText" scheme="http://melove.net/tags/SublimeText/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio优化编译速度</title>
    <link href="http://melove.net/2016/04/android-androidstudio-accelerate-build-1460551046000.html"/>
    <id>http://melove.net/2016/04/android-androidstudio-accelerate-build-1460551046000.html</id>
    <published>2016-04-13T12:37:26.000Z</published>
    <updated>2017-02-16T08:58:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天AndroidStudio发不了<code>2.0</code>正式版，又不少好的功能，所以就更新了下，不过碍于电脑配置不够，刚升级完编译项目竟然要5分钟之多，我了个去，这还搞毛啊，所以扒一扒有什么能优化的方法，稍微加速点编译速度，其实在<code>1.x</code>的版本时就有过配置优化，经过优化配置后，我的<code>AndroidStudio</code>编译一个全新的项目还是需要<code>1:30</code>没有网上别人说的那么快，应该是电脑配置不够的原因，内存8G，同事的<code>MacBook</code>16G配置，不优化都比我的快，说这么多就是配置够好就够快</p>
<p>废话太多了，开始优化</p>
<h3 id="第一步修改gradle-properties"><a href="#第一步修改gradle-properties" class="headerlink" title="第一步修改gradle.properties"></a>第一步修改gradle.properties</h3><p>首先在当前用户的目录下<code>C:\Users\lzan13\.gradle</code>创建 <code>gradle.properties</code> 文件，并加入如下配置<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">#---------------------------------------------------------------------------------------------------------</div><div class="line"># <span class="number">2016</span>-<span class="number">4</span>-<span class="number">12</span> by lzan13</div><div class="line">#</div><div class="line"># 此文件是对通过 Gradle 编译项目的全局配置，所有项目都有效，其实这些都是根据</div><div class="line"># AndroidStudio 创建的项目的 gradle.properties 文件配置的，原文内容如下注释</div><div class="line">#</div><div class="line">#---------------------------------------------------------------------------------------------------------</div><div class="line">#=========================================================================================================</div><div class="line"># <span class="keyword">Project</span>-wide Gradle settings.</div><div class="line"># IDE (e.g. Android Studio) users:</div><div class="line"># Gradle settings configured through the IDE *will override*</div><div class="line"># <span class="keyword">any</span> settings specified in <span class="keyword">this</span> <span class="keyword">file</span>.</div><div class="line"># <span class="keyword">For</span> more details on how to configure your build environment visit</div><div class="line"># http:<span class="comment">//www.gradle.org/docs/current/userguide/build_environment.html</span></div><div class="line"># Specifies the JVM arguments used <span class="keyword">for</span> the daemon process.</div><div class="line"># The setting is particularly useful <span class="keyword">for</span> tweaking memory settings.</div><div class="line"># <span class="keyword">Default</span> value: -Xmx10248m -XX:MaxPermSize=<span class="number">256</span>m</div><div class="line"># org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=<span class="number">512</span>m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-<span class="number">8</span></div><div class="line"># When configured, Gradle will run in incubating parallel mode.</div><div class="line"># <span class="keyword">This</span> option should only be used with decoupled projects. More details, visit</div><div class="line"># http:<span class="comment">//www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects</span></div><div class="line"># org.gradle.parallel=<span class="keyword">true</span></div><div class="line">#=========================================================================================================</div><div class="line"># 开启Gradle 守护进程</div><div class="line">org.gradle.daemon=<span class="keyword">true</span></div><div class="line"># 使用多线程编译</div><div class="line">org.gradle.parallel=<span class="keyword">true</span></div><div class="line"># 设置JVM 虚拟机内存大小， 后边是设置保存错误日志</div><div class="line">org.gradle.jvmargs=-Xmx1024m -XX:MaxPermSize=<span class="number">256</span>m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-<span class="number">8</span></div><div class="line"># 使用按需配置</div><div class="line">org.gradle.configureondemand=ture</div></pre></td></tr></table></figure></p>
<h3 id="第二步设置-offline"><a href="#第二步设置-offline" class="headerlink" title="第二步设置 offline"></a>第二步设置 offline</h3><p>打开设置面板，找到Build, Execution, Deployment&gt;Build Tools&gt;Gradle<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2016/04/accelerate-image-offline.png" alt="offline"></p>
<h3 id="然后选中Compiler，"><a href="#然后选中Compiler，" class="headerlink" title="然后选中Compiler，"></a>然后选中Compiler，</h3><p>其中四项复选框都可以选中</p>
<blockquote>
<p>1) Compile independent modules in parallel (may require larger heap size) this option is in “incubation” and should only be used with decoupled projects. 表示使用多线程编译，需要更多的堆栈内存<br>2) Make project automatically (only works while not running / debugging). 使项目自动(只工作而不是运行/调试<br>3) use in process build. Faster, and integrated with the “Gradle Console”. 使用过程中构建。更快,结合“Gradle控制台”。<br>4) configure on demand. This option may speed up builds. This option is in “incubation”. Please read Gradle’s documentation. 按需配置这个选项可能会加速构建。此选项在“孵化”。请读它的文档</p>
</blockquote>
<p>其中的命令行需要单独配置<br>可以看下文档 <a href="http://www.gradle.org/docs/current/userguide/gradle_command_line.html" target="_blank" rel="external">Gradle Command</a><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2016/04/accelerate-image-compiler.png" alt="command line"></p>
<p><code>--offline</code>是开启脱机工作<br><code>--profile</code>生成编译记录文件，用来分析哪里耗时<br>（文件目录：<code>CurrProject/build/reports/profile/</code>）<br><a href="http://liaohuqiu.net/posts/speed-up-your-build/" target="_blank" rel="external">这里讲解记录文件的分析</a></p>
<p>###以上配置做完了之后就可以新建项目使用了<br>以上都是全局配置，配置完之后，我们新建项目就会应用这些配置，如果是我们之前创建的项目时不会应用在studio新配置的项，需要打开项目重新配置下；<br>然后又是我们需要更新下项目的一些配置</p>
<h3 id="首先是项目根目录的build-gradle文件更新gradle插件到最新"><a href="#首先是项目根目录的build-gradle文件更新gradle插件到最新" class="headerlink" title="首先是项目根目录的build.gradle文件更新gradle插件到最新"></a>首先是项目根目录的build.gradle文件更新gradle插件到最新</h3><pre><code>classpath &apos;com.android.tools.build:gradle:2.0.0&apos;
</code></pre><p>开启Instant Run，这个默认一般都开启的<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2016/04/accelerate-image-instant-run.png" alt="instant run"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天AndroidStudio发不了&lt;code&gt;2.0&lt;/code&gt;正式版，又不少好的功能，所以就更新了下，不过碍于电脑配置不够，刚升级完编译项目竟然要5分钟之多，我了个去，这还搞毛啊，所以扒一扒有什么能优化的方法，稍微加速点编译速度，其实在&lt;code&gt;1.x&lt;/code
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="Accelerate" scheme="http://melove.net/tags/Accelerate/"/>
    
      <category term="Build" scheme="http://melove.net/tags/Build/"/>
    
      <category term="Compile" scheme="http://melove.net/tags/Compile/"/>
    
      <category term="InstantRun" scheme="http://melove.net/tags/InstantRun/"/>
    
      <category term="Offline" scheme="http://melove.net/tags/Offline/"/>
    
  </entry>
  
  <entry>
    <title>Android开发集成聊天环信SDK3.x简单开始</title>
    <link href="http://melove.net/2016/04/android-easemob-3x-simple-start-1459998247000.html"/>
    <id>http://melove.net/2016/04/android-easemob-3x-simple-start-1459998247000.html</id>
    <published>2016-04-07T03:04:07.000Z</published>
    <updated>2017-02-16T09:12:27.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>环信已经发部了<code>SDK3.x</code>版本，<code>SDK3.x</code>相对于<code>SDK2.x</code>来说是整个进行了重写，<code>API</code>变化还是比较大的，已经熟悉<code>SDK2.x</code>的开发者在使用新的<code>SDK3.x</code>还是会遇到不少问题的，不过还好官方给出了<code>SDK2.x</code>升级<code>SDK3.x</code>指南，已经熟悉<code>SDK2.x</code>开发者可以根据文档了解<code>SDK3.x</code>的变化，新集成的开发者可以直接参考<code>SDK3.x</code>进行集成；<br>这里简单的实现了sdk的初始化以及注册登录和收发消息，不过ui上没有没有去做很好的处理</p>
<h3 id="先看效果图"><a href="#先看效果图" class="headerlink" title="先看效果图"></a>先看效果图</h3><p><img src="http://lzan13.qiniudn.com/blog/uploads/images/2016/4/ec-demo.gif" alt="ec-demo"></p>
<h3 id="提供一些地址"><a href="#提供一些地址" class="headerlink" title="提供一些地址"></a>提供一些地址</h3><ul>
<li><p>当前项目地址，可以直接 clone 运行<br><a href="https://github.com/lzan13/EaseChat" target="_blank" rel="external">EaseChat Github</a>  </p>
</li>
<li><p>AndroidStudio下载<br><a href="http://tools.android.com/download/studio/builds/2-0" target="_blank" rel="external">Android官方下载</a><br><a href="http://androiddevtools.cn/" target="_blank" rel="external">国内提供 AndroidDevTools</a>  </p>
</li>
<li><p>模拟器 Genymotion下载<br><a href="http://genymotion.com/" target="_blank" rel="external">Genymotion 官网</a>  </p>
</li>
<li><p>环信官方文档<br><a href="http://docs.easemob.com/im/start" target="_blank" rel="external">SDK3.x 文档</a><br><a href="http://www.easemob.com/apidoc/android/chat3.0/annotated.html" target="_blank" rel="external">SDK3.x API 文档</a><br><a href="http://docs.easemob.com/im/200androidcleintintegration/140upgradetov30" target="_blank" rel="external">SDK2.x 升级 SDK3.x 文档</a>  </p>
</li>
</ul>
<h3 id="说下我当前开发环境"><a href="#说下我当前开发环境" class="headerlink" title="说下我当前开发环境"></a>说下我当前开发环境</h3><p>这里并不是一定要按照我的配置来，只是说下当前项目开发运行的环境，如果你的开发环境不同可能需要自己修改下项目配置<code>build.gradle</code>文件</p>
<blockquote>
<p>AndroidStudio 2.0<br>Gradle 2.10（跟随AndroidStudio 一起更新）<br>Android SDK Tool 25.1.1<br>Android Build-tools 23.0.2<br>Android Support 最新<br>Genymotion 2.6  </p>
</blockquote>
<p>如果你还是用的<code>Eclipse</code>，可以下载<code>AndroidStudio</code>尝试下，如果你上不了<code>Android</code>官网，不懂怎么翻墙可以找下国内开发提供的一些地址</p>
<h3 id="开始集成"><a href="#开始集成" class="headerlink" title="开始集成"></a>开始集成</h3><p>这次要实现 <code>SDK的初始化</code>、<code>SDK端的注册登录</code>、<code>消息的发送和监听</code>这三步</p>
<h4 id="SDK的初始化"><a href="#SDK的初始化" class="headerlink" title="SDK的初始化"></a>SDK的初始化</h4><p>这个初始化时在Application里进行的，这里定义了一个方法去初始化环信的SDK，并在其中进行了一些设置<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.easechat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.ActivityManager;</div><div class="line"><span class="keyword">import</span> android.app.Application;</div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMClient;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMOptions;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Iterator;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by lz on 2016/4/16.</div><div class="line"> * 项目的 Application类，做一些项目的初始化操作，比如sdk的初始化等</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ECApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 上下文菜单</span></div><div class="line">    <span class="keyword">private</span> Context mContext;</div><div class="line"></div><div class="line">    <span class="comment">// 记录是否已经初始化</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isInit = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate();</div><div class="line">        mContext = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">        <span class="comment">// 初始化环信SDK</span></div><div class="line">        initEasemob();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     *</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initEasemob</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 获取当前进程 id 并取得进程名</span></div><div class="line">        <span class="keyword">int</span> pid = android.os.Process.myPid();</div><div class="line">        String processAppName = getAppName(pid);</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * 如果app启用了远程的service，此application:onCreate会被调用2次</div><div class="line">         * 为了防止环信SDK被初始化2次，加此判断会保证SDK被初始化1次</div><div class="line">         * 默认的app会在以包名为默认的process name下运行，如果查到的process name不是app的process name就立即返回</div><div class="line">         */</div><div class="line">        <span class="keyword">if</span> (processAppName == <span class="keyword">null</span> || !processAppName.equalsIgnoreCase(mContext.getPackageName())) &#123;</div><div class="line">            <span class="comment">// 则此application的onCreate 是被service 调用的，直接返回</span></div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (isInit) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * SDK初始化的一些配置</div><div class="line">         * 关于 EMOptions 可以参考官方的 API 文档</div><div class="line">         * http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1chat_1_1_e_m_options.html</div><div class="line">         */</div><div class="line">        EMOptions options = <span class="keyword">new</span> EMOptions();</div><div class="line">        <span class="comment">// 设置Appkey，如果配置文件已经配置，这里可以不用设置</span></div><div class="line">        <span class="comment">// options.setAppKey("lzan13#hxsdkdemo");</span></div><div class="line">        <span class="comment">// 设置自动登录</span></div><div class="line">        options.setAutoLogin(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置是否需要发送已读回执</span></div><div class="line">        options.setRequireAck(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置是否需要发送回执，TODO 这个暂时有bug，上层收不到发送回执</span></div><div class="line">        options.setRequireDeliveryAck(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置是否需要服务器收到消息确认</span></div><div class="line">        options.setRequireServerAck(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 收到好友申请是否自动同意，如果是自动同意就不会收到好友请求的回调，因为sdk会自动处理，默认为true</span></div><div class="line">        options.setAcceptInvitationAlways(<span class="keyword">false</span>);</div><div class="line">        <span class="comment">// 设置是否自动接收加群邀请，如果设置了当收到群邀请会自动同意加入</span></div><div class="line">        options.setAutoAcceptGroupInvitation(<span class="keyword">false</span>);</div><div class="line">        <span class="comment">// 设置（主动或被动）退出群组时，是否删除群聊聊天记录</span></div><div class="line">        options.setDeleteMessagesAsExitGroup(<span class="keyword">false</span>);</div><div class="line">        <span class="comment">// 设置是否允许聊天室的Owner 离开并删除聊天室的会话</span></div><div class="line">        options.allowChatroomOwnerLeave(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置google GCM推送id，国内可以不用设置</span></div><div class="line">        <span class="comment">// options.setGCMNumber(MLConstants.ML_GCM_NUMBER);</span></div><div class="line">        <span class="comment">// 设置集成小米推送的appid和appkey</span></div><div class="line">        <span class="comment">// options.setMipushConfig(MLConstants.ML_MI_APP_ID, MLConstants.ML_MI_APP_KEY);</span></div><div class="line"></div><div class="line">        <span class="comment">// 调用初始化方法初始化sdk</span></div><div class="line">        EMClient.getInstance().init(mContext, options);</div><div class="line"></div><div class="line">        <span class="comment">// 设置开启debug模式</span></div><div class="line">        EMClient.getInstance().setDebugMode(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">        <span class="comment">// 设置初始化已经完成</span></div><div class="line">        isInit = <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据Pid获取当前进程的名字，一般就是当前app的包名</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> pid 进程的id</div><div class="line">     * <span class="doctag">@return</span> 返回进程的名字</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getAppName</span><span class="params">(<span class="keyword">int</span> pid)</span> </span>&#123;</div><div class="line">        String processName = <span class="keyword">null</span>;</div><div class="line">        ActivityManager activityManager = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);</div><div class="line">        List list = activityManager.getRunningAppProcesses();</div><div class="line">        Iterator i = list.iterator();</div><div class="line">        <span class="keyword">while</span> (i.hasNext()) &#123;</div><div class="line">            ActivityManager.RunningAppProcessInfo info = (ActivityManager.RunningAppProcessInfo) (i.next());</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (info.pid == pid) &#123;</div><div class="line">                    <span class="comment">// 根据进程的信息获取当前进程的名字</span></div><div class="line">                    processName = info.processName;</div><div class="line">                    <span class="comment">// 返回当前进程名</span></div><div class="line">                    <span class="keyword">return</span> processName;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 没有匹配的项，返回为null</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h4><p>app启动后默认会进入到<code>ECMainActivity</code>，不过在主界面会先判断一下是否登录成功过，如果没有，就会跳转到登录几面，然后我们调用登录的时候，在登录方法的<code>onSuccess()</code>回调中我们进行了界面的跳转，跳转到主界面，在主界面我们可以发起回话；<br>看下主界面的详细代码实现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.easechat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.text.TextUtils;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.hyphenate.EMCallBack;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMClient;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ECMainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 发起聊天 username 输入框</span></div><div class="line">    <span class="keyword">private</span> EditText mChatIdEdit;</div><div class="line">    <span class="comment">// 发起聊天</span></div><div class="line">    <span class="keyword">private</span> Button mStartChatBtn;</div><div class="line">    <span class="comment">// 退出登录</span></div><div class="line">    <span class="keyword">private</span> Button mSignOutBtn;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line"></div><div class="line">        <span class="comment">// 判断sdk是否登录成功过，并没有退出和被踢，否则跳转到登陆界面</span></div><div class="line">        <span class="keyword">if</span> (!EMClient.getInstance().isLoggedInBefore()) &#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(ECMainActivity.<span class="keyword">this</span>, ECLoginActivity.class);</div><div class="line">            startActivity(intent);</div><div class="line">            finish();</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化界面</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        mChatIdEdit = (EditText) findViewById(R.id.ec_edit_chat_id);</div><div class="line"></div><div class="line">        mStartChatBtn = (Button) findViewById(R.id.ec_btn_start_chat);</div><div class="line">        mStartChatBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="comment">// 获取我们发起聊天的者的username</span></div><div class="line">                String chatId = mChatIdEdit.getText().toString().trim();</div><div class="line">                <span class="keyword">if</span> (!TextUtils.isEmpty(chatId)) &#123;</div><div class="line">                    <span class="comment">// 获取当前登录用户的 username</span></div><div class="line">                    String currUsername = EMClient.getInstance().getCurrentUser();</div><div class="line">                    <span class="keyword">if</span> (chatId.equals(currUsername)) &#123;</div><div class="line">                        Toast.makeText(ECMainActivity.<span class="keyword">this</span>, <span class="string">"不能和自己聊天"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                        <span class="keyword">return</span>;</div><div class="line">                    &#125;</div><div class="line">                    <span class="comment">// 跳转到聊天界面，开始聊天</span></div><div class="line">                    Intent intent = <span class="keyword">new</span> Intent(ECMainActivity.<span class="keyword">this</span>, ECChatActivity.class);</div><div class="line">                    intent.putExtra(<span class="string">"ec_chat_id"</span>, chatId);</div><div class="line">                    startActivity(intent);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Toast.makeText(ECMainActivity.<span class="keyword">this</span>, <span class="string">"Username 不能为空"</span>, Toast.LENGTH_LONG).show();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        mSignOutBtn = (Button) findViewById(R.id.ec_btn_sign_out);</div><div class="line">        mSignOutBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                signOut();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 退出登录</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signOut</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 调用sdk的退出登录方法，第一个参数表示是否解绑推送的token，没有使用推送或者被踢都要传false</span></div><div class="line">        EMClient.getInstance().logout(<span class="keyword">false</span>, <span class="keyword">new</span> EMCallBack() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">                Log.i(<span class="string">"lzan13"</span>, <span class="string">"logout success"</span>);</div><div class="line">                <span class="comment">// 调用退出成功，结束app</span></div><div class="line">                finish();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line">                Log.i(<span class="string">"lzan13"</span>, <span class="string">"logout error "</span> + i + <span class="string">" - "</span> + s);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="SDK端的注册登录"><a href="#SDK端的注册登录" class="headerlink" title="SDK端的注册登录"></a>SDK端的注册登录</h4><p>SDK初始化做完之后，就是需要进行环信的登录了，登录了才能使用环信的功能，才能收发消息，有不少人经常问，不注册账户能使用么，这是聊天sdk，不注册账户你拿什么聊天呢！<br>登录调用<code>EMClient.getInstance().login(username, password, callback);</code>此方法是一个异步方法，所以需要设置<code>EMCallback</code>回调来接收登录结果；<br>注册调用<code>EMClient.getInstance().createAccount(username, password);</code>此方法是同步方法，需要自己创建新线程去调用，不能放在UI线程直接调用；<br>因为只是个简单的demo，这边把登录和注册都卸载了LoginActivity类里，这个方法中对调用环信sdk的方法返回错误值做了一些判断，具体错误信息可以参考官方文档：<br><a href="http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1_e_m_error.html" target="_blank" rel="external">环信SDK3.x EMError</a></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.easechat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.ProgressDialog;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.hyphenate.EMCallBack;</div><div class="line"><span class="keyword">import</span> com.hyphenate.EMError;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMClient;</div><div class="line"><span class="keyword">import</span> com.hyphenate.exceptions.HyphenateException;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ECLoginActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 弹出框</span></div><div class="line">    <span class="keyword">private</span> ProgressDialog mDialog;</div><div class="line"></div><div class="line">    <span class="comment">// username 输入框</span></div><div class="line">    <span class="keyword">private</span> EditText mUsernameEdit;</div><div class="line">    <span class="comment">// 密码输入框</span></div><div class="line">    <span class="keyword">private</span> EditText mPasswordEdit;</div><div class="line"></div><div class="line">    <span class="comment">// 注册按钮</span></div><div class="line">    <span class="keyword">private</span> Button mSignUpBtn;</div><div class="line">    <span class="comment">// 登录按钮</span></div><div class="line">    <span class="keyword">private</span> Button mSignInBtn;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_login);</div><div class="line"></div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化界面控件</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        mUsernameEdit = (EditText) findViewById(R.id.ec_edit_username);</div><div class="line">        mPasswordEdit = (EditText) findViewById(R.id.ec_edit_password);</div><div class="line"></div><div class="line">        mSignUpBtn = (Button) findViewById(R.id.ec_btn_sign_up);</div><div class="line">        mSignUpBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                signUp();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        mSignInBtn = (Button) findViewById(R.id.ec_btn_sign_in);</div><div class="line">        mSignInBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                signIn();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 注册方法</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signUp</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 注册是耗时过程，所以要显示一个dialog来提示下用户</span></div><div class="line">        mDialog = <span class="keyword">new</span> ProgressDialog(<span class="keyword">this</span>);</div><div class="line">        mDialog.setMessage(<span class="string">"注册中，请稍后..."</span>);</div><div class="line">        mDialog.show();</div><div class="line"></div><div class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    String username = mUsernameEdit.getText().toString().trim();</div><div class="line">                    String password = mPasswordEdit.getText().toString().trim();</div><div class="line">                    EMClient.getInstance().createAccount(username, password);</div><div class="line">                    runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                            <span class="keyword">if</span> (!ECLoginActivity.<span class="keyword">this</span>.isFinishing()) &#123;</div><div class="line">                                mDialog.dismiss();</div><div class="line">                            &#125;</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"注册成功"</span>, Toast.LENGTH_LONG).show();</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> HyphenateException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                    runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                            <span class="keyword">if</span> (!ECLoginActivity.<span class="keyword">this</span>.isFinishing()) &#123;</div><div class="line">                                mDialog.dismiss();</div><div class="line">                            &#125;</div><div class="line">                            <span class="comment">/**</span></div><div class="line">                             * 关于错误码可以参考官方api详细说明</div><div class="line">                             * http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1_e_m_error.html</div><div class="line">                             */</div><div class="line">                            <span class="keyword">int</span> errorCode = e.getErrorCode();</div><div class="line">                            String message = e.getMessage();</div><div class="line">                            Log.d(<span class="string">"lzan13"</span>, String.format(<span class="string">"sign up - errorCode:%d, errorMsg:%s"</span>, errorCode, e.getMessage()));</div><div class="line">                            <span class="keyword">switch</span> (errorCode) &#123;</div><div class="line">                            <span class="comment">// 网络错误</span></div><div class="line">                            <span class="keyword">case</span> EMError.NETWORK_ERROR:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"网络错误 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="comment">// 用户已存在</span></div><div class="line">                            <span class="keyword">case</span> EMError.USER_ALREADY_EXIST:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"用户已存在 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="comment">// 参数不合法，一般情况是username 使用了uuid导致，不能使用uuid注册</span></div><div class="line">                            <span class="keyword">case</span> EMError.USER_ILLEGAL_ARGUMENT:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"参数不合法，一般情况是username 使用了uuid导致，不能使用uuid注册 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="comment">// 服务器未知错误</span></div><div class="line">                            <span class="keyword">case</span> EMError.SERVER_UNKNOWN_ERROR:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"服务器未知错误 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="keyword">case</span> EMError.USER_REG_FAILED:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"账户注册失败 code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            <span class="keyword">default</span>:</div><div class="line">                                Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"ml_sign_up_failed code: "</span> + errorCode + <span class="string">", message:"</span> + message, Toast.LENGTH_LONG).show();</div><div class="line">                                <span class="keyword">break</span>;</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;).start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 登录方法</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">signIn</span><span class="params">()</span> </span>&#123;</div><div class="line">        mDialog = <span class="keyword">new</span> ProgressDialog(<span class="keyword">this</span>);</div><div class="line">        mDialog.setMessage(<span class="string">"正在登陆，请稍后..."</span>);</div><div class="line">        mDialog.show();</div><div class="line">        String username = mUsernameEdit.getText().toString().trim();</div><div class="line">        String password = mPasswordEdit.getText().toString().trim();</div><div class="line">        EMClient.getInstance().login(username, password, <span class="keyword">new</span> EMCallBack() &#123;</div><div class="line">            <span class="comment">/**</span></div><div class="line">             * 登陆成功的回调</div><div class="line">             */</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">                runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        mDialog.dismiss();</div><div class="line"></div><div class="line">                        <span class="comment">// 加载所有会话到内存</span></div><div class="line">                        EMClient.getInstance().chatManager().loadAllConversations();</div><div class="line">                        <span class="comment">// 加载所有群组到内存，如果使用了群组的话</span></div><div class="line">                        <span class="comment">// EMClient.getInstance().groupManager().loadAllGroups();</span></div><div class="line"></div><div class="line">                        <span class="comment">// 登录成功跳转界面</span></div><div class="line">                        Intent intent = <span class="keyword">new</span> Intent(ECLoginActivity.<span class="keyword">this</span>, ECMainActivity.class);</div><div class="line">                        startActivity(intent);</div><div class="line">                        finish();</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">/**</span></div><div class="line">             * 登陆错误的回调</div><div class="line">             * <span class="doctag">@param</span> i</div><div class="line">             * <span class="doctag">@param</span> s</div><div class="line">             */</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> i, <span class="keyword">final</span> String s)</span> </span>&#123;</div><div class="line">                runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        mDialog.dismiss();</div><div class="line">                        Log.d(<span class="string">"lzan13"</span>, <span class="string">"登录失败 Error code:"</span> + i + <span class="string">", message:"</span> + s);</div><div class="line">                        <span class="comment">/**</span></div><div class="line">                         * 关于错误码可以参考官方api详细说明</div><div class="line">                         * http://www.easemob.com/apidoc/android/chat3.0/classcom_1_1hyphenate_1_1_e_m_error.html</div><div class="line">                         */</div><div class="line">                        <span class="keyword">switch</span> (i) &#123;</div><div class="line">                        <span class="comment">// 网络异常 2</span></div><div class="line">                        <span class="keyword">case</span> EMError.NETWORK_ERROR:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"网络错误 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 无效的用户名 101</span></div><div class="line">                        <span class="keyword">case</span> EMError.INVALID_USER_NAME:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"无效的用户名 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 无效的密码 102</span></div><div class="line">                        <span class="keyword">case</span> EMError.INVALID_PASSWORD:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"无效的密码 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 用户认证失败，用户名或密码错误 202</span></div><div class="line">                        <span class="keyword">case</span> EMError.USER_AUTHENTICATION_FAILED:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"用户认证失败，用户名或密码错误 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 用户不存在 204</span></div><div class="line">                        <span class="keyword">case</span> EMError.USER_NOT_FOUND:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"用户不存在 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 无法访问到服务器 300</span></div><div class="line">                        <span class="keyword">case</span> EMError.SERVER_NOT_REACHABLE:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"无法访问到服务器 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 等待服务器响应超时 301</span></div><div class="line">                        <span class="keyword">case</span> EMError.SERVER_TIMEOUT:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"等待服务器响应超时 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 服务器繁忙 302</span></div><div class="line">                        <span class="keyword">case</span> EMError.SERVER_BUSY:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"服务器繁忙 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="comment">// 未知 Server 异常 303 一般断网会出现这个错误</span></div><div class="line">                        <span class="keyword">case</span> EMError.SERVER_UNKNOWN_ERROR:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"未知的服务器异常 code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="keyword">default</span>:</div><div class="line">                            Toast.makeText(ECLoginActivity.<span class="keyword">this</span>, <span class="string">"ml_sign_in_failed code: "</span> + i + <span class="string">", message:"</span> + s, Toast.LENGTH_LONG).show();</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="消息的发送和监听"><a href="#消息的发送和监听" class="headerlink" title="消息的发送和监听"></a>消息的发送和监听</h4><p>实现消息的接收需要添加<code>EMMessageListener</code>消息监听接口，我们在需要监听的地方要实现这个接口，并实现接口里边的几个回调方法：  </p>
<blockquote>
<p>onMessageReceived(List<emmessage> list)新消息的回调<br>onCmdMessageReceived(List<emmessage> list)新的透传消息回调<br>onMessageReadAckReceived(List<emmessage> list)消息已读回调<br>onMessageDeliveryAckReceived(List<emmessage> list)消息已发送回调<br>onMessageChanged(EMMessage message, Object object)消息状态改变回调  </emmessage></emmessage></emmessage></emmessage></p>
</blockquote>
<p>下边是聊天界面消息监听与发送的完整实现，代码注释比较详细，不再一一解释<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.easechat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.os.Handler;</div><div class="line"><span class="keyword">import</span> android.os.Message;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.text.TextUtils;</div><div class="line"><span class="keyword">import</span> android.text.method.ScrollingMovementMethod;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.hyphenate.EMCallBack;</div><div class="line"><span class="keyword">import</span> com.hyphenate.EMMessageListener;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMClient;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMCmdMessageBody;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMConversation;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMMessage;</div><div class="line"><span class="keyword">import</span> com.hyphenate.chat.EMTextMessageBody;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ECChatActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">EMMessageListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 聊天信息输入框</span></div><div class="line">    <span class="keyword">private</span> EditText mInputEdit;</div><div class="line">    <span class="comment">// 发送按钮</span></div><div class="line">    <span class="keyword">private</span> Button mSendBtn;</div><div class="line"></div><div class="line">    <span class="comment">// 显示内容的 TextView</span></div><div class="line">    <span class="keyword">private</span> TextView mContentText;</div><div class="line"></div><div class="line">    <span class="comment">// 消息监听器</span></div><div class="line">    <span class="keyword">private</span> EMMessageListener mMessageListener;</div><div class="line">    <span class="comment">// 当前聊天的 ID</span></div><div class="line">    <span class="keyword">private</span> String mChatId;</div><div class="line">    <span class="comment">// 当前会话对象</span></div><div class="line">    <span class="keyword">private</span> EMConversation mConversation;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_chat);</div><div class="line"></div><div class="line">        <span class="comment">// 获取当前会话的username(如果是群聊就是群id)</span></div><div class="line">        mChatId = getIntent().getStringExtra(<span class="string">"ec_chat_id"</span>);</div><div class="line">        mMessageListener = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">        initView();</div><div class="line">        initConversation();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化界面</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        mInputEdit = (EditText) findViewById(R.id.ec_edit_message_input);</div><div class="line">        mSendBtn = (Button) findViewById(R.id.ec_btn_send);</div><div class="line">        mContentText = (TextView) findViewById(R.id.ec_text_content);</div><div class="line">        <span class="comment">// 设置textview可滚动，需配合xml布局设置</span></div><div class="line">        mContentText.setMovementMethod(<span class="keyword">new</span> ScrollingMovementMethod());</div><div class="line"></div><div class="line">        <span class="comment">// 设置发送按钮的点击事件</span></div><div class="line">        mSendBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                String content = mInputEdit.getText().toString().trim();</div><div class="line">                <span class="keyword">if</span> (!TextUtils.isEmpty(content)) &#123;</div><div class="line">                    mInputEdit.setText(<span class="string">""</span>);</div><div class="line">                    <span class="comment">// 创建一条新消息，第一个参数为消息内容，第二个为接受者username</span></div><div class="line">                    EMMessage message = EMMessage.createTxtSendMessage(content, mChatId);</div><div class="line">                    <span class="comment">// 将新的消息内容和时间加入到下边</span></div><div class="line">                    mContentText.setText(mContentText.getText() + <span class="string">"\n"</span> + content + <span class="string">" -&gt; "</span> + message.getMsgTime());</div><div class="line">                    <span class="comment">// 调用发送消息的方法</span></div><div class="line">                    EMClient.getInstance().chatManager().sendMessage(message);</div><div class="line">                    <span class="comment">// 为消息设置回调</span></div><div class="line">                    message.setMessageStatusCallback(<span class="keyword">new</span> EMCallBack() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">                            <span class="comment">// 消息发送成功，打印下日志，正常操作应该去刷新ui</span></div><div class="line">                            Log.i(<span class="string">"lzan13"</span>, <span class="string">"send message on success"</span>);</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line">                            <span class="comment">// 消息发送失败，打印下失败的信息，正常操作应该去刷新ui</span></div><div class="line">                            Log.i(<span class="string">"lzan13"</span>, <span class="string">"send message on error "</span> + i + <span class="string">" - "</span> + s);</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">int</span> i, String s)</span> </span>&#123;</div><div class="line">                            <span class="comment">// 消息发送进度，一般只有在发送图片和文件等消息才会有回调，txt不回调</span></div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化会话对象，并且根据需要加载更多消息</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initConversation</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line">         * 初始化会话对象，这里有三个参数么，</div><div class="line">         * 第一个表示会话的当前聊天的 useranme 或者 groupid</div><div class="line">         * 第二个是绘画类型可以为空</div><div class="line">         * 第三个表示如果会话不存在是否创建</div><div class="line">         */</div><div class="line">        mConversation = EMClient.getInstance().chatManager().getConversation(mChatId, <span class="keyword">null</span>, <span class="keyword">true</span>);</div><div class="line">        <span class="comment">// 设置当前会话未读数为 0</span></div><div class="line">        mConversation.markAllMessagesAsRead();</div><div class="line">        <span class="keyword">int</span> count = mConversation.getAllMessages().size();</div><div class="line">        <span class="keyword">if</span> (count &lt; mConversation.getAllMsgCount() &amp;&amp; count &lt; <span class="number">20</span>) &#123;</div><div class="line">            <span class="comment">// 获取已经在列表中的最上边的一条消息id</span></div><div class="line">            String msgId = mConversation.getAllMessages().get(<span class="number">0</span>).getMsgId();</div><div class="line">            <span class="comment">// 分页加载更多消息，需要传递已经加载的消息的最上边一条消息的id，以及需要加载的消息的条数</span></div><div class="line">            mConversation.loadMoreMsgFromDB(msgId, <span class="number">20</span> - count);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 打开聊天界面获取最后一条消息内容并显示</span></div><div class="line">        <span class="keyword">if</span> (mConversation.getAllMessages().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            EMMessage messge = mConversation.getLastMessage();</div><div class="line">            EMTextMessageBody body = (EMTextMessageBody) messge.getBody();</div><div class="line">            <span class="comment">// 将消息内容和时间显示出来</span></div><div class="line">            mContentText.setText(body.getMessage() + <span class="string">" - "</span> + mConversation.getLastMessage().getMsgTime());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 自定义实现Handler，主要用于刷新UI操作</div><div class="line">     */</div><div class="line">    Handler mHandler = <span class="keyword">new</span> Handler() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">switch</span> (msg.what) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">                EMMessage message = (EMMessage) msg.obj;</div><div class="line">                <span class="comment">// 这里只是简单的demo，也只是测试文字消息的收发，所以直接将body转为EMTextMessageBody去获取内容</span></div><div class="line">                EMTextMessageBody body = (EMTextMessageBody) message.getBody();</div><div class="line">                <span class="comment">// 将新的消息内容和时间加入到下边</span></div><div class="line">                mContentText.setText(mContentText.getText() + <span class="string">"\n"</span> + body.getMessage() + <span class="string">" &lt;- "</span> + message.getMsgTime());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onResume();</div><div class="line">        <span class="comment">// 添加消息监听</span></div><div class="line">        EMClient.getInstance().chatManager().addMessageListener(mMessageListener);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onStop();</div><div class="line">        <span class="comment">// 移除消息监听</span></div><div class="line">        EMClient.getInstance().chatManager().removeMessageListener(mMessageListener);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * --------------------------------- Message Listener -------------------------------------</div><div class="line">     * 环信消息监听主要方法</div><div class="line">     */</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 收到新消息</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> list 收到的新消息集合</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageReceived</span><span class="params">(List&lt;EMMessage&gt; list)</span> </span>&#123;</div><div class="line">        <span class="comment">// 循环遍历当前收到的消息</span></div><div class="line">        <span class="keyword">for</span> (EMMessage message : list) &#123;</div><div class="line">            <span class="keyword">if</span> (message.getFrom().equals(mChatId)) &#123;</div><div class="line">                <span class="comment">// 设置消息为已读</span></div><div class="line">                mConversation.markMessageAsRead(message.getMsgId());</div><div class="line"></div><div class="line">                <span class="comment">// 因为消息监听回调这里是非ui线程，所以要用handler去更新ui</span></div><div class="line">                Message msg = mHandler.obtainMessage();</div><div class="line">                msg.what = <span class="number">0</span>;</div><div class="line">                msg.obj = message;</div><div class="line">                mHandler.sendMessage(msg);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// 如果消息不是当前会话的消息发送通知栏通知</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 收到新的 CMD 消息</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> list</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCmdMessageReceived</span><span class="params">(List&lt;EMMessage&gt; list)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</div><div class="line">            <span class="comment">// 透传消息</span></div><div class="line">            EMMessage cmdMessage = list.get(i);</div><div class="line">            EMCmdMessageBody body = (EMCmdMessageBody) cmdMessage.getBody();</div><div class="line">            Log.i(<span class="string">"lzan13"</span>, body.action());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 收到新的已读回执</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> list 收到消息已读回执</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageReadAckReceived</span><span class="params">(List&lt;EMMessage&gt; list)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 收到新的发送回执</div><div class="line">     * TODO 无效 暂时有bug</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> list 收到发送回执的消息集合</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageDeliveryAckReceived</span><span class="params">(List&lt;EMMessage&gt; list)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 消息的状态改变</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> message 发生改变的消息</div><div class="line">     * <span class="doctag">@param</span> object  包含改变的消息</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageChanged</span><span class="params">(EMMessage message, Object object)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="界面布局"><a href="#界面布局" class="headerlink" title="界面布局"></a>界面布局</h4><p>界面的实现也是非常简单，这里直接贴一下：<br>activity_main.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"net.melove.demo.easechat.ECMainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_edit_chat_id"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:hint</span>=<span class="string">"对方的username"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_start_chat"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"发起聊天"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_sign_out"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"退出登录"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>activity_login.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"net.melove.demo.easechat.ECLoginActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_edit_username"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:hint</span>=<span class="string">"username"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_edit_password"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:hint</span>=<span class="string">"password"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_sign_up"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"注册"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_sign_in"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"登录"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>activity_chat.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"net.melove.demo.easechat.ECChatActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!--输入框--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ec_layout_input"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_btn_send"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"Send"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/ec_edit_message_input"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:layout_toLeftOf</span>=<span class="string">"@id/ec_btn_send"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--展示消息内容--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ec_text_content"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_above</span>=<span class="string">"@id/ec_layout_input"</span></div><div class="line">        <span class="attr">android:maxLines</span>=<span class="string">"15"</span></div><div class="line">        <span class="attr">android:scrollbars</span>=<span class="string">"vertical"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="别忘了配置文件"><a href="#别忘了配置文件" class="headerlink" title="别忘了配置文件"></a>别忘了配置文件</h4><p>最后我们需要配置一些权限，我们的代码才能很好的工作<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">package</span>=<span class="string">"net.melove.demo.easechat"</span></span></div><div class="line">          <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</div><div class="line">    <span class="comment">&lt;!-- 项目权限 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 相机 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CAMERA"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 录音 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECORD_AUDIO"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 震动 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.VIBRATE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 网络 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 访问网络状态 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 访问WIFI状态 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 写入外部存储 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 访问精确定位 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 修改音频设置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.MODIFY_AUDIO_SETTINGS"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 读取手机状态 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 允许读写系统设置项 使用设置时需要 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_SETTINGS"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 读取启动设置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.android.launcher.permission.READ_SETTINGS"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--非必需权限--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 开机自启动 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.GET_TASKS"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 安装卸载文件系统 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 改变WIFI状态 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 读取描述文件 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.READ_PROFILE"/&gt;--&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 读取联系人 --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;uses-permission android:name="android.permission.READ_CONTACTS"/&gt;--&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 连续广播（允许一个程序收到广播后快速收到下一个广播） --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BROADCAST_STICKY"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">application</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">".ECApplication"</span></div><div class="line">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".ECMainActivity"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span>/&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".ECLoginActivity"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">".ECChatActivity"</span></div><div class="line">            <span class="attr">android:windowSoftInputMode</span>=<span class="string">"adjustResize|stateHidden"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 设置环信应用的 appkey 换成自己的--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"EASEMOB_APPKEY"</span></div><div class="line">            <span class="attr">android:value</span>=<span class="string">"lzan13#hxsdkdemo"</span>/&gt;</div><div class="line">        <span class="comment">&lt;!-- 声明sdk所需的service SDK核心功能--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">service</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"com.hyphenate.chat.EMChatService"</span></div><div class="line">            <span class="attr">android:exported</span>=<span class="string">"true"</span>/&gt;</div><div class="line">        <span class="comment">&lt;!-- 声明sdk所需的receiver --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"com.hyphenate.chat.EMMonitorReceiver"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.PACKAGE_REMOVED"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"package"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 可选filter --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.BOOT_COMPLETED"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.USER_PRESENT"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>代码结束，Coding不止！Coding - Coding - Coding —<br>OK了，一个简单的注册登录以及收发消息的小demo就算完成了，可以用自己的环境编译运行下试试</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;环信已经发部了&lt;code&gt;SDK3.x&lt;/code&gt;版本，&lt;code&gt;SDK3.x&lt;/code&gt;相对于&lt;code&gt;SDK2.x&lt;/code&gt;
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="Easemob" scheme="http://melove.net/tags/Easemob/"/>
    
      <category term="SDK" scheme="http://melove.net/tags/SDK/"/>
    
      <category term="Chat" scheme="http://melove.net/tags/Chat/"/>
    
  </entry>
  
  <entry>
    <title>Git命令行将原作者的代码pull到本地并合并</title>
    <link href="http://melove.net/2016/02/git-pull-author-pull-request-1456112411000.html"/>
    <id>http://melove.net/2016/02/git-pull-author-pull-request-1456112411000.html</id>
    <published>2016-02-22T03:40:11.000Z</published>
    <updated>2017-02-16T09:39:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在提交自己修改的代码到原作者的项目时遇到了一些问题，原作者最近更新比较频繁，导致我提交的代码有了冲突，所以要自己先把原作者的进行<code>pull</code>下来，然后解决冲突之后才能提交，既然要解决冲突，首先肯定是要把原作者的代码给<code>pull</code>下来，这里记录下更新提交的过程<br>首先要给当前的版本库添加原作者的<code>remote</code>，因为我是<code>fork</code>并<code>clone</code>自己的仓库进行修改，当时是没有添加的原作者的<code>remote</code>的<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add easemob https://github.com/easemob/easeui.git</div></pre></td></tr></table></figure></p>
<p>然后运行命令去<code>pull</code>下来原作者的代码<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull easemob dev</div></pre></td></tr></table></figure></p>
<p>此命令<code>pull</code>下来的原作者代码会自动合并到当前分支，合并的过程会打印一些详细的信息，比如是否有冲突，然后要做的就是去代码里找到这些冲突的地方，把冲突给解决掉；当我们<code>pull</code>完了之后，如果有冲突，在命令行的分支那里会提示<code>MERGING</code>，修改了之后我们要<code>commit</code>下才行，操作之后就正常了，然后我们就可以愉快的<code>push</code>自己的代码，并向原作者提交<code>pull request</code>了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在提交自己修改的代码到原作者的项目时遇到了一些问题，原作者最近更新比较频繁，导致我提交的代码有了冲突，所以要自己先把原作者的进行&lt;code&gt;pull&lt;/code&gt;下来，然后解决冲突之后才能提交，既然要解决冲突，首先肯定是要把原作者的代码给&lt;code&gt;pull&lt;/code
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
    
      <category term="Git" scheme="http://melove.net/tags/Git/"/>
    
      <category term="Branch" scheme="http://melove.net/tags/Branch/"/>
    
      <category term="PullRequest" scheme="http://melove.net/tags/PullRequest/"/>
    
  </entry>
  
  <entry>
    <title>从Wordpress转战到github.io</title>
    <link href="http://melove.net/2016/02/blog-migrate-to-hexo-1455624518000.html"/>
    <id>http://melove.net/2016/02/blog-migrate-to-hexo-1455624518000.html</id>
    <published>2016-02-16T12:08:38.000Z</published>
    <updated>2017-02-16T09:13:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近上班老加班，好久没有更新自己的博客了，不过笔记还是经常在记录的，毕竟有了问题和新的知识大脑不能完全记住啊，最新欢的还是<code>Evernote</code>，扯远了<br>最近没写博客也有一些其他原因，因为最近自己服务器上用来给wordpress存储数据的mysql数据库老是崩掉，让我经常重启服务器，感觉不想用他了，而且看到<code>Github</code>上的大牛们都是用<code>Github.io</code>来写博客，有一种想装一把的冲动 ^_^<br><code>Google</code>了N久（不要问我为什么被墙了还用它，任性），开始下手，把目标定在了<code>Hexo</code>上，博客从<code>Wordpress</code>迁移还是挺坎坷的，毕竟要做的事情不少啊</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近上班老加班，好久没有更新自己的博客了，不过笔记还是经常在记录的，毕竟有了问题和新的知识大脑不能完全记住啊，最新欢的还是&lt;code&gt;Evernote&lt;/code&gt;，扯远了&lt;br&gt;最近没写博客也有一些其他原因，因为最近自己服务器上用来给wordpress存储数据的mysql
    
    </summary>
    
      <category term="碎碎念" scheme="http://melove.net/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="Github" scheme="http://melove.net/tags/Github/"/>
    
      <category term="Blog" scheme="http://melove.net/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://melove.net/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之新版AndroidStudio以及新版sdk开发环境创建新项目可能会出现的一些错误问题</title>
    <link href="http://melove.net/2015/11/android-androidstudio-sdk-project-error-1448156049000.html"/>
    <id>http://melove.net/2015/11/android-androidstudio-sdk-project-error-1448156049000.html</id>
    <published>2015-11-22T01:34:09.000Z</published>
    <updated>2017-02-16T09:00:13.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="首先说下我这边开发的环境："><a href="#首先说下我这边开发的环境：" class="headerlink" title="首先说下我这边开发的环境："></a>首先说下我这边开发的环境：</h3><pre><code>AndroidStudio version：1.4.1
jdk version：1.7.0
SDKTools version：24.4.x
Build-tools version：23.0.1
Compile SDK version：API 22 （5.1）
Minimum SDK version：API 15（4.0.3）
Gradle version：2.4
</code></pre><h3 id="AndroidStudio等工具地址"><a href="#AndroidStudio等工具地址" class="headerlink" title="AndroidStudio等工具地址"></a>AndroidStudio等工具地址</h3><p><a href="http://developer.android.com" target="_blank" rel="external">Android官网</a><br><a href="http://www.androiddevtools.cn" target="_blank" rel="external">国内收集工具 AndroidDevTools</a><br><a href="https://downloads.gradle.org/distributions/gradle-2.4-all.zip" target="_blank" rel="external">gradle v2.4下载（as有时自动下载不成功，所以要自己下载</a><br>关于gradle首次创建项目卡住的问题可以看下这篇文章<a href="http://melove.net/lzan13/develops/android-develop/androidstudio-gradle-down-error-915.html">AndroidStudio 新建及clone项目关于gradle出现的问题</a></p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>这里使用AndroidStudio创建一个空的项目就OK了，<br>打开AndroidStudio 点击Start a new Android Studio project创建新项目</p>
<h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Error:A problem occurred configuring project <span class="string">':app'</span>.</div><div class="line">&gt; Could not download junit.jar (junit:junit:<span class="number">4.12</span>)</div><div class="line">   &gt; Could not get resource <span class="string">'https://jcenter.bintray.com/junit/junit/4.12/junit-4.12.jar'</span>.</div><div class="line">      &gt; Could not GET <span class="string">'https://jcenter.bintray.com/junit/junit/4.12/junit-4.12.jar'</span>.</div><div class="line">         &gt; peer not authenticated </div><div class="line">Error:A problem occurred configuring project <span class="string">':app'</span>.</div><div class="line">&gt; Could not download hamcrest-core.jar (org.hamcrest:hamcrest-core:<span class="number">1.3</span>): No cached version available <span class="keyword">for</span> offline mode</div></pre></td></tr></table></figure>
<p>这个是因为最新的创建项目会使用junit库来进行代码测试，在下载这个库的内容的时候发现他引用了hamcrest这个框架，不过国内下载这个框架的这个接啊日报hamcrest-core.jar不成功，所以会报这个错误，可以把build.gradle里引用的junit给删除或注释</p>
<h4 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">D:\develop\android\workspace\studio\EaseUICustomer\app\build\intermediates\exploded-aar\com.android.support\appcompat-v7\<span class="number">23.1</span>.0\res\values-v23\values-v23.xml</div><div class="line">Error:(<span class="number">2</span>) Error retrieving parent <span class="keyword">for</span> item: No resource found that matches the given name <span class="string">'android:TextAppearance.Material.Widget.Button.Inverse'</span>.</div><div class="line">Error:(<span class="number">2</span>) Error retrieving parent <span class="keyword">for</span> item: No resource found that matches the given name <span class="string">'android:Widget.Material.Button.Colored'</span>.</div><div class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':app:processDebugResources'</span>.</div><div class="line">&gt; com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process <span class="string">'command '</span>D:\develop\android\android_sdk\build-tools\build-tools-<span class="number">23.0</span>.1\aapt.exe<span class="string">''</span> finished with non-zero exit value <span class="number">1</span></div></pre></td></tr></table></figure>
<p>这个是因为创建项目默认使用<code>appcompat-v7</code> <code>23.0.1</code>版本，这个版本好像有问题，手动把这个版本号改下就ok了，改成22.+然后同步 就ok</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;首先说下我这边开发的环境：&quot;&gt;&lt;a href=&quot;#首先说下我这边开发的环境：&quot; class=&quot;headerlink&quot; title=&quot;首先说下我这边开发的环境：&quot;&gt;&lt;/a&gt;首先说下我这边开发的环境：&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;AndroidStudio vers
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="Error" scheme="http://melove.net/tags/Error/"/>
    
      <category term="SDK" scheme="http://melove.net/tags/SDK/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之AndroidStudio一个工程内查看多个项目的实现</title>
    <link href="http://melove.net/2015/11/android-androidstudio-project-module-1448099077000.html"/>
    <id>http://melove.net/2015/11/android-androidstudio-project-module-1448099077000.html</id>
    <published>2015-11-21T09:44:37.000Z</published>
    <updated>2017-02-16T09:12:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在已经有很多人开始使用<code>AndroidStudio</code>开始开发<code>Android</code>了，但是这货有一点儿不好，一个界面只能打开一个项目，当我们在开发自己的项目时，如果想像<code>clipse</code>查看别的<code>demo</code>的代码或者功能，只能再另外打开一个<code>Window</code>新开项目，其实呢<code>AndroidStudio</code>可以在一个项目中导入多个<code>Module</code>，这里以导入环信最新版的几个<code>demo</code>来实现在<code>AndroidStudio</code>中查看多个项目；<br>首先导入3.0的项目，<code>3.0 demo</code>引入了<code>EaseUI</code>库，在导入<code>AndroidStudio</code>的时候会以<code>Module</code>的形式自动导入<code>EaseUI</code>，<code>EaseUI</code>库中放着<code>simpledemo</code>这个小<code>demo</code>，我们先把它剪切出来，和其他的<code>demo</code>放在一起，等下我们就在一个<code>AndroidStudio</code>项目中导入环信的这些全部<code>demo</code><br>首先导入<code>3.0 Demo</code>：<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo000.png" alt="photo000"></p>
<p>因为要导入所有的<code>demo</code>所以给导入的项目重新命名下<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo001.png" alt="photo001"></p>
<p><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo002.png" alt="photo002"></p>
<p>导入完成后就可以开始导入其他项目了，不过想在当前项目中导入其他项目要选择<code>Import Module</code>的方式，下边以导入环信老版本的<code>demo</code>为例<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo003.png" alt="photo003"></p>
<p><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo004"></p>
<p>OK 导入成功，可以看到项目中有三个<code>Module</code>了 <code>easeUI</code>、<code>easeUIDemo</code>、<code>oldDemo</code>，其中<code>oldDemo</code>就是刚才导入的老版本的<code>demo</code>，只是改了个名字<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo005"></p>
<p>然后看下<code>Run/Debug configuration</code>可以发现这里有两个配置项，就说明当前工程内有两个可运行的<code>Android</code>项目<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo006"></p>
<p>下边再导入那个简单的<code>simpledemo</code>看下<br>导入之后看下<code>Project Structure</code>可以看到当前项目有四个<code>Module</code>，一个<code>EaseUI library</code>库，其他三个是<code>Android app</code>项目<code>easeUIDemo</code>和<code>easeUISimpleDemo</code>引用了<code>EaseUI</code>库，<code>oldDemo</code>是老版本直接集成的<code>demo</code><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo007"></p>
<p>可以根据这里的选择来运行不同的<code>module</code>，并且可以在一个工程内查看所有的代码<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/photo004.png" alt="photo008"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在已经有很多人开始使用&lt;code&gt;AndroidStudio&lt;/code&gt;开始开发&lt;code&gt;Android&lt;/code&gt;了，但是这货有一点儿不好，一个界面只能打开一个项目，当我们在开发自己的项目时，如果想像&lt;code&gt;clipse&lt;/code&gt;查看别的&lt;code&gt;dem
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="Module" scheme="http://melove.net/tags/Module/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio导入环信新版EaseUI库问题</title>
    <link href="http://melove.net/2015/11/android-androidstudio-import-easeui-1447854913000.html"/>
    <id>http://melove.net/2015/11/android-androidstudio-import-easeui-1447854913000.html</id>
    <published>2015-11-18T13:55:13.000Z</published>
    <updated>2017-02-16T09:12:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>环信大牛最新封装了一个供开发者直接使用的<code>UI</code>库<code>EaseUI</code>，这个可以让大家快速的进行集成环信的<code>SDK</code>进行实现聊天，官方也说了老版本的<code>demo</code>不会进行维护，重点维护这个<code>EaseUI</code>，但是在自己导入的时候有时会有些问题，这里用<code>1.4</code>版本的<code>AndroidStudio</code>导入<code>3.0 demo</code>来说明下；<br>首先就是打开AndroidStudio导入项目<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian010.png" alt="tupian010"><br>我喜欢给他改个名字EaseUIDemo<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian011.png" alt="tupian011"><br>导入完成<br>我这边导入时没有问题的，有时导入<code>demo</code>或者我们自己创建的项目 然后导入<code>EaseUI</code>库，并加入到自己的项目中去的时候可能会出现下边这样的错误 ，出现问题的原因的大致因为EaseUI默认引入的<code>v4</code>包的版本<code>20.0.0</code>，但是大家的开发环境不同，<code>SDK</code>版本以及编译器和<code>support</code>库版本不同，会出现错误；<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian012.png" alt="tupian012"><br>解决办法：这个时候就去点击项目设置，选中EaseUI把sdk版本设置成和<code>build.gradle</code>里一样的版本就行了，如果过低，建议更新<code>Android SDK Tool</code>，还不行，就把自己的项目的<code>SDK</code>版本和<code>EaseUI</code>都设置成一样，<code>v4</code>库也设置成一样<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian013.png" alt="tupian013"><br>设置了之后，要记得同步<code>gradle 1 or 2</code>方式都可以<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian014.png" alt="tupian014"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环信大牛最新封装了一个供开发者直接使用的&lt;code&gt;UI&lt;/code&gt;库&lt;code&gt;EaseUI&lt;/code&gt;，这个可以让大家快速的进行集成环信的&lt;code&gt;SDK&lt;/code&gt;进行实现聊天，官方也说了老版本的&lt;code&gt;demo&lt;/code&gt;不会进行维护，重点维护这个&lt;c
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="EaseUI" scheme="http://melove.net/tags/EaseUI/"/>
    
      <category term="Easemob" scheme="http://melove.net/tags/Easemob/"/>
    
  </entry>
  
  <entry>
    <title>关于新版AndroidStudio导入环信Demo的一些注意事项</title>
    <link href="http://melove.net/2015/11/android-easemob-demo-import-1447854308000.html"/>
    <id>http://melove.net/2015/11/android-easemob-demo-import-1447854308000.html</id>
    <published>2015-11-18T13:45:08.000Z</published>
    <updated>2017-02-16T09:12:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里是以AndroidStudio v1.4版本为例</p>
<p>新版<code>AndroidStudio</code>已经可以直接导入<code>eclipse</code>的项目了，具体步骤看下边（会的飘过）<br>有一点要注意：<code>AndroidStudio</code>导入<code>eclipse</code>的项目，如果项目有引入<code>library</code>项目，并且<code>library</code>项目路径正确，<code>AndroidStudio</code>在导入<code>eclipse</code>的项目的同时会自动导入<code>library</code>为<code>module</code></p>
<p>启动<code>AndroidStudio</code>进入起始页，有些设置的是启动直接打开项目了，可以在设置里先设置下：<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian000.png" alt="tupian000"></p>
<p>设置了之后，在启动就是进入到启动界面了：<br>选择<code>Import project（Eclipse ADT， Gradle， etc）</code>选项开始选择导入<code>eclipse</code>创建的<code>Android</code>项目<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian001.png" alt="tupian001"></p>
<p>然后选择项目路径，这里以最新版环信demo2.2.4为例<br>注意：环信的<code>ChatDemoUI</code>这个<code>demo</code>里边因为研发的同事为了照顾老版本的<code>AndroidStudio</code>使用者，已经用<code>eclipse</code>生成了<code>build.gradle</code>文件，所以如果要导入新版<code>AndroidStudio</code>请把<code>build.gradle</code>删除<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian002.png" alt="tupian002"><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian003.png" alt="tupian003"></p>
<p>然后选择项目目的路径（相当于工作空间，带上项目目录名）<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian004.png" alt="tupian004"><br>提示不存在，不存在就对了 ok<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian005.png" alt="tupian005"><br>继续默认 Finish<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian006.png" alt="tupian006"><br>然后就是等待，这个一般有时会卡住，因为有时需要下载gradle的包，会很慢很慢，解决办法就是自己去gradle官网去下载gradle包，至于怎么解决可以看下我的另一篇文章:<a href="http://melove.net/lzan13/develops/android-develop/androidstudio-gradle-down-error-915.html">AndroidStudio 新建及clone项目关于gradle出现的问题</a><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian007.png" alt="tupian007"></p>
<p>导入成功，打开项目就是这样了<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian008.png" alt="tupian008"><br>下边多说一句，就是如果自己创建的项目想要引用<code>EaseUI</code>这个库（不只是这个库，其他任何的<code>library</code>库），可以直接在项目界面，点击菜单栏<code>File-&gt;New-&gt;Import Module</code>然后选择<code>easeui</code>路径就ok<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian009.png" alt="tupian009"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里是以AndroidStudio v1.4版本为例&lt;/p&gt;
&lt;p&gt;新版&lt;code&gt;AndroidStudio&lt;/code&gt;已经可以直接导入&lt;code&gt;eclipse&lt;/code&gt;的项目了，具体步骤看下边（会的飘过）&lt;br&gt;有一点要注意：&lt;code&gt;AndroidStudi
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="EaseUI" scheme="http://melove.net/tags/EaseUI/"/>
    
      <category term="Easemob" scheme="http://melove.net/tags/Easemob/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio新建及clone项目关于gradle出现的问题</title>
    <link href="http://melove.net/2015/11/android-androidstudio-gradle-down-error-1447853740000.html"/>
    <id>http://melove.net/2015/11/android-androidstudio-gradle-down-error-1447853740000.html</id>
    <published>2015-11-18T13:35:40.000Z</published>
    <updated>2017-02-16T09:12:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>在我们使用<code>AndroidStudio</code>创建或者<code>clone</code>一个新的项目的时候，一般会遇到一些问题，如下图那样，一般是因为在<code>AndroidStudio</code>每次更新版本都会更新<code>Gradle</code>这个插件，但由于墙的问题每次更新都是失败，又是停止在<code>Refreshing Gradle Project</code>,有时新建项目的时候报<code>Gradle Project Compile Error</code>等等相关的问题<br>解决这些问题办法是<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian015.png" alt="tupian015"></p>
<p>打开<code>AndroidStudio</code>项目，找到项目目录<code>gradle\wrapper\gradle-wrapper.properties</code>这个文件内容如下<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#Wed Jul 08 23:06:25 CST 2015</div><div class="line">distributionBase=GRADLE_USER_HOME</div><div class="line">distributionPath=wrapper/dists</div><div class="line">zipStoreBase=GRADLE_USER_HOME</div><div class="line">zipStorePath=wrapper/dists</div><div class="line">distributionUrl=https\://services.gradle.org/distributions/gradle-2.5-all.zip</div></pre></td></tr></table></figure></p>
<p>最重要的就是最下面一句，android studio会联网下载符合当前版本的gradle插件，而这个网址虽然可以访问但速度实在太慢，所以每次下载需要花很长时间或直接超时</p>
<p>解决办法就是自己去手动下载当前项目定义的版本，可以直接复制这个路径去下载，也可以去gradle官网自己选择版本下载<br>然后把下载下来的压缩包拷贝到<code>C:\Users\lzan13\.gradle\wrapper\dists\gradle-2.5-all\d3xh0kipe7wr2bvnx5sk0hao8</code>目录下<code>后边这个长串的目录不一定相同，以自己的为准</code></p>
<p>重启<code>AndroidStudio</code>或选择工具栏<code>Tools-&gt;Android-&gt;Sync Project Gradle Files</code><br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/11/tupian016.png" alt="tupian016"><br>等待更新完成，就ok了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们使用&lt;code&gt;AndroidStudio&lt;/code&gt;创建或者&lt;code&gt;clone&lt;/code&gt;一个新的项目的时候，一般会遇到一些问题，如下图那样，一般是因为在&lt;code&gt;AndroidStudio&lt;/code&gt;每次更新版本都会更新&lt;code&gt;Gradle&lt;/co
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="Gradle" scheme="http://melove.net/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio导入第三方jar包重复加载错误解决办法</title>
    <link href="http://melove.net/2015/05/android-androidstudio-duplicate-jar-1431047621000.html"/>
    <id>http://melove.net/2015/05/android-androidstudio-duplicate-jar-1431047621000.html</id>
    <published>2015-05-08T01:13:41.000Z</published>
    <updated>2017-02-16T09:12:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在使用<code>Http</code>时需要实现文件上传，虽然可以使用<code>HttpURLConnection</code>实现原生<code>post</code>上传，不过这个好像效率很低，然后就选择网上比较多的<code>HttpClient</code>通过<code>HttpPost</code>的方式上传文件，使用这种方式的时候需要用到<code>apache</code>的一个<code>jar</code>包<code>httpmime-xxx.jar</code>这个包还依赖于<code>httpcore-xxx.jar</code>在正常的导入两个<code>jar</code>包后，满心欢喜的准备编译，可是一个蛋疼的错误蹦出来了：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Error:duplicate files during packaging of APK D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\build\outputs\apk\app-debug-unaligned.apk</div><div class="line">     Path in archive: META-INF/NOTICE</div><div class="line">     Origin <span class="number">1</span>: D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\libs\httpcore-<span class="number">4.3</span>.jar</div><div class="line">     Origin <span class="number">2</span>: D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\libs\httpmime-<span class="number">4.3</span>.1.jar</div><div class="line">You can ignore those files in your build.gradle:</div><div class="line">     android &#123;</div><div class="line">       packagingOptions &#123;</div><div class="line">         exclude <span class="string">'META-INF/DEPENDENCIES'</span></div><div class="line">         exclude <span class="string">'META-INF/NOTICE'</span></div><div class="line">         exclude <span class="string">'META-INF/LICENSE'</span></div><div class="line">       &#125;</div><div class="line">     &#125;</div><div class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':app:packageDebug'</span>.</div><div class="line">&gt; Duplicate files copied in APK META-INF/NOTICE</div><div class="line">     File <span class="number">1</span>: D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\libs\httpcore-<span class="number">4.3</span>.jar</div><div class="line">     File <span class="number">2</span>: D:\Develop\Android\workspace\androidstudio\MLTimeLine\app\libs\httpcore-<span class="number">4.3</span>.jar</div></pre></td></tr></table></figure></p>
<p>看字面意思就是说<code>jar</code>加载重复了，然后就是需要在项目的便衣文件中加入一些东西，既然能理解，就按照它提示的来嘛，<br>打开项目的<code>build.gradle</code>文件，在<code>android</code>标签下加入提示的部分，然后同步<code>gradle</code>在修改了<code>gradle</code>编译文件后<code>Androidstudio</code>右上角会有提示同步<code>gradle</code>的按钮，可以直接点击同步<code>gradle</code>配置，如果没有可以选择菜单栏里的<code>Tools - Android - Sync Project with Gradle Files</code>进行同步<br>同步完成，继续编译，duang…<br>还是那个错误，不过这次提示加入的内容不同，继续在<code>packagingOptions</code>下边添加，继续同步编译，duang…<br>继续,duang.duang.duang…<br>ok duang了三次之后算是没问题了，在编译配置文件中加入的就是这几行代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 解决重复加载第三方那个jar包问题</span></div><div class="line">packagingOptions &#123;</div><div class="line">     exclude <span class="string">'META-INF/DEPENDENCIES'</span></div><div class="line">     exclude <span class="string">'META-INF/NOTICE'</span></div><div class="line">     exclude <span class="string">'META-INF/LICENSE'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>感觉这个也是根据添加的<code>jar</code>包不同而有所不同的；不过只要跟着提示应该都可以解决的！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在使用&lt;code&gt;Http&lt;/code&gt;时需要实现文件上传，虽然可以使用&lt;code&gt;HttpURLConnection&lt;/code&gt;实现原生&lt;code&gt;post&lt;/code&gt;上传，不过这个好像效率很低，然后就选择网上比较多的&lt;code&gt;HttpClient&lt;/code&gt;
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="Duplicate" scheme="http://melove.net/tags/Duplicate/"/>
    
      <category term="HttpClient" scheme="http://melove.net/tags/HttpClient/"/>
    
      <category term="Jar" scheme="http://melove.net/tags/Jar/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio使用Gradle编译项目Failed to complete Gradle execution错误解决</title>
    <link href="http://melove.net/2015/04/android-androidstudio-gradle-error-1430201388000.html"/>
    <id>http://melove.net/2015/04/android-androidstudio-gradle-error-1430201388000.html</id>
    <published>2015-04-28T06:09:48.000Z</published>
    <updated>2017-02-16T09:12:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>在使用<code>AndroidStudio</code>构建项目时有时会提示错误<code>Failed to complete Gradle execution</code>比较蛋疼的是这个问题还不是经常的，是偶尔，不确定因素，因为不知道什么时候就出现了，运行着好好的就突然这样，重启也不行，让人抓狂！<br>结局办法就是修改醒目的配置文件：<br>下边就是项目工程配置文件<code>gradle.properties</code>，默认是全部注释掉的，<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># Project-wide Gradle settings.</div><div class="line"># IDE (e.g. Android Studio) users:</div><div class="line"># Gradle settings configured through the IDE *will override*</div><div class="line"># any settings specified in this file.</div><div class="line"></div><div class="line"># For more details on how to configure your build environment visit</div><div class="line"># http://www.gradle.org/docs/current/userguide/build_environment.html</div><div class="line"></div><div class="line"># Specifies the JVM arguments used for the daemon process.</div><div class="line"># The setting is particularly useful for tweaking memory settings.</div><div class="line"># Default value: -Xmx10248m -XX:MaxPermSize=256m</div><div class="line"># org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8</div><div class="line">org.gradle.jvmargs=-Xmx512m -XX:MaxPermSize=512m</div><div class="line"></div><div class="line"># When configured, Gradle will run in incubating parallel mode.</div><div class="line"># This option should only be used with decoupled projects. More details, visit</div><div class="line"># http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects</div><div class="line"># org.gradle.parallel=true</div></pre></td></tr></table></figure></p>
<p>加上这句话就会好了<code>org.gradle.jvmargs=-Xmx512m -XX:MaxPermSize=512m</code><br>这句话不是在<code>studio</code>的配置文件中设置的，而是在项目的配置文件<code>gradle.properties</code>中</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用&lt;code&gt;AndroidStudio&lt;/code&gt;构建项目时有时会提示错误&lt;code&gt;Failed to complete Gradle execution&lt;/code&gt;比较蛋疼的是这个问题还不是经常的，是偶尔，不确定因素，因为不知道什么时候就出现了，运行着好好的就
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://melove.net/tags/AndroidStudio/"/>
    
      <category term="Gradle" scheme="http://melove.net/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Android开发自定义ImageView控件实现圆角边框等功能</title>
    <link href="http://melove.net/2015/04/android-custom-imageview-1428116327000.html"/>
    <id>http://melove.net/2015/04/android-custom-imageview-1428116327000.html</id>
    <published>2015-04-04T02:58:47.000Z</published>
    <updated>2017-02-16T09:00:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在开发中有时我们需要一个功能，或者一个控件，但是官方的又满足不了我们的需求，此时就需要我们自己实现这些功能；<br>下边边就是我们经常会需要的一个实现了图片的圆角，以及添加边框等功能的自定义控件；文章最后有项目源码地址</p>
<p>这个自定义<code>ImageView</code>控件实现了图片的圆角、圆形、边框等功能，同时具有按下改变颜色的效果，通过属性设置可以自定义按下的颜色，<br>以及颜色的透明度；还尅定义边框的颜色<br>Demo截图：<br><img src="http://lzan13.qiniudn.com/blog/uploads/images/2015/05/device-2015-05-04-101609.png" alt="device-2015-05-04-101609"></p>
<h3 id="控件属性定义"><a href="#控件属性定义" class="headerlink" title="控件属性定义"></a>控件属性定义</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--自定义MLImageView的属性 加上了自己的前缀，防止和其他自定义控件冲突--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">"MLImageView"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_border_color"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_border_width"</span> <span class="attr">format</span>=<span class="string">"dimension"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_press_alpha"</span> <span class="attr">format</span>=<span class="string">"integer"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_press_color"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_radius"</span> <span class="attr">format</span>=<span class="string">"dimension"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"ml_shape_type"</span> <span class="attr">format</span>=<span class="string">"enum"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">enum</span> <span class="attr">name</span>=<span class="string">"none"</span> <span class="attr">value</span>=<span class="string">"0"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">enum</span> <span class="attr">name</span>=<span class="string">"round"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">enum</span> <span class="attr">name</span>=<span class="string">"rectangle"</span> <span class="attr">value</span>=<span class="string">"2"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">attr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="控件代码的实现"><a href="#控件代码的实现" class="headerlink" title="控件代码的实现"></a>控件代码的实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> net.melove.demo.chat.widget;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.content.res.TypedArray;</div><div class="line"><span class="keyword">import</span> android.graphics.Bitmap;</div><div class="line"><span class="keyword">import</span> android.graphics.Canvas;</div><div class="line"><span class="keyword">import</span> android.graphics.Matrix;</div><div class="line"><span class="keyword">import</span> android.graphics.Paint;</div><div class="line"><span class="keyword">import</span> android.graphics.PorterDuff;</div><div class="line"><span class="keyword">import</span> android.graphics.PorterDuffXfermode;</div><div class="line"><span class="keyword">import</span> android.graphics.RectF;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.BitmapDrawable;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.ColorDrawable;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</div><div class="line"><span class="keyword">import</span> android.util.AttributeSet;</div><div class="line"><span class="keyword">import</span> android.view.MotionEvent;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"></div><div class="line"><span class="keyword">import</span> net.melove.demo.chat.R;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by lzan13 on 2015/4/30.</div><div class="line"> * 自定义 ImageView 控件，实现了圆角和边框，以及按下变色</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MLImageView</span> <span class="keyword">extends</span> <span class="title">ImageView</span> </span>&#123;</div><div class="line">    <span class="comment">// 图片按下的画笔</span></div><div class="line">    <span class="keyword">private</span> Paint pressPaint;</div><div class="line">    <span class="comment">// 图片的宽高</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> width;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> height;</div><div class="line"></div><div class="line">    <span class="comment">// 定义 Bitmap 的默认配置</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Bitmap.Config BITMAP_CONFIG = Bitmap.Config.ARGB_8888;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> COLORDRAWABLE_DIMENSION = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment">// 边框颜色</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> borderColor;</div><div class="line">    <span class="comment">// 边框宽度</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> borderWidth;</div><div class="line">    <span class="comment">// 按下的透明度</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pressAlpha;</div><div class="line">    <span class="comment">// 按下的颜色</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pressColor;</div><div class="line">    <span class="comment">// 圆角半径</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> radius;</div><div class="line">    <span class="comment">// 图片类型（矩形，圆形）</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> shapeType;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MLImageView</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">        init(context, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MLImageView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">        init(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MLImageView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</div><div class="line">        init(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="comment">//初始化默认值</span></div><div class="line">        borderWidth = <span class="number">6</span>;</div><div class="line">        borderColor = <span class="number">0xddffffff</span>;</div><div class="line">        pressAlpha = <span class="number">0x42</span>;</div><div class="line">        pressColor = <span class="number">0x42000000</span>;</div><div class="line">        radius = <span class="number">16</span>;</div><div class="line">        shapeType = <span class="number">2</span>;</div><div class="line"></div><div class="line">        <span class="comment">// 获取控件的属性值</span></div><div class="line">        <span class="keyword">if</span> (attrs != <span class="keyword">null</span>) &#123;</div><div class="line">            TypedArray array = context.obtainStyledAttributes(attrs, R.styleable.MLImageView);</div><div class="line">            borderColor = array.getColor(R.styleable.MLImageView_ml_border_color, borderColor);</div><div class="line">            borderWidth = array.getDimensionPixelOffset(R.styleable.MLImageView_ml_border_width, borderWidth);</div><div class="line">            pressAlpha = array.getInteger(R.styleable.MLImageView_ml_press_alpha, pressAlpha);</div><div class="line">            pressColor = array.getColor(R.styleable.MLImageView_ml_press_color, pressColor);</div><div class="line">            radius = array.getDimensionPixelOffset(R.styleable.MLImageView_ml_radius, radius);</div><div class="line">            shapeType = array.getInteger(R.styleable.MLImageView_ml_shape_type, shapeType);</div><div class="line">            array.recycle();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 按下的画笔设置</span></div><div class="line">        pressPaint = <span class="keyword">new</span> Paint();</div><div class="line">        pressPaint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">        pressPaint.setStyle(Paint.Style.FILL);</div><div class="line">        pressPaint.setColor(pressColor);</div><div class="line">        pressPaint.setAlpha(<span class="number">0</span>);</div><div class="line">        pressPaint.setFlags(Paint.ANTI_ALIAS_FLAG);</div><div class="line"></div><div class="line">        setClickable(<span class="keyword">true</span>);</div><div class="line">        setDrawingCacheEnabled(<span class="keyword">true</span>);</div><div class="line">        setWillNotDraw(<span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (shapeType == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 获取当前控件的 drawable</span></div><div class="line">        Drawable drawable = getDrawable();</div><div class="line">        <span class="keyword">if</span> (drawable == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 这里 get 回来的宽度和高度是当前控件相对应的宽度和高度（在 xml 设置）</span></div><div class="line">        <span class="keyword">if</span> (getWidth() == <span class="number">0</span> || getHeight() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 获取 bitmap，即传入 imageview 的 bitmap</span></div><div class="line">        <span class="comment">// Bitmap bitmap = ((BitmapDrawable) ((SquaringDrawable)</span></div><div class="line">        <span class="comment">// drawable).getCurrent()).getBitmap();</span></div><div class="line">        <span class="comment">// 这里参考赵鹏的获取 bitmap 方式，因为上边的获取会导致 Glide 加载的drawable 强转为 BitmapDrawable 出错</span></div><div class="line">        Bitmap bitmap = getBitmapFromDrawable(drawable);</div><div class="line">        drawDrawable(canvas, bitmap);</div><div class="line"></div><div class="line">        drawPress(canvas);</div><div class="line">        drawBorder(canvas);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 实现圆角的绘制</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> canvas</div><div class="line">     * <span class="doctag">@param</span> bitmap</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawDrawable</span><span class="params">(Canvas canvas, Bitmap bitmap)</span> </span>&#123;</div><div class="line">        <span class="comment">// 画笔</span></div><div class="line">        Paint paint = <span class="keyword">new</span> Paint();</div><div class="line">        <span class="comment">// 颜色设置</span></div><div class="line">        paint.setColor(<span class="number">0xffffffff</span>);</div><div class="line">        <span class="comment">// 抗锯齿</span></div><div class="line">        paint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">//Paint 的 Xfermode，PorterDuff.Mode.SRC_IN 取两层图像的交集部门, 只显示上层图像。</span></div><div class="line">        PorterDuffXfermode xfermode = <span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.SRC_IN);</div><div class="line">        <span class="comment">// 标志</span></div><div class="line">        <span class="keyword">int</span> saveFlags = Canvas.MATRIX_SAVE_FLAG</div><div class="line">                | Canvas.CLIP_SAVE_FLAG</div><div class="line">                | Canvas.HAS_ALPHA_LAYER_SAVE_FLAG</div><div class="line">                | Canvas.FULL_COLOR_LAYER_SAVE_FLAG</div><div class="line">                | Canvas.CLIP_TO_LAYER_SAVE_FLAG;</div><div class="line">        canvas.saveLayer(<span class="number">0</span>, <span class="number">0</span>, width, height, <span class="keyword">null</span>, saveFlags);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (shapeType == <span class="number">1</span>) &#123;</div><div class="line">            <span class="comment">// 画遮罩，画出来就是一个和空间大小相匹配的圆（这里在半径上 -1 是为了不让图片超出边框）</span></div><div class="line">            canvas.drawCircle(width / <span class="number">2</span>, height / <span class="number">2</span>, width / <span class="number">2</span> - <span class="number">1</span>, paint);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shapeType == <span class="number">2</span>) &#123;</div><div class="line">            <span class="comment">// 当ShapeType == 2 时 图片为圆角矩形 （这里在宽高上 -1 是为了不让图片超出边框）</span></div><div class="line">            RectF rectf = <span class="keyword">new</span> RectF(<span class="number">1</span>, <span class="number">1</span>, getWidth() - <span class="number">1</span>, getHeight() - <span class="number">1</span>);</div><div class="line">            canvas.drawRoundRect(rectf, radius + <span class="number">1</span>, radius + <span class="number">1</span>, paint);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        paint.setXfermode(xfermode);</div><div class="line"></div><div class="line">        <span class="comment">// 空间的大小 / bitmap 的大小 = bitmap 缩放的倍数</span></div><div class="line">        <span class="keyword">float</span> scaleWidth = ((<span class="keyword">float</span>) getWidth()) / bitmap.getWidth();</div><div class="line">        <span class="keyword">float</span> scaleHeight = ((<span class="keyword">float</span>) getHeight()) / bitmap.getHeight();</div><div class="line"></div><div class="line">        Matrix matrix = <span class="keyword">new</span> Matrix();</div><div class="line">        matrix.postScale(scaleWidth, scaleHeight);</div><div class="line"></div><div class="line">        <span class="comment">//bitmap 缩放</span></div><div class="line">        bitmap = Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.getWidth(), bitmap.getHeight(), matrix, <span class="keyword">true</span>);</div><div class="line"></div><div class="line">        <span class="comment">//draw 上去</span></div><div class="line">        canvas.drawBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, paint);</div><div class="line">        canvas.restore();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 绘制控件的按下效果</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> canvas</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawPress</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="comment">// 这里根据类型判断绘制的效果是圆形还是矩形</span></div><div class="line">        <span class="keyword">if</span> (shapeType == <span class="number">1</span>) &#123;</div><div class="line">            <span class="comment">// 当ShapeType == 1 时 图片为圆形 （这里在半径上 -1 是为了不让图片超出边框）</span></div><div class="line">            canvas.drawCircle(width / <span class="number">2</span>, height / <span class="number">2</span>, width / <span class="number">2</span> - <span class="number">1</span>, pressPaint);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shapeType == <span class="number">2</span>) &#123;</div><div class="line">            <span class="comment">// 当ShapeType == 2 时 图片为圆角矩形 （这里在宽高上 -1 是为了不让图片超出边框）</span></div><div class="line">            RectF rectF = <span class="keyword">new</span> RectF(<span class="number">1</span>, <span class="number">1</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</div><div class="line">            canvas.drawRoundRect(rectF, radius + <span class="number">1</span>, radius + <span class="number">1</span>, pressPaint);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 绘制自定义控件边框</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> canvas</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawBorder</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (borderWidth &gt; <span class="number">0</span>) &#123;</div><div class="line">            Paint paint = <span class="keyword">new</span> Paint();</div><div class="line">            paint.setStrokeWidth(borderWidth);</div><div class="line">            paint.setStyle(Paint.Style.STROKE);</div><div class="line">            paint.setColor(borderColor);</div><div class="line">            paint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">            <span class="comment">// 根据控件类型的属性去绘制圆形或者矩形</span></div><div class="line">            <span class="keyword">if</span> (shapeType == <span class="number">1</span>) &#123;</div><div class="line">                canvas.drawCircle(width / <span class="number">2</span>, height / <span class="number">2</span>, (width - borderWidth) / <span class="number">2</span>, paint);</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shapeType == <span class="number">2</span>) &#123;</div><div class="line">                <span class="comment">// 当ShapeType = 1 时 图片为圆角矩形</span></div><div class="line">                RectF rectf = <span class="keyword">new</span> RectF(borderWidth / <span class="number">2</span>, borderWidth / <span class="number">2</span>, getWidth() - borderWidth / <span class="number">2</span>,</div><div class="line">                        getHeight() - borderWidth / <span class="number">2</span>);</div><div class="line">                canvas.drawRoundRect(rectf, radius, radius, paint);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 重写父类的 onSizeChanged 方法，检测控件宽高的变化</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> w</div><div class="line">     * <span class="doctag">@param</span> h</div><div class="line">     * <span class="doctag">@param</span> oldw</div><div class="line">     * <span class="doctag">@param</span> oldh</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</div><div class="line">        width = w;</div><div class="line">        height = h;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 重写 onTouchEvent 监听方法，用来监听自定义控件是否被触摸</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> event</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</div><div class="line">                pressPaint.setAlpha(pressAlpha);</div><div class="line">                invalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">                pressPaint.setAlpha(<span class="number">0</span>);</div><div class="line">                invalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line"></div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                pressPaint.setAlpha(<span class="number">0</span>);</div><div class="line">                invalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onTouchEvent(event);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 这里是参考其他开发者获取Bitmap内容的方法， 之前是因为没有考虑到 Glide 加载的图片</div><div class="line">     * 导致drawable 类型是属于 SquaringDrawable 类型，导致强转失败</div><div class="line">     * 这里是通过drawable不同的类型来进行获取Bitmap</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> drawable</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> Bitmap <span class="title">getBitmapFromDrawable</span><span class="params">(Drawable drawable)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Bitmap bitmap;</div><div class="line">            <span class="keyword">if</span> (drawable <span class="keyword">instanceof</span> BitmapDrawable) &#123;</div><div class="line">                <span class="keyword">return</span> ((BitmapDrawable) drawable).getBitmap();</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (drawable <span class="keyword">instanceof</span> ColorDrawable) &#123;</div><div class="line">                bitmap = Bitmap.createBitmap(COLORDRAWABLE_DIMENSION, COLORDRAWABLE_DIMENSION, BITMAP_CONFIG);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(),</div><div class="line">                        BITMAP_CONFIG);</div><div class="line">            &#125;</div><div class="line">            Canvas canvas = <span class="keyword">new</span> Canvas(bitmap);</div><div class="line">            drawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, canvas.getWidth(), canvas.getHeight());</div><div class="line">            drawable.draw(canvas);</div><div class="line">            <span class="keyword">return</span> bitmap;</div><div class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置边框颜色</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> borderColor</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBorderColor</span><span class="params">(<span class="keyword">int</span> borderColor)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.borderColor = borderColor;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置边框宽度</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> borderWidth</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBorderWidth</span><span class="params">(<span class="keyword">int</span> borderWidth)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.borderWidth = borderWidth;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置图片按下颜色透明度</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> pressAlpha</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPressAlpha</span><span class="params">(<span class="keyword">int</span> pressAlpha)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.pressAlpha = pressAlpha;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置图片按下的颜色</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> pressColor</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPressColor</span><span class="params">(<span class="keyword">int</span> pressColor)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.pressColor = pressColor;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置倒角半径</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> radius</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRadius</span><span class="params">(<span class="keyword">int</span> radius)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.radius = radius;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置形状类型</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> shapeType</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShapeType</span><span class="params">(<span class="keyword">int</span> shapeType)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.shapeType = shapeType;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="控件使用方法"><a href="#控件使用方法" class="headerlink" title="控件使用方法"></a>控件使用方法</h3><p>使用方法很简单，就像在<code>xml</code>布局文件使用其他控件你那样引用就好；如果你不想引用过多的库， 可以直接复制<code>MLImageView</code>类到自己的项目中，<br>进行修改加工，让控件和自己的项目进行整合<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">net.melove.dome.mlimageview.MLImageView</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"96dp"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"96dp"</span></div><div class="line">        <span class="attr">android:layout_margin</span>=<span class="string">"8dp"</span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@mipmap/lz_bp_blue"</span></div><div class="line">        <span class="attr">melove:border_color</span>=<span class="string">"@color/ml_white"</span></div><div class="line">        <span class="attr">melove:border_width</span>=<span class="string">"4dp"</span></div><div class="line">        <span class="attr">melove:press_alpha</span>=<span class="string">"50"</span></div><div class="line">        <span class="attr">melove:press_color</span>=<span class="string">"#00ff00"</span></div><div class="line">        <span class="attr">melove:radius</span>=<span class="string">"8dp"</span></div><div class="line">        <span class="attr">melove:shape_type</span>=<span class="string">"rectangle"</span> /&gt;</div></pre></td></tr></table></figure></p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>要记着有一点，在使用自定义控件之前一定要添加自定义命名空间（命名空间的名字可以自己定义）<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xmlns:melove="http://schemas.android.com/apk/res-auto"</div></pre></td></tr></table></figure></p>
<h3 id="项目源码"><a href="#项目源码" class="headerlink" title="项目源码"></a>项目源码</h3><p><a href="https://github.com/lzan13/MLImageViewDemo" title="自定义ImageView控件 MLImageViewDemo" target="_blank" rel="external">自定义ImageView控件 MLImageViewDemo</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在开发中有时我们需要一个功能，或者一个控件，但是官方的又满足不了我们的需求，此时就需要我们自己实现这些功能；&lt;br&gt;下边边就是我们经常会需要的一个实现了图片的圆角，以及添加边框等功能的自定义控件；文章最后有项目源码地址&lt;/p&gt;
&lt;p&gt;这个自定义&lt;code&gt;ImageView
    
    </summary>
    
      <category term="Develop" scheme="http://melove.net/categories/Develop/"/>
    
      <category term="Android" scheme="http://melove.net/categories/Develop/Android/"/>
    
    
      <category term="Android" scheme="http://melove.net/tags/Android/"/>
    
      <category term="CustomView" scheme="http://melove.net/tags/CustomView/"/>
    
      <category term="ImageView" scheme="http://melove.net/tags/ImageView/"/>
    
  </entry>
  
</feed>
